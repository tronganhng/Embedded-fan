
BaiTapLonNhung.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004624  08000110  08000110  00001110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000448  08004738  08004738  00005738  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004b80  08004b80  000061cc  2**0
                  CONTENTS
  4 .ARM          00000008  08004b80  08004b80  00005b80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004b88  08004b88  000061cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004b88  08004b88  00005b88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004b8c  08004b8c  00005b8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001cc  20000000  08004b90  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000174  200001cc  08004d5c  000061cc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000340  08004d5c  00006340  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000061cc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001a5a  00000000  00000000  000061f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000087a  00000000  00000000  00007c4f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000002f0  00000000  00000000  000084d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000219  00000000  00000000  000087c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00016cc1  00000000  00000000  000089d9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000034f3  00000000  00000000  0001f69a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00080be5  00000000  00000000  00022b8d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000a3772  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001cbc  00000000  00000000  000a37b8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000007d  00000000  00000000  000a5474  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001cc 	.word	0x200001cc
 800012c:	00000000 	.word	0x00000000
 8000130:	0800471c 	.word	0x0800471c

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001d0 	.word	0x200001d0
 800014c:	0800471c 	.word	0x0800471c

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_fmul>:
 8000160:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000164:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000168:	bf1e      	ittt	ne
 800016a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800016e:	ea92 0f0c 	teqne	r2, ip
 8000172:	ea93 0f0c 	teqne	r3, ip
 8000176:	d06f      	beq.n	8000258 <__aeabi_fmul+0xf8>
 8000178:	441a      	add	r2, r3
 800017a:	ea80 0c01 	eor.w	ip, r0, r1
 800017e:	0240      	lsls	r0, r0, #9
 8000180:	bf18      	it	ne
 8000182:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000186:	d01e      	beq.n	80001c6 <__aeabi_fmul+0x66>
 8000188:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 800018c:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000190:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000194:	fba0 3101 	umull	r3, r1, r0, r1
 8000198:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 800019c:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 80001a0:	bf3e      	ittt	cc
 80001a2:	0049      	lslcc	r1, r1, #1
 80001a4:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80001a8:	005b      	lslcc	r3, r3, #1
 80001aa:	ea40 0001 	orr.w	r0, r0, r1
 80001ae:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 80001b2:	2afd      	cmp	r2, #253	@ 0xfd
 80001b4:	d81d      	bhi.n	80001f2 <__aeabi_fmul+0x92>
 80001b6:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80001ba:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80001be:	bf08      	it	eq
 80001c0:	f020 0001 	biceq.w	r0, r0, #1
 80001c4:	4770      	bx	lr
 80001c6:	f090 0f00 	teq	r0, #0
 80001ca:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 80001ce:	bf08      	it	eq
 80001d0:	0249      	lsleq	r1, r1, #9
 80001d2:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80001d6:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80001da:	3a7f      	subs	r2, #127	@ 0x7f
 80001dc:	bfc2      	ittt	gt
 80001de:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 80001e2:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80001e6:	4770      	bxgt	lr
 80001e8:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 80001ec:	f04f 0300 	mov.w	r3, #0
 80001f0:	3a01      	subs	r2, #1
 80001f2:	dc5d      	bgt.n	80002b0 <__aeabi_fmul+0x150>
 80001f4:	f112 0f19 	cmn.w	r2, #25
 80001f8:	bfdc      	itt	le
 80001fa:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 80001fe:	4770      	bxle	lr
 8000200:	f1c2 0200 	rsb	r2, r2, #0
 8000204:	0041      	lsls	r1, r0, #1
 8000206:	fa21 f102 	lsr.w	r1, r1, r2
 800020a:	f1c2 0220 	rsb	r2, r2, #32
 800020e:	fa00 fc02 	lsl.w	ip, r0, r2
 8000212:	ea5f 0031 	movs.w	r0, r1, rrx
 8000216:	f140 0000 	adc.w	r0, r0, #0
 800021a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800021e:	bf08      	it	eq
 8000220:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000224:	4770      	bx	lr
 8000226:	f092 0f00 	teq	r2, #0
 800022a:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 800022e:	bf02      	ittt	eq
 8000230:	0040      	lsleq	r0, r0, #1
 8000232:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000236:	3a01      	subeq	r2, #1
 8000238:	d0f9      	beq.n	800022e <__aeabi_fmul+0xce>
 800023a:	ea40 000c 	orr.w	r0, r0, ip
 800023e:	f093 0f00 	teq	r3, #0
 8000242:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000246:	bf02      	ittt	eq
 8000248:	0049      	lsleq	r1, r1, #1
 800024a:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 800024e:	3b01      	subeq	r3, #1
 8000250:	d0f9      	beq.n	8000246 <__aeabi_fmul+0xe6>
 8000252:	ea41 010c 	orr.w	r1, r1, ip
 8000256:	e78f      	b.n	8000178 <__aeabi_fmul+0x18>
 8000258:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 800025c:	ea92 0f0c 	teq	r2, ip
 8000260:	bf18      	it	ne
 8000262:	ea93 0f0c 	teqne	r3, ip
 8000266:	d00a      	beq.n	800027e <__aeabi_fmul+0x11e>
 8000268:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 800026c:	bf18      	it	ne
 800026e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000272:	d1d8      	bne.n	8000226 <__aeabi_fmul+0xc6>
 8000274:	ea80 0001 	eor.w	r0, r0, r1
 8000278:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 800027c:	4770      	bx	lr
 800027e:	f090 0f00 	teq	r0, #0
 8000282:	bf17      	itett	ne
 8000284:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000288:	4608      	moveq	r0, r1
 800028a:	f091 0f00 	teqne	r1, #0
 800028e:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8000292:	d014      	beq.n	80002be <__aeabi_fmul+0x15e>
 8000294:	ea92 0f0c 	teq	r2, ip
 8000298:	d101      	bne.n	800029e <__aeabi_fmul+0x13e>
 800029a:	0242      	lsls	r2, r0, #9
 800029c:	d10f      	bne.n	80002be <__aeabi_fmul+0x15e>
 800029e:	ea93 0f0c 	teq	r3, ip
 80002a2:	d103      	bne.n	80002ac <__aeabi_fmul+0x14c>
 80002a4:	024b      	lsls	r3, r1, #9
 80002a6:	bf18      	it	ne
 80002a8:	4608      	movne	r0, r1
 80002aa:	d108      	bne.n	80002be <__aeabi_fmul+0x15e>
 80002ac:	ea80 0001 	eor.w	r0, r0, r1
 80002b0:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 80002b4:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80002b8:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 80002bc:	4770      	bx	lr
 80002be:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80002c2:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 80002c6:	4770      	bx	lr

080002c8 <__aeabi_drsub>:
 80002c8:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002cc:	e002      	b.n	80002d4 <__adddf3>
 80002ce:	bf00      	nop

080002d0 <__aeabi_dsub>:
 80002d0:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002d4 <__adddf3>:
 80002d4:	b530      	push	{r4, r5, lr}
 80002d6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002da:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002de:	ea94 0f05 	teq	r4, r5
 80002e2:	bf08      	it	eq
 80002e4:	ea90 0f02 	teqeq	r0, r2
 80002e8:	bf1f      	itttt	ne
 80002ea:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002ee:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002f2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002f6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002fa:	f000 80e2 	beq.w	80004c2 <__adddf3+0x1ee>
 80002fe:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000302:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000306:	bfb8      	it	lt
 8000308:	426d      	neglt	r5, r5
 800030a:	dd0c      	ble.n	8000326 <__adddf3+0x52>
 800030c:	442c      	add	r4, r5
 800030e:	ea80 0202 	eor.w	r2, r0, r2
 8000312:	ea81 0303 	eor.w	r3, r1, r3
 8000316:	ea82 0000 	eor.w	r0, r2, r0
 800031a:	ea83 0101 	eor.w	r1, r3, r1
 800031e:	ea80 0202 	eor.w	r2, r0, r2
 8000322:	ea81 0303 	eor.w	r3, r1, r3
 8000326:	2d36      	cmp	r5, #54	@ 0x36
 8000328:	bf88      	it	hi
 800032a:	bd30      	pophi	{r4, r5, pc}
 800032c:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000330:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000334:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000338:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800033c:	d002      	beq.n	8000344 <__adddf3+0x70>
 800033e:	4240      	negs	r0, r0
 8000340:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000344:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000348:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800034c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000350:	d002      	beq.n	8000358 <__adddf3+0x84>
 8000352:	4252      	negs	r2, r2
 8000354:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000358:	ea94 0f05 	teq	r4, r5
 800035c:	f000 80a7 	beq.w	80004ae <__adddf3+0x1da>
 8000360:	f1a4 0401 	sub.w	r4, r4, #1
 8000364:	f1d5 0e20 	rsbs	lr, r5, #32
 8000368:	db0d      	blt.n	8000386 <__adddf3+0xb2>
 800036a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800036e:	fa22 f205 	lsr.w	r2, r2, r5
 8000372:	1880      	adds	r0, r0, r2
 8000374:	f141 0100 	adc.w	r1, r1, #0
 8000378:	fa03 f20e 	lsl.w	r2, r3, lr
 800037c:	1880      	adds	r0, r0, r2
 800037e:	fa43 f305 	asr.w	r3, r3, r5
 8000382:	4159      	adcs	r1, r3
 8000384:	e00e      	b.n	80003a4 <__adddf3+0xd0>
 8000386:	f1a5 0520 	sub.w	r5, r5, #32
 800038a:	f10e 0e20 	add.w	lr, lr, #32
 800038e:	2a01      	cmp	r2, #1
 8000390:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000394:	bf28      	it	cs
 8000396:	f04c 0c02 	orrcs.w	ip, ip, #2
 800039a:	fa43 f305 	asr.w	r3, r3, r5
 800039e:	18c0      	adds	r0, r0, r3
 80003a0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80003a4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003a8:	d507      	bpl.n	80003ba <__adddf3+0xe6>
 80003aa:	f04f 0e00 	mov.w	lr, #0
 80003ae:	f1dc 0c00 	rsbs	ip, ip, #0
 80003b2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003b6:	eb6e 0101 	sbc.w	r1, lr, r1
 80003ba:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003be:	d31b      	bcc.n	80003f8 <__adddf3+0x124>
 80003c0:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003c4:	d30c      	bcc.n	80003e0 <__adddf3+0x10c>
 80003c6:	0849      	lsrs	r1, r1, #1
 80003c8:	ea5f 0030 	movs.w	r0, r0, rrx
 80003cc:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003d0:	f104 0401 	add.w	r4, r4, #1
 80003d4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d8:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003dc:	f080 809a 	bcs.w	8000514 <__adddf3+0x240>
 80003e0:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003e4:	bf08      	it	eq
 80003e6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003ea:	f150 0000 	adcs.w	r0, r0, #0
 80003ee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003f2:	ea41 0105 	orr.w	r1, r1, r5
 80003f6:	bd30      	pop	{r4, r5, pc}
 80003f8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003fc:	4140      	adcs	r0, r0
 80003fe:	eb41 0101 	adc.w	r1, r1, r1
 8000402:	3c01      	subs	r4, #1
 8000404:	bf28      	it	cs
 8000406:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800040a:	d2e9      	bcs.n	80003e0 <__adddf3+0x10c>
 800040c:	f091 0f00 	teq	r1, #0
 8000410:	bf04      	itt	eq
 8000412:	4601      	moveq	r1, r0
 8000414:	2000      	moveq	r0, #0
 8000416:	fab1 f381 	clz	r3, r1
 800041a:	bf08      	it	eq
 800041c:	3320      	addeq	r3, #32
 800041e:	f1a3 030b 	sub.w	r3, r3, #11
 8000422:	f1b3 0220 	subs.w	r2, r3, #32
 8000426:	da0c      	bge.n	8000442 <__adddf3+0x16e>
 8000428:	320c      	adds	r2, #12
 800042a:	dd08      	ble.n	800043e <__adddf3+0x16a>
 800042c:	f102 0c14 	add.w	ip, r2, #20
 8000430:	f1c2 020c 	rsb	r2, r2, #12
 8000434:	fa01 f00c 	lsl.w	r0, r1, ip
 8000438:	fa21 f102 	lsr.w	r1, r1, r2
 800043c:	e00c      	b.n	8000458 <__adddf3+0x184>
 800043e:	f102 0214 	add.w	r2, r2, #20
 8000442:	bfd8      	it	le
 8000444:	f1c2 0c20 	rsble	ip, r2, #32
 8000448:	fa01 f102 	lsl.w	r1, r1, r2
 800044c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000450:	bfdc      	itt	le
 8000452:	ea41 010c 	orrle.w	r1, r1, ip
 8000456:	4090      	lslle	r0, r2
 8000458:	1ae4      	subs	r4, r4, r3
 800045a:	bfa2      	ittt	ge
 800045c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000460:	4329      	orrge	r1, r5
 8000462:	bd30      	popge	{r4, r5, pc}
 8000464:	ea6f 0404 	mvn.w	r4, r4
 8000468:	3c1f      	subs	r4, #31
 800046a:	da1c      	bge.n	80004a6 <__adddf3+0x1d2>
 800046c:	340c      	adds	r4, #12
 800046e:	dc0e      	bgt.n	800048e <__adddf3+0x1ba>
 8000470:	f104 0414 	add.w	r4, r4, #20
 8000474:	f1c4 0220 	rsb	r2, r4, #32
 8000478:	fa20 f004 	lsr.w	r0, r0, r4
 800047c:	fa01 f302 	lsl.w	r3, r1, r2
 8000480:	ea40 0003 	orr.w	r0, r0, r3
 8000484:	fa21 f304 	lsr.w	r3, r1, r4
 8000488:	ea45 0103 	orr.w	r1, r5, r3
 800048c:	bd30      	pop	{r4, r5, pc}
 800048e:	f1c4 040c 	rsb	r4, r4, #12
 8000492:	f1c4 0220 	rsb	r2, r4, #32
 8000496:	fa20 f002 	lsr.w	r0, r0, r2
 800049a:	fa01 f304 	lsl.w	r3, r1, r4
 800049e:	ea40 0003 	orr.w	r0, r0, r3
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	fa21 f004 	lsr.w	r0, r1, r4
 80004aa:	4629      	mov	r1, r5
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	f094 0f00 	teq	r4, #0
 80004b2:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004b6:	bf06      	itte	eq
 80004b8:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004bc:	3401      	addeq	r4, #1
 80004be:	3d01      	subne	r5, #1
 80004c0:	e74e      	b.n	8000360 <__adddf3+0x8c>
 80004c2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004c6:	bf18      	it	ne
 80004c8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004cc:	d029      	beq.n	8000522 <__adddf3+0x24e>
 80004ce:	ea94 0f05 	teq	r4, r5
 80004d2:	bf08      	it	eq
 80004d4:	ea90 0f02 	teqeq	r0, r2
 80004d8:	d005      	beq.n	80004e6 <__adddf3+0x212>
 80004da:	ea54 0c00 	orrs.w	ip, r4, r0
 80004de:	bf04      	itt	eq
 80004e0:	4619      	moveq	r1, r3
 80004e2:	4610      	moveq	r0, r2
 80004e4:	bd30      	pop	{r4, r5, pc}
 80004e6:	ea91 0f03 	teq	r1, r3
 80004ea:	bf1e      	ittt	ne
 80004ec:	2100      	movne	r1, #0
 80004ee:	2000      	movne	r0, #0
 80004f0:	bd30      	popne	{r4, r5, pc}
 80004f2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004f6:	d105      	bne.n	8000504 <__adddf3+0x230>
 80004f8:	0040      	lsls	r0, r0, #1
 80004fa:	4149      	adcs	r1, r1
 80004fc:	bf28      	it	cs
 80004fe:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000502:	bd30      	pop	{r4, r5, pc}
 8000504:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000508:	bf3c      	itt	cc
 800050a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800050e:	bd30      	popcc	{r4, r5, pc}
 8000510:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000514:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000518:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800051c:	f04f 0000 	mov.w	r0, #0
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000526:	bf1a      	itte	ne
 8000528:	4619      	movne	r1, r3
 800052a:	4610      	movne	r0, r2
 800052c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000530:	bf1c      	itt	ne
 8000532:	460b      	movne	r3, r1
 8000534:	4602      	movne	r2, r0
 8000536:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800053a:	bf06      	itte	eq
 800053c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000540:	ea91 0f03 	teqeq	r1, r3
 8000544:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000548:	bd30      	pop	{r4, r5, pc}
 800054a:	bf00      	nop

0800054c <__aeabi_ui2d>:
 800054c:	f090 0f00 	teq	r0, #0
 8000550:	bf04      	itt	eq
 8000552:	2100      	moveq	r1, #0
 8000554:	4770      	bxeq	lr
 8000556:	b530      	push	{r4, r5, lr}
 8000558:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800055c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000560:	f04f 0500 	mov.w	r5, #0
 8000564:	f04f 0100 	mov.w	r1, #0
 8000568:	e750      	b.n	800040c <__adddf3+0x138>
 800056a:	bf00      	nop

0800056c <__aeabi_i2d>:
 800056c:	f090 0f00 	teq	r0, #0
 8000570:	bf04      	itt	eq
 8000572:	2100      	moveq	r1, #0
 8000574:	4770      	bxeq	lr
 8000576:	b530      	push	{r4, r5, lr}
 8000578:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800057c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000580:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 8000584:	bf48      	it	mi
 8000586:	4240      	negmi	r0, r0
 8000588:	f04f 0100 	mov.w	r1, #0
 800058c:	e73e      	b.n	800040c <__adddf3+0x138>
 800058e:	bf00      	nop

08000590 <__aeabi_f2d>:
 8000590:	0042      	lsls	r2, r0, #1
 8000592:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000596:	ea4f 0131 	mov.w	r1, r1, rrx
 800059a:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800059e:	bf1f      	itttt	ne
 80005a0:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80005a4:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005a8:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005ac:	4770      	bxne	lr
 80005ae:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005b2:	bf08      	it	eq
 80005b4:	4770      	bxeq	lr
 80005b6:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005ba:	bf04      	itt	eq
 80005bc:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005c0:	4770      	bxeq	lr
 80005c2:	b530      	push	{r4, r5, lr}
 80005c4:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005cc:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005d0:	e71c      	b.n	800040c <__adddf3+0x138>
 80005d2:	bf00      	nop

080005d4 <__aeabi_ul2d>:
 80005d4:	ea50 0201 	orrs.w	r2, r0, r1
 80005d8:	bf08      	it	eq
 80005da:	4770      	bxeq	lr
 80005dc:	b530      	push	{r4, r5, lr}
 80005de:	f04f 0500 	mov.w	r5, #0
 80005e2:	e00a      	b.n	80005fa <__aeabi_l2d+0x16>

080005e4 <__aeabi_l2d>:
 80005e4:	ea50 0201 	orrs.w	r2, r0, r1
 80005e8:	bf08      	it	eq
 80005ea:	4770      	bxeq	lr
 80005ec:	b530      	push	{r4, r5, lr}
 80005ee:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005f2:	d502      	bpl.n	80005fa <__aeabi_l2d+0x16>
 80005f4:	4240      	negs	r0, r0
 80005f6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005fa:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005fe:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000602:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000606:	f43f aed8 	beq.w	80003ba <__adddf3+0xe6>
 800060a:	f04f 0203 	mov.w	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800061a:	bf18      	it	ne
 800061c:	3203      	addne	r2, #3
 800061e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000622:	f1c2 0320 	rsb	r3, r2, #32
 8000626:	fa00 fc03 	lsl.w	ip, r0, r3
 800062a:	fa20 f002 	lsr.w	r0, r0, r2
 800062e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000632:	ea40 000e 	orr.w	r0, r0, lr
 8000636:	fa21 f102 	lsr.w	r1, r1, r2
 800063a:	4414      	add	r4, r2
 800063c:	e6bd      	b.n	80003ba <__adddf3+0xe6>
 800063e:	bf00      	nop

08000640 <__aeabi_dmul>:
 8000640:	b570      	push	{r4, r5, r6, lr}
 8000642:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000646:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800064a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800064e:	bf1d      	ittte	ne
 8000650:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000654:	ea94 0f0c 	teqne	r4, ip
 8000658:	ea95 0f0c 	teqne	r5, ip
 800065c:	f000 f8de 	bleq	800081c <__aeabi_dmul+0x1dc>
 8000660:	442c      	add	r4, r5
 8000662:	ea81 0603 	eor.w	r6, r1, r3
 8000666:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800066a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800066e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000672:	bf18      	it	ne
 8000674:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000678:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800067c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000680:	d038      	beq.n	80006f4 <__aeabi_dmul+0xb4>
 8000682:	fba0 ce02 	umull	ip, lr, r0, r2
 8000686:	f04f 0500 	mov.w	r5, #0
 800068a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800068e:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 8000692:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000696:	f04f 0600 	mov.w	r6, #0
 800069a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800069e:	f09c 0f00 	teq	ip, #0
 80006a2:	bf18      	it	ne
 80006a4:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006ac:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006b0:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006b4:	d204      	bcs.n	80006c0 <__aeabi_dmul+0x80>
 80006b6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006ba:	416d      	adcs	r5, r5
 80006bc:	eb46 0606 	adc.w	r6, r6, r6
 80006c0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006c4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006cc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006d0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006d4:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006d8:	bf88      	it	hi
 80006da:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006de:	d81e      	bhi.n	800071e <__aeabi_dmul+0xde>
 80006e0:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006e4:	bf08      	it	eq
 80006e6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006ea:	f150 0000 	adcs.w	r0, r0, #0
 80006ee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006f2:	bd70      	pop	{r4, r5, r6, pc}
 80006f4:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006f8:	ea46 0101 	orr.w	r1, r6, r1
 80006fc:	ea40 0002 	orr.w	r0, r0, r2
 8000700:	ea81 0103 	eor.w	r1, r1, r3
 8000704:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000708:	bfc2      	ittt	gt
 800070a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800070e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000712:	bd70      	popgt	{r4, r5, r6, pc}
 8000714:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000718:	f04f 0e00 	mov.w	lr, #0
 800071c:	3c01      	subs	r4, #1
 800071e:	f300 80ab 	bgt.w	8000878 <__aeabi_dmul+0x238>
 8000722:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000726:	bfde      	ittt	le
 8000728:	2000      	movle	r0, #0
 800072a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800072e:	bd70      	pople	{r4, r5, r6, pc}
 8000730:	f1c4 0400 	rsb	r4, r4, #0
 8000734:	3c20      	subs	r4, #32
 8000736:	da35      	bge.n	80007a4 <__aeabi_dmul+0x164>
 8000738:	340c      	adds	r4, #12
 800073a:	dc1b      	bgt.n	8000774 <__aeabi_dmul+0x134>
 800073c:	f104 0414 	add.w	r4, r4, #20
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f305 	lsl.w	r3, r0, r5
 8000748:	fa20 f004 	lsr.w	r0, r0, r4
 800074c:	fa01 f205 	lsl.w	r2, r1, r5
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000758:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800075c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000760:	fa21 f604 	lsr.w	r6, r1, r4
 8000764:	eb42 0106 	adc.w	r1, r2, r6
 8000768:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800076c:	bf08      	it	eq
 800076e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000772:	bd70      	pop	{r4, r5, r6, pc}
 8000774:	f1c4 040c 	rsb	r4, r4, #12
 8000778:	f1c4 0520 	rsb	r5, r4, #32
 800077c:	fa00 f304 	lsl.w	r3, r0, r4
 8000780:	fa20 f005 	lsr.w	r0, r0, r5
 8000784:	fa01 f204 	lsl.w	r2, r1, r4
 8000788:	ea40 0002 	orr.w	r0, r0, r2
 800078c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000790:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000794:	f141 0100 	adc.w	r1, r1, #0
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f1c4 0520 	rsb	r5, r4, #32
 80007a8:	fa00 f205 	lsl.w	r2, r0, r5
 80007ac:	ea4e 0e02 	orr.w	lr, lr, r2
 80007b0:	fa20 f304 	lsr.w	r3, r0, r4
 80007b4:	fa01 f205 	lsl.w	r2, r1, r5
 80007b8:	ea43 0302 	orr.w	r3, r3, r2
 80007bc:	fa21 f004 	lsr.w	r0, r1, r4
 80007c0:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007c4:	fa21 f204 	lsr.w	r2, r1, r4
 80007c8:	ea20 0002 	bic.w	r0, r0, r2
 80007cc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007d0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007d4:	bf08      	it	eq
 80007d6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007da:	bd70      	pop	{r4, r5, r6, pc}
 80007dc:	f094 0f00 	teq	r4, #0
 80007e0:	d10f      	bne.n	8000802 <__aeabi_dmul+0x1c2>
 80007e2:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007e6:	0040      	lsls	r0, r0, #1
 80007e8:	eb41 0101 	adc.w	r1, r1, r1
 80007ec:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007f0:	bf08      	it	eq
 80007f2:	3c01      	subeq	r4, #1
 80007f4:	d0f7      	beq.n	80007e6 <__aeabi_dmul+0x1a6>
 80007f6:	ea41 0106 	orr.w	r1, r1, r6
 80007fa:	f095 0f00 	teq	r5, #0
 80007fe:	bf18      	it	ne
 8000800:	4770      	bxne	lr
 8000802:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000806:	0052      	lsls	r2, r2, #1
 8000808:	eb43 0303 	adc.w	r3, r3, r3
 800080c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000810:	bf08      	it	eq
 8000812:	3d01      	subeq	r5, #1
 8000814:	d0f7      	beq.n	8000806 <__aeabi_dmul+0x1c6>
 8000816:	ea43 0306 	orr.w	r3, r3, r6
 800081a:	4770      	bx	lr
 800081c:	ea94 0f0c 	teq	r4, ip
 8000820:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000824:	bf18      	it	ne
 8000826:	ea95 0f0c 	teqne	r5, ip
 800082a:	d00c      	beq.n	8000846 <__aeabi_dmul+0x206>
 800082c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000830:	bf18      	it	ne
 8000832:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000836:	d1d1      	bne.n	80007dc <__aeabi_dmul+0x19c>
 8000838:	ea81 0103 	eor.w	r1, r1, r3
 800083c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000840:	f04f 0000 	mov.w	r0, #0
 8000844:	bd70      	pop	{r4, r5, r6, pc}
 8000846:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800084a:	bf06      	itte	eq
 800084c:	4610      	moveq	r0, r2
 800084e:	4619      	moveq	r1, r3
 8000850:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000854:	d019      	beq.n	800088a <__aeabi_dmul+0x24a>
 8000856:	ea94 0f0c 	teq	r4, ip
 800085a:	d102      	bne.n	8000862 <__aeabi_dmul+0x222>
 800085c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000860:	d113      	bne.n	800088a <__aeabi_dmul+0x24a>
 8000862:	ea95 0f0c 	teq	r5, ip
 8000866:	d105      	bne.n	8000874 <__aeabi_dmul+0x234>
 8000868:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800086c:	bf1c      	itt	ne
 800086e:	4610      	movne	r0, r2
 8000870:	4619      	movne	r1, r3
 8000872:	d10a      	bne.n	800088a <__aeabi_dmul+0x24a>
 8000874:	ea81 0103 	eor.w	r1, r1, r3
 8000878:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800087c:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000880:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000884:	f04f 0000 	mov.w	r0, #0
 8000888:	bd70      	pop	{r4, r5, r6, pc}
 800088a:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 800088e:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 8000892:	bd70      	pop	{r4, r5, r6, pc}

08000894 <__aeabi_ddiv>:
 8000894:	b570      	push	{r4, r5, r6, lr}
 8000896:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800089a:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800089e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80008a2:	bf1d      	ittte	ne
 80008a4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a8:	ea94 0f0c 	teqne	r4, ip
 80008ac:	ea95 0f0c 	teqne	r5, ip
 80008b0:	f000 f8a7 	bleq	8000a02 <__aeabi_ddiv+0x16e>
 80008b4:	eba4 0405 	sub.w	r4, r4, r5
 80008b8:	ea81 0e03 	eor.w	lr, r1, r3
 80008bc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008c0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008c4:	f000 8088 	beq.w	80009d8 <__aeabi_ddiv+0x144>
 80008c8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008cc:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008d0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008d4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d8:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008dc:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008e0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008e4:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e8:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008ec:	429d      	cmp	r5, r3
 80008ee:	bf08      	it	eq
 80008f0:	4296      	cmpeq	r6, r2
 80008f2:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008f6:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008fa:	d202      	bcs.n	8000902 <__aeabi_ddiv+0x6e>
 80008fc:	085b      	lsrs	r3, r3, #1
 80008fe:	ea4f 0232 	mov.w	r2, r2, rrx
 8000902:	1ab6      	subs	r6, r6, r2
 8000904:	eb65 0503 	sbc.w	r5, r5, r3
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8000912:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 000c 	orrcs.w	r0, r0, ip
 8000928:	085b      	lsrs	r3, r3, #1
 800092a:	ea4f 0232 	mov.w	r2, r2, rrx
 800092e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000932:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000936:	bf22      	ittt	cs
 8000938:	1ab6      	subcs	r6, r6, r2
 800093a:	4675      	movcs	r5, lr
 800093c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000940:	085b      	lsrs	r3, r3, #1
 8000942:	ea4f 0232 	mov.w	r2, r2, rrx
 8000946:	ebb6 0e02 	subs.w	lr, r6, r2
 800094a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800094e:	bf22      	ittt	cs
 8000950:	1ab6      	subcs	r6, r6, r2
 8000952:	4675      	movcs	r5, lr
 8000954:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000958:	085b      	lsrs	r3, r3, #1
 800095a:	ea4f 0232 	mov.w	r2, r2, rrx
 800095e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000962:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000966:	bf22      	ittt	cs
 8000968:	1ab6      	subcs	r6, r6, r2
 800096a:	4675      	movcs	r5, lr
 800096c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000970:	ea55 0e06 	orrs.w	lr, r5, r6
 8000974:	d018      	beq.n	80009a8 <__aeabi_ddiv+0x114>
 8000976:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800097a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800097e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000982:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000986:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800098a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800098e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000992:	d1c0      	bne.n	8000916 <__aeabi_ddiv+0x82>
 8000994:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000998:	d10b      	bne.n	80009b2 <__aeabi_ddiv+0x11e>
 800099a:	ea41 0100 	orr.w	r1, r1, r0
 800099e:	f04f 0000 	mov.w	r0, #0
 80009a2:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80009a6:	e7b6      	b.n	8000916 <__aeabi_ddiv+0x82>
 80009a8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009ac:	bf04      	itt	eq
 80009ae:	4301      	orreq	r1, r0
 80009b0:	2000      	moveq	r0, #0
 80009b2:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009b6:	bf88      	it	hi
 80009b8:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009bc:	f63f aeaf 	bhi.w	800071e <__aeabi_dmul+0xde>
 80009c0:	ebb5 0c03 	subs.w	ip, r5, r3
 80009c4:	bf04      	itt	eq
 80009c6:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009ca:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009ce:	f150 0000 	adcs.w	r0, r0, #0
 80009d2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009d6:	bd70      	pop	{r4, r5, r6, pc}
 80009d8:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009dc:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009e0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009e4:	bfc2      	ittt	gt
 80009e6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009ea:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009ee:	bd70      	popgt	{r4, r5, r6, pc}
 80009f0:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009f4:	f04f 0e00 	mov.w	lr, #0
 80009f8:	3c01      	subs	r4, #1
 80009fa:	e690      	b.n	800071e <__aeabi_dmul+0xde>
 80009fc:	ea45 0e06 	orr.w	lr, r5, r6
 8000a00:	e68d      	b.n	800071e <__aeabi_dmul+0xde>
 8000a02:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a06:	ea94 0f0c 	teq	r4, ip
 8000a0a:	bf08      	it	eq
 8000a0c:	ea95 0f0c 	teqeq	r5, ip
 8000a10:	f43f af3b 	beq.w	800088a <__aeabi_dmul+0x24a>
 8000a14:	ea94 0f0c 	teq	r4, ip
 8000a18:	d10a      	bne.n	8000a30 <__aeabi_ddiv+0x19c>
 8000a1a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a1e:	f47f af34 	bne.w	800088a <__aeabi_dmul+0x24a>
 8000a22:	ea95 0f0c 	teq	r5, ip
 8000a26:	f47f af25 	bne.w	8000874 <__aeabi_dmul+0x234>
 8000a2a:	4610      	mov	r0, r2
 8000a2c:	4619      	mov	r1, r3
 8000a2e:	e72c      	b.n	800088a <__aeabi_dmul+0x24a>
 8000a30:	ea95 0f0c 	teq	r5, ip
 8000a34:	d106      	bne.n	8000a44 <__aeabi_ddiv+0x1b0>
 8000a36:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a3a:	f43f aefd 	beq.w	8000838 <__aeabi_dmul+0x1f8>
 8000a3e:	4610      	mov	r0, r2
 8000a40:	4619      	mov	r1, r3
 8000a42:	e722      	b.n	800088a <__aeabi_dmul+0x24a>
 8000a44:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a48:	bf18      	it	ne
 8000a4a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a4e:	f47f aec5 	bne.w	80007dc <__aeabi_dmul+0x19c>
 8000a52:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a56:	f47f af0d 	bne.w	8000874 <__aeabi_dmul+0x234>
 8000a5a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a5e:	f47f aeeb 	bne.w	8000838 <__aeabi_dmul+0x1f8>
 8000a62:	e712      	b.n	800088a <__aeabi_dmul+0x24a>

08000a64 <__gedf2>:
 8000a64:	f04f 3cff 	mov.w	ip, #4294967295
 8000a68:	e006      	b.n	8000a78 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__ledf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	e002      	b.n	8000a78 <__cmpdf2+0x4>
 8000a72:	bf00      	nop

08000a74 <__cmpdf2>:
 8000a74:	f04f 0c01 	mov.w	ip, #1
 8000a78:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a7c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a84:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a88:	bf18      	it	ne
 8000a8a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a8e:	d01b      	beq.n	8000ac8 <__cmpdf2+0x54>
 8000a90:	b001      	add	sp, #4
 8000a92:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a96:	bf0c      	ite	eq
 8000a98:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a9c:	ea91 0f03 	teqne	r1, r3
 8000aa0:	bf02      	ittt	eq
 8000aa2:	ea90 0f02 	teqeq	r0, r2
 8000aa6:	2000      	moveq	r0, #0
 8000aa8:	4770      	bxeq	lr
 8000aaa:	f110 0f00 	cmn.w	r0, #0
 8000aae:	ea91 0f03 	teq	r1, r3
 8000ab2:	bf58      	it	pl
 8000ab4:	4299      	cmppl	r1, r3
 8000ab6:	bf08      	it	eq
 8000ab8:	4290      	cmpeq	r0, r2
 8000aba:	bf2c      	ite	cs
 8000abc:	17d8      	asrcs	r0, r3, #31
 8000abe:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000ac2:	f040 0001 	orr.w	r0, r0, #1
 8000ac6:	4770      	bx	lr
 8000ac8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000acc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad0:	d102      	bne.n	8000ad8 <__cmpdf2+0x64>
 8000ad2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ad6:	d107      	bne.n	8000ae8 <__cmpdf2+0x74>
 8000ad8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000adc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ae0:	d1d6      	bne.n	8000a90 <__cmpdf2+0x1c>
 8000ae2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ae6:	d0d3      	beq.n	8000a90 <__cmpdf2+0x1c>
 8000ae8:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aec:	4770      	bx	lr
 8000aee:	bf00      	nop

08000af0 <__aeabi_cdrcmple>:
 8000af0:	4684      	mov	ip, r0
 8000af2:	4610      	mov	r0, r2
 8000af4:	4662      	mov	r2, ip
 8000af6:	468c      	mov	ip, r1
 8000af8:	4619      	mov	r1, r3
 8000afa:	4663      	mov	r3, ip
 8000afc:	e000      	b.n	8000b00 <__aeabi_cdcmpeq>
 8000afe:	bf00      	nop

08000b00 <__aeabi_cdcmpeq>:
 8000b00:	b501      	push	{r0, lr}
 8000b02:	f7ff ffb7 	bl	8000a74 <__cmpdf2>
 8000b06:	2800      	cmp	r0, #0
 8000b08:	bf48      	it	mi
 8000b0a:	f110 0f00 	cmnmi.w	r0, #0
 8000b0e:	bd01      	pop	{r0, pc}

08000b10 <__aeabi_dcmpeq>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff fff4 	bl	8000b00 <__aeabi_cdcmpeq>
 8000b18:	bf0c      	ite	eq
 8000b1a:	2001      	moveq	r0, #1
 8000b1c:	2000      	movne	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmplt>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffea 	bl	8000b00 <__aeabi_cdcmpeq>
 8000b2c:	bf34      	ite	cc
 8000b2e:	2001      	movcc	r0, #1
 8000b30:	2000      	movcs	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmple>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffe0 	bl	8000b00 <__aeabi_cdcmpeq>
 8000b40:	bf94      	ite	ls
 8000b42:	2001      	movls	r0, #1
 8000b44:	2000      	movhi	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpge>:
 8000b4c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b50:	f7ff ffce 	bl	8000af0 <__aeabi_cdrcmple>
 8000b54:	bf94      	ite	ls
 8000b56:	2001      	movls	r0, #1
 8000b58:	2000      	movhi	r0, #0
 8000b5a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b5e:	bf00      	nop

08000b60 <__aeabi_dcmpgt>:
 8000b60:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b64:	f7ff ffc4 	bl	8000af0 <__aeabi_cdrcmple>
 8000b68:	bf34      	ite	cc
 8000b6a:	2001      	movcc	r0, #1
 8000b6c:	2000      	movcs	r0, #0
 8000b6e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b72:	bf00      	nop

08000b74 <__aeabi_dcmpun>:
 8000b74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b7c:	d102      	bne.n	8000b84 <__aeabi_dcmpun+0x10>
 8000b7e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b82:	d10a      	bne.n	8000b9a <__aeabi_dcmpun+0x26>
 8000b84:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b8c:	d102      	bne.n	8000b94 <__aeabi_dcmpun+0x20>
 8000b8e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b92:	d102      	bne.n	8000b9a <__aeabi_dcmpun+0x26>
 8000b94:	f04f 0000 	mov.w	r0, #0
 8000b98:	4770      	bx	lr
 8000b9a:	f04f 0001 	mov.w	r0, #1
 8000b9e:	4770      	bx	lr

08000ba0 <__aeabi_d2iz>:
 8000ba0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ba4:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ba8:	d215      	bcs.n	8000bd6 <__aeabi_d2iz+0x36>
 8000baa:	d511      	bpl.n	8000bd0 <__aeabi_d2iz+0x30>
 8000bac:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bb0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bb4:	d912      	bls.n	8000bdc <__aeabi_d2iz+0x3c>
 8000bb6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bba:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bbe:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bc2:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bc6:	fa23 f002 	lsr.w	r0, r3, r2
 8000bca:	bf18      	it	ne
 8000bcc:	4240      	negne	r0, r0
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d105      	bne.n	8000be8 <__aeabi_d2iz+0x48>
 8000bdc:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000be0:	bf08      	it	eq
 8000be2:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000be6:	4770      	bx	lr
 8000be8:	f04f 0000 	mov.w	r0, #0
 8000bec:	4770      	bx	lr
 8000bee:	bf00      	nop

08000bf0 <__aeabi_frsub>:
 8000bf0:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000bf4:	e002      	b.n	8000bfc <__addsf3>
 8000bf6:	bf00      	nop

08000bf8 <__aeabi_fsub>:
 8000bf8:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000bfc <__addsf3>:
 8000bfc:	0042      	lsls	r2, r0, #1
 8000bfe:	bf1f      	itttt	ne
 8000c00:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000c04:	ea92 0f03 	teqne	r2, r3
 8000c08:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000c0c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c10:	d06a      	beq.n	8000ce8 <__addsf3+0xec>
 8000c12:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000c16:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000c1a:	bfc1      	itttt	gt
 8000c1c:	18d2      	addgt	r2, r2, r3
 8000c1e:	4041      	eorgt	r1, r0
 8000c20:	4048      	eorgt	r0, r1
 8000c22:	4041      	eorgt	r1, r0
 8000c24:	bfb8      	it	lt
 8000c26:	425b      	neglt	r3, r3
 8000c28:	2b19      	cmp	r3, #25
 8000c2a:	bf88      	it	hi
 8000c2c:	4770      	bxhi	lr
 8000c2e:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000c32:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c36:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000c3a:	bf18      	it	ne
 8000c3c:	4240      	negne	r0, r0
 8000c3e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000c42:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000c46:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000c4a:	bf18      	it	ne
 8000c4c:	4249      	negne	r1, r1
 8000c4e:	ea92 0f03 	teq	r2, r3
 8000c52:	d03f      	beq.n	8000cd4 <__addsf3+0xd8>
 8000c54:	f1a2 0201 	sub.w	r2, r2, #1
 8000c58:	fa41 fc03 	asr.w	ip, r1, r3
 8000c5c:	eb10 000c 	adds.w	r0, r0, ip
 8000c60:	f1c3 0320 	rsb	r3, r3, #32
 8000c64:	fa01 f103 	lsl.w	r1, r1, r3
 8000c68:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000c6c:	d502      	bpl.n	8000c74 <__addsf3+0x78>
 8000c6e:	4249      	negs	r1, r1
 8000c70:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c74:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000c78:	d313      	bcc.n	8000ca2 <__addsf3+0xa6>
 8000c7a:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000c7e:	d306      	bcc.n	8000c8e <__addsf3+0x92>
 8000c80:	0840      	lsrs	r0, r0, #1
 8000c82:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c86:	f102 0201 	add.w	r2, r2, #1
 8000c8a:	2afe      	cmp	r2, #254	@ 0xfe
 8000c8c:	d251      	bcs.n	8000d32 <__addsf3+0x136>
 8000c8e:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000c92:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c96:	bf08      	it	eq
 8000c98:	f020 0001 	biceq.w	r0, r0, #1
 8000c9c:	ea40 0003 	orr.w	r0, r0, r3
 8000ca0:	4770      	bx	lr
 8000ca2:	0049      	lsls	r1, r1, #1
 8000ca4:	eb40 0000 	adc.w	r0, r0, r0
 8000ca8:	3a01      	subs	r2, #1
 8000caa:	bf28      	it	cs
 8000cac:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000cb0:	d2ed      	bcs.n	8000c8e <__addsf3+0x92>
 8000cb2:	fab0 fc80 	clz	ip, r0
 8000cb6:	f1ac 0c08 	sub.w	ip, ip, #8
 8000cba:	ebb2 020c 	subs.w	r2, r2, ip
 8000cbe:	fa00 f00c 	lsl.w	r0, r0, ip
 8000cc2:	bfaa      	itet	ge
 8000cc4:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000cc8:	4252      	neglt	r2, r2
 8000cca:	4318      	orrge	r0, r3
 8000ccc:	bfbc      	itt	lt
 8000cce:	40d0      	lsrlt	r0, r2
 8000cd0:	4318      	orrlt	r0, r3
 8000cd2:	4770      	bx	lr
 8000cd4:	f092 0f00 	teq	r2, #0
 8000cd8:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000cdc:	bf06      	itte	eq
 8000cde:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000ce2:	3201      	addeq	r2, #1
 8000ce4:	3b01      	subne	r3, #1
 8000ce6:	e7b5      	b.n	8000c54 <__addsf3+0x58>
 8000ce8:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000cec:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000cf0:	bf18      	it	ne
 8000cf2:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000cf6:	d021      	beq.n	8000d3c <__addsf3+0x140>
 8000cf8:	ea92 0f03 	teq	r2, r3
 8000cfc:	d004      	beq.n	8000d08 <__addsf3+0x10c>
 8000cfe:	f092 0f00 	teq	r2, #0
 8000d02:	bf08      	it	eq
 8000d04:	4608      	moveq	r0, r1
 8000d06:	4770      	bx	lr
 8000d08:	ea90 0f01 	teq	r0, r1
 8000d0c:	bf1c      	itt	ne
 8000d0e:	2000      	movne	r0, #0
 8000d10:	4770      	bxne	lr
 8000d12:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000d16:	d104      	bne.n	8000d22 <__addsf3+0x126>
 8000d18:	0040      	lsls	r0, r0, #1
 8000d1a:	bf28      	it	cs
 8000d1c:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000d20:	4770      	bx	lr
 8000d22:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000d26:	bf3c      	itt	cc
 8000d28:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000d2c:	4770      	bxcc	lr
 8000d2e:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000d32:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000d36:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000d3a:	4770      	bx	lr
 8000d3c:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000d40:	bf16      	itet	ne
 8000d42:	4608      	movne	r0, r1
 8000d44:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000d48:	4601      	movne	r1, r0
 8000d4a:	0242      	lsls	r2, r0, #9
 8000d4c:	bf06      	itte	eq
 8000d4e:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000d52:	ea90 0f01 	teqeq	r0, r1
 8000d56:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000d5a:	4770      	bx	lr

08000d5c <__aeabi_ui2f>:
 8000d5c:	f04f 0300 	mov.w	r3, #0
 8000d60:	e004      	b.n	8000d6c <__aeabi_i2f+0x8>
 8000d62:	bf00      	nop

08000d64 <__aeabi_i2f>:
 8000d64:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000d68:	bf48      	it	mi
 8000d6a:	4240      	negmi	r0, r0
 8000d6c:	ea5f 0c00 	movs.w	ip, r0
 8000d70:	bf08      	it	eq
 8000d72:	4770      	bxeq	lr
 8000d74:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000d78:	4601      	mov	r1, r0
 8000d7a:	f04f 0000 	mov.w	r0, #0
 8000d7e:	e01c      	b.n	8000dba <__aeabi_l2f+0x2a>

08000d80 <__aeabi_ul2f>:
 8000d80:	ea50 0201 	orrs.w	r2, r0, r1
 8000d84:	bf08      	it	eq
 8000d86:	4770      	bxeq	lr
 8000d88:	f04f 0300 	mov.w	r3, #0
 8000d8c:	e00a      	b.n	8000da4 <__aeabi_l2f+0x14>
 8000d8e:	bf00      	nop

08000d90 <__aeabi_l2f>:
 8000d90:	ea50 0201 	orrs.w	r2, r0, r1
 8000d94:	bf08      	it	eq
 8000d96:	4770      	bxeq	lr
 8000d98:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000d9c:	d502      	bpl.n	8000da4 <__aeabi_l2f+0x14>
 8000d9e:	4240      	negs	r0, r0
 8000da0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000da4:	ea5f 0c01 	movs.w	ip, r1
 8000da8:	bf02      	ittt	eq
 8000daa:	4684      	moveq	ip, r0
 8000dac:	4601      	moveq	r1, r0
 8000dae:	2000      	moveq	r0, #0
 8000db0:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000db4:	bf08      	it	eq
 8000db6:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000dba:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000dbe:	fabc f28c 	clz	r2, ip
 8000dc2:	3a08      	subs	r2, #8
 8000dc4:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000dc8:	db10      	blt.n	8000dec <__aeabi_l2f+0x5c>
 8000dca:	fa01 fc02 	lsl.w	ip, r1, r2
 8000dce:	4463      	add	r3, ip
 8000dd0:	fa00 fc02 	lsl.w	ip, r0, r2
 8000dd4:	f1c2 0220 	rsb	r2, r2, #32
 8000dd8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000ddc:	fa20 f202 	lsr.w	r2, r0, r2
 8000de0:	eb43 0002 	adc.w	r0, r3, r2
 8000de4:	bf08      	it	eq
 8000de6:	f020 0001 	biceq.w	r0, r0, #1
 8000dea:	4770      	bx	lr
 8000dec:	f102 0220 	add.w	r2, r2, #32
 8000df0:	fa01 fc02 	lsl.w	ip, r1, r2
 8000df4:	f1c2 0220 	rsb	r2, r2, #32
 8000df8:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000dfc:	fa21 f202 	lsr.w	r2, r1, r2
 8000e00:	eb43 0002 	adc.w	r0, r3, r2
 8000e04:	bf08      	it	eq
 8000e06:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e0a:	4770      	bx	lr

08000e0c <__gesf2>:
 8000e0c:	f04f 3cff 	mov.w	ip, #4294967295
 8000e10:	e006      	b.n	8000e20 <__cmpsf2+0x4>
 8000e12:	bf00      	nop

08000e14 <__lesf2>:
 8000e14:	f04f 0c01 	mov.w	ip, #1
 8000e18:	e002      	b.n	8000e20 <__cmpsf2+0x4>
 8000e1a:	bf00      	nop

08000e1c <__cmpsf2>:
 8000e1c:	f04f 0c01 	mov.w	ip, #1
 8000e20:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000e24:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000e28:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000e2c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000e30:	bf18      	it	ne
 8000e32:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000e36:	d011      	beq.n	8000e5c <__cmpsf2+0x40>
 8000e38:	b001      	add	sp, #4
 8000e3a:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8000e3e:	bf18      	it	ne
 8000e40:	ea90 0f01 	teqne	r0, r1
 8000e44:	bf58      	it	pl
 8000e46:	ebb2 0003 	subspl.w	r0, r2, r3
 8000e4a:	bf88      	it	hi
 8000e4c:	17c8      	asrhi	r0, r1, #31
 8000e4e:	bf38      	it	cc
 8000e50:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8000e54:	bf18      	it	ne
 8000e56:	f040 0001 	orrne.w	r0, r0, #1
 8000e5a:	4770      	bx	lr
 8000e5c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000e60:	d102      	bne.n	8000e68 <__cmpsf2+0x4c>
 8000e62:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8000e66:	d105      	bne.n	8000e74 <__cmpsf2+0x58>
 8000e68:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8000e6c:	d1e4      	bne.n	8000e38 <__cmpsf2+0x1c>
 8000e6e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8000e72:	d0e1      	beq.n	8000e38 <__cmpsf2+0x1c>
 8000e74:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000e78:	4770      	bx	lr
 8000e7a:	bf00      	nop

08000e7c <__aeabi_cfrcmple>:
 8000e7c:	4684      	mov	ip, r0
 8000e7e:	4608      	mov	r0, r1
 8000e80:	4661      	mov	r1, ip
 8000e82:	e7ff      	b.n	8000e84 <__aeabi_cfcmpeq>

08000e84 <__aeabi_cfcmpeq>:
 8000e84:	b50f      	push	{r0, r1, r2, r3, lr}
 8000e86:	f7ff ffc9 	bl	8000e1c <__cmpsf2>
 8000e8a:	2800      	cmp	r0, #0
 8000e8c:	bf48      	it	mi
 8000e8e:	f110 0f00 	cmnmi.w	r0, #0
 8000e92:	bd0f      	pop	{r0, r1, r2, r3, pc}

08000e94 <__aeabi_fcmpeq>:
 8000e94:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000e98:	f7ff fff4 	bl	8000e84 <__aeabi_cfcmpeq>
 8000e9c:	bf0c      	ite	eq
 8000e9e:	2001      	moveq	r0, #1
 8000ea0:	2000      	movne	r0, #0
 8000ea2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ea6:	bf00      	nop

08000ea8 <__aeabi_fcmplt>:
 8000ea8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000eac:	f7ff ffea 	bl	8000e84 <__aeabi_cfcmpeq>
 8000eb0:	bf34      	ite	cc
 8000eb2:	2001      	movcc	r0, #1
 8000eb4:	2000      	movcs	r0, #0
 8000eb6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000eba:	bf00      	nop

08000ebc <__aeabi_fcmple>:
 8000ebc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ec0:	f7ff ffe0 	bl	8000e84 <__aeabi_cfcmpeq>
 8000ec4:	bf94      	ite	ls
 8000ec6:	2001      	movls	r0, #1
 8000ec8:	2000      	movhi	r0, #0
 8000eca:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ece:	bf00      	nop

08000ed0 <__aeabi_fcmpge>:
 8000ed0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ed4:	f7ff ffd2 	bl	8000e7c <__aeabi_cfrcmple>
 8000ed8:	bf94      	ite	ls
 8000eda:	2001      	movls	r0, #1
 8000edc:	2000      	movhi	r0, #0
 8000ede:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ee2:	bf00      	nop

08000ee4 <__aeabi_fcmpgt>:
 8000ee4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ee8:	f7ff ffc8 	bl	8000e7c <__aeabi_cfrcmple>
 8000eec:	bf34      	ite	cc
 8000eee:	2001      	movcc	r0, #1
 8000ef0:	2000      	movcs	r0, #0
 8000ef2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ef6:	bf00      	nop

08000ef8 <uart_init>:
uint8_t mode = 0;          // 0 = AUTO, 1 = MANUAL
uint8_t fan_manual = 0;    // Trạng thái quạt khi MANUAL
uint8_t fan_auto_state = 0; // Trạng thái quạt trong AUTO (0 = tắt, 1 = bật)

// === UART ===
void uart_init(void) {
 8000ef8:	b480      	push	{r7}
 8000efa:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_IOPAEN | RCC_APB2ENR_USART1EN | RCC_APB2ENR_AFIOEN;
 8000efc:	4b0f      	ldr	r3, [pc, #60]	@ (8000f3c <uart_init+0x44>)
 8000efe:	699b      	ldr	r3, [r3, #24]
 8000f00:	4a0e      	ldr	r2, [pc, #56]	@ (8000f3c <uart_init+0x44>)
 8000f02:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000f06:	f043 0305 	orr.w	r3, r3, #5
 8000f0a:	6193      	str	r3, [r2, #24]
    GPIOA->CRH &= ~(GPIO_CRH_CNF9 | GPIO_CRH_MODE9);
 8000f0c:	4b0c      	ldr	r3, [pc, #48]	@ (8000f40 <uart_init+0x48>)
 8000f0e:	685b      	ldr	r3, [r3, #4]
 8000f10:	4a0b      	ldr	r2, [pc, #44]	@ (8000f40 <uart_init+0x48>)
 8000f12:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8000f16:	6053      	str	r3, [r2, #4]
    GPIOA->CRH |= (0x0B << 4); // PA9: AF push-pull
 8000f18:	4b09      	ldr	r3, [pc, #36]	@ (8000f40 <uart_init+0x48>)
 8000f1a:	685b      	ldr	r3, [r3, #4]
 8000f1c:	4a08      	ldr	r2, [pc, #32]	@ (8000f40 <uart_init+0x48>)
 8000f1e:	f043 03b0 	orr.w	r3, r3, #176	@ 0xb0
 8000f22:	6053      	str	r3, [r2, #4]
    USART1->BRR = 72000000 / 9600;
 8000f24:	4b07      	ldr	r3, [pc, #28]	@ (8000f44 <uart_init+0x4c>)
 8000f26:	f641 524c 	movw	r2, #7500	@ 0x1d4c
 8000f2a:	609a      	str	r2, [r3, #8]
    USART1->CR1 = USART_CR1_TE | USART_CR1_UE;
 8000f2c:	4b05      	ldr	r3, [pc, #20]	@ (8000f44 <uart_init+0x4c>)
 8000f2e:	f242 0208 	movw	r2, #8200	@ 0x2008
 8000f32:	60da      	str	r2, [r3, #12]
}
 8000f34:	bf00      	nop
 8000f36:	46bd      	mov	sp, r7
 8000f38:	bc80      	pop	{r7}
 8000f3a:	4770      	bx	lr
 8000f3c:	40021000 	.word	0x40021000
 8000f40:	40010800 	.word	0x40010800
 8000f44:	40013800 	.word	0x40013800

08000f48 <uart_send>:

void uart_send(char *s) {
 8000f48:	b480      	push	{r7}
 8000f4a:	b083      	sub	sp, #12
 8000f4c:	af00      	add	r7, sp, #0
 8000f4e:	6078      	str	r0, [r7, #4]
    while (*s) {
 8000f50:	e00c      	b.n	8000f6c <uart_send+0x24>
        while (!(USART1->SR & USART_SR_TXE));
 8000f52:	bf00      	nop
 8000f54:	4b0a      	ldr	r3, [pc, #40]	@ (8000f80 <uart_send+0x38>)
 8000f56:	681b      	ldr	r3, [r3, #0]
 8000f58:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000f5c:	2b00      	cmp	r3, #0
 8000f5e:	d0f9      	beq.n	8000f54 <uart_send+0xc>
        USART1->DR = *s++;
 8000f60:	687b      	ldr	r3, [r7, #4]
 8000f62:	1c5a      	adds	r2, r3, #1
 8000f64:	607a      	str	r2, [r7, #4]
 8000f66:	781a      	ldrb	r2, [r3, #0]
 8000f68:	4b05      	ldr	r3, [pc, #20]	@ (8000f80 <uart_send+0x38>)
 8000f6a:	605a      	str	r2, [r3, #4]
    while (*s) {
 8000f6c:	687b      	ldr	r3, [r7, #4]
 8000f6e:	781b      	ldrb	r3, [r3, #0]
 8000f70:	2b00      	cmp	r3, #0
 8000f72:	d1ee      	bne.n	8000f52 <uart_send+0xa>
    }
}
 8000f74:	bf00      	nop
 8000f76:	bf00      	nop
 8000f78:	370c      	adds	r7, #12
 8000f7a:	46bd      	mov	sp, r7
 8000f7c:	bc80      	pop	{r7}
 8000f7e:	4770      	bx	lr
 8000f80:	40013800 	.word	0x40013800

08000f84 <SystemInit72MHz>:

// === Clock 72MHz ===
void SystemInit72MHz(void) {
 8000f84:	b480      	push	{r7}
 8000f86:	af00      	add	r7, sp, #0
    FLASH->ACR |= FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY_2;
 8000f88:	4b1f      	ldr	r3, [pc, #124]	@ (8001008 <SystemInit72MHz+0x84>)
 8000f8a:	681b      	ldr	r3, [r3, #0]
 8000f8c:	4a1e      	ldr	r2, [pc, #120]	@ (8001008 <SystemInit72MHz+0x84>)
 8000f8e:	f043 0314 	orr.w	r3, r3, #20
 8000f92:	6013      	str	r3, [r2, #0]
    RCC->CR |= RCC_CR_HSEON;
 8000f94:	4b1d      	ldr	r3, [pc, #116]	@ (800100c <SystemInit72MHz+0x88>)
 8000f96:	681b      	ldr	r3, [r3, #0]
 8000f98:	4a1c      	ldr	r2, [pc, #112]	@ (800100c <SystemInit72MHz+0x88>)
 8000f9a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000f9e:	6013      	str	r3, [r2, #0]
    while (!(RCC->CR & RCC_CR_HSERDY));
 8000fa0:	bf00      	nop
 8000fa2:	4b1a      	ldr	r3, [pc, #104]	@ (800100c <SystemInit72MHz+0x88>)
 8000fa4:	681b      	ldr	r3, [r3, #0]
 8000fa6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000faa:	2b00      	cmp	r3, #0
 8000fac:	d0f9      	beq.n	8000fa2 <SystemInit72MHz+0x1e>
    RCC->CFGR |= RCC_CFGR_HPRE_DIV1 | RCC_CFGR_PPRE1_DIV2 | RCC_CFGR_PPRE2_DIV1 | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL9;
 8000fae:	4b17      	ldr	r3, [pc, #92]	@ (800100c <SystemInit72MHz+0x88>)
 8000fb0:	685b      	ldr	r3, [r3, #4]
 8000fb2:	4a16      	ldr	r2, [pc, #88]	@ (800100c <SystemInit72MHz+0x88>)
 8000fb4:	f443 13e8 	orr.w	r3, r3, #1900544	@ 0x1d0000
 8000fb8:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000fbc:	6053      	str	r3, [r2, #4]
    RCC->CR |= RCC_CR_PLLON;
 8000fbe:	4b13      	ldr	r3, [pc, #76]	@ (800100c <SystemInit72MHz+0x88>)
 8000fc0:	681b      	ldr	r3, [r3, #0]
 8000fc2:	4a12      	ldr	r2, [pc, #72]	@ (800100c <SystemInit72MHz+0x88>)
 8000fc4:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000fc8:	6013      	str	r3, [r2, #0]
    while (!(RCC->CR & RCC_CR_PLLRDY));
 8000fca:	bf00      	nop
 8000fcc:	4b0f      	ldr	r3, [pc, #60]	@ (800100c <SystemInit72MHz+0x88>)
 8000fce:	681b      	ldr	r3, [r3, #0]
 8000fd0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8000fd4:	2b00      	cmp	r3, #0
 8000fd6:	d0f9      	beq.n	8000fcc <SystemInit72MHz+0x48>
    RCC->CFGR &= ~RCC_CFGR_SW;
 8000fd8:	4b0c      	ldr	r3, [pc, #48]	@ (800100c <SystemInit72MHz+0x88>)
 8000fda:	685b      	ldr	r3, [r3, #4]
 8000fdc:	4a0b      	ldr	r2, [pc, #44]	@ (800100c <SystemInit72MHz+0x88>)
 8000fde:	f023 0303 	bic.w	r3, r3, #3
 8000fe2:	6053      	str	r3, [r2, #4]
    RCC->CFGR |= RCC_CFGR_SW_PLL;
 8000fe4:	4b09      	ldr	r3, [pc, #36]	@ (800100c <SystemInit72MHz+0x88>)
 8000fe6:	685b      	ldr	r3, [r3, #4]
 8000fe8:	4a08      	ldr	r2, [pc, #32]	@ (800100c <SystemInit72MHz+0x88>)
 8000fea:	f043 0302 	orr.w	r3, r3, #2
 8000fee:	6053      	str	r3, [r2, #4]
    while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
 8000ff0:	bf00      	nop
 8000ff2:	4b06      	ldr	r3, [pc, #24]	@ (800100c <SystemInit72MHz+0x88>)
 8000ff4:	685b      	ldr	r3, [r3, #4]
 8000ff6:	f003 030c 	and.w	r3, r3, #12
 8000ffa:	2b08      	cmp	r3, #8
 8000ffc:	d1f9      	bne.n	8000ff2 <SystemInit72MHz+0x6e>
}
 8000ffe:	bf00      	nop
 8001000:	bf00      	nop
 8001002:	46bd      	mov	sp, r7
 8001004:	bc80      	pop	{r7}
 8001006:	4770      	bx	lr
 8001008:	40022000 	.word	0x40022000
 800100c:	40021000 	.word	0x40021000

08001010 <timer_init>:

// === Delay ===
void timer_init(void) {
 8001010:	b480      	push	{r7}
 8001012:	af00      	add	r7, sp, #0
    RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8001014:	4b0d      	ldr	r3, [pc, #52]	@ (800104c <timer_init+0x3c>)
 8001016:	69db      	ldr	r3, [r3, #28]
 8001018:	4a0c      	ldr	r2, [pc, #48]	@ (800104c <timer_init+0x3c>)
 800101a:	f043 0301 	orr.w	r3, r3, #1
 800101e:	61d3      	str	r3, [r2, #28]
    TIM2->PSC = 72 - 1;
 8001020:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001024:	2247      	movs	r2, #71	@ 0x47
 8001026:	629a      	str	r2, [r3, #40]	@ 0x28
    TIM2->ARR = 0xFFFF;
 8001028:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800102c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001030:	62da      	str	r2, [r3, #44]	@ 0x2c
    TIM2->CR1 |= TIM_CR1_CEN;
 8001032:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001036:	681b      	ldr	r3, [r3, #0]
 8001038:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800103c:	f043 0301 	orr.w	r3, r3, #1
 8001040:	6013      	str	r3, [r2, #0]
}
 8001042:	bf00      	nop
 8001044:	46bd      	mov	sp, r7
 8001046:	bc80      	pop	{r7}
 8001048:	4770      	bx	lr
 800104a:	bf00      	nop
 800104c:	40021000 	.word	0x40021000

08001050 <delay_us>:

void delay_us(uint32_t us) {
 8001050:	b480      	push	{r7}
 8001052:	b083      	sub	sp, #12
 8001054:	af00      	add	r7, sp, #0
 8001056:	6078      	str	r0, [r7, #4]
    TIM2->CNT = 0;
 8001058:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800105c:	2200      	movs	r2, #0
 800105e:	625a      	str	r2, [r3, #36]	@ 0x24
    while (TIM2->CNT < us);
 8001060:	bf00      	nop
 8001062:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001066:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001068:	687a      	ldr	r2, [r7, #4]
 800106a:	429a      	cmp	r2, r3
 800106c:	d8f9      	bhi.n	8001062 <delay_us+0x12>
}
 800106e:	bf00      	nop
 8001070:	bf00      	nop
 8001072:	370c      	adds	r7, #12
 8001074:	46bd      	mov	sp, r7
 8001076:	bc80      	pop	{r7}
 8001078:	4770      	bx	lr

0800107a <delay_ms>:

void delay_ms(uint32_t ms) {
 800107a:	b580      	push	{r7, lr}
 800107c:	b084      	sub	sp, #16
 800107e:	af00      	add	r7, sp, #0
 8001080:	6078      	str	r0, [r7, #4]
    for (uint32_t i = 0; i < ms; i++) delay_us(1000);
 8001082:	2300      	movs	r3, #0
 8001084:	60fb      	str	r3, [r7, #12]
 8001086:	e006      	b.n	8001096 <delay_ms+0x1c>
 8001088:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800108c:	f7ff ffe0 	bl	8001050 <delay_us>
 8001090:	68fb      	ldr	r3, [r7, #12]
 8001092:	3301      	adds	r3, #1
 8001094:	60fb      	str	r3, [r7, #12]
 8001096:	68fa      	ldr	r2, [r7, #12]
 8001098:	687b      	ldr	r3, [r7, #4]
 800109a:	429a      	cmp	r2, r3
 800109c:	d3f4      	bcc.n	8001088 <delay_ms+0xe>
}
 800109e:	bf00      	nop
 80010a0:	bf00      	nop
 80010a2:	3710      	adds	r7, #16
 80010a4:	46bd      	mov	sp, r7
 80010a6:	bd80      	pop	{r7, pc}

080010a8 <gpio_input_pa>:

// === GPIO ===
void gpio_input_pa(uint8_t pin) {
 80010a8:	b480      	push	{r7}
 80010aa:	b083      	sub	sp, #12
 80010ac:	af00      	add	r7, sp, #0
 80010ae:	4603      	mov	r3, r0
 80010b0:	71fb      	strb	r3, [r7, #7]
    RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 80010b2:	4b1f      	ldr	r3, [pc, #124]	@ (8001130 <gpio_input_pa+0x88>)
 80010b4:	699b      	ldr	r3, [r3, #24]
 80010b6:	4a1e      	ldr	r2, [pc, #120]	@ (8001130 <gpio_input_pa+0x88>)
 80010b8:	f043 0304 	orr.w	r3, r3, #4
 80010bc:	6193      	str	r3, [r2, #24]
    if (pin < 8) {
 80010be:	79fb      	ldrb	r3, [r7, #7]
 80010c0:	2b07      	cmp	r3, #7
 80010c2:	d817      	bhi.n	80010f4 <gpio_input_pa+0x4c>
        GPIOA->CRL &= ~(0xF << (pin * 4));
 80010c4:	4b1b      	ldr	r3, [pc, #108]	@ (8001134 <gpio_input_pa+0x8c>)
 80010c6:	681b      	ldr	r3, [r3, #0]
 80010c8:	79fa      	ldrb	r2, [r7, #7]
 80010ca:	0092      	lsls	r2, r2, #2
 80010cc:	210f      	movs	r1, #15
 80010ce:	fa01 f202 	lsl.w	r2, r1, r2
 80010d2:	43d2      	mvns	r2, r2
 80010d4:	4611      	mov	r1, r2
 80010d6:	4a17      	ldr	r2, [pc, #92]	@ (8001134 <gpio_input_pa+0x8c>)
 80010d8:	400b      	ands	r3, r1
 80010da:	6013      	str	r3, [r2, #0]
        GPIOA->CRL |= (0x4 << (pin * 4)); // Floating input
 80010dc:	4b15      	ldr	r3, [pc, #84]	@ (8001134 <gpio_input_pa+0x8c>)
 80010de:	681b      	ldr	r3, [r3, #0]
 80010e0:	79fa      	ldrb	r2, [r7, #7]
 80010e2:	0092      	lsls	r2, r2, #2
 80010e4:	2104      	movs	r1, #4
 80010e6:	fa01 f202 	lsl.w	r2, r1, r2
 80010ea:	4611      	mov	r1, r2
 80010ec:	4a11      	ldr	r2, [pc, #68]	@ (8001134 <gpio_input_pa+0x8c>)
 80010ee:	430b      	orrs	r3, r1
 80010f0:	6013      	str	r3, [r2, #0]
    } else {
        GPIOA->CRH &= ~(0xF << ((pin - 8) * 4));
        GPIOA->CRH |= (0x4 << ((pin - 8) * 4));
    }
}
 80010f2:	e018      	b.n	8001126 <gpio_input_pa+0x7e>
        GPIOA->CRH &= ~(0xF << ((pin - 8) * 4));
 80010f4:	4b0f      	ldr	r3, [pc, #60]	@ (8001134 <gpio_input_pa+0x8c>)
 80010f6:	685b      	ldr	r3, [r3, #4]
 80010f8:	79fa      	ldrb	r2, [r7, #7]
 80010fa:	3a08      	subs	r2, #8
 80010fc:	0092      	lsls	r2, r2, #2
 80010fe:	210f      	movs	r1, #15
 8001100:	fa01 f202 	lsl.w	r2, r1, r2
 8001104:	43d2      	mvns	r2, r2
 8001106:	4611      	mov	r1, r2
 8001108:	4a0a      	ldr	r2, [pc, #40]	@ (8001134 <gpio_input_pa+0x8c>)
 800110a:	400b      	ands	r3, r1
 800110c:	6053      	str	r3, [r2, #4]
        GPIOA->CRH |= (0x4 << ((pin - 8) * 4));
 800110e:	4b09      	ldr	r3, [pc, #36]	@ (8001134 <gpio_input_pa+0x8c>)
 8001110:	685b      	ldr	r3, [r3, #4]
 8001112:	79fa      	ldrb	r2, [r7, #7]
 8001114:	3a08      	subs	r2, #8
 8001116:	0092      	lsls	r2, r2, #2
 8001118:	2104      	movs	r1, #4
 800111a:	fa01 f202 	lsl.w	r2, r1, r2
 800111e:	4611      	mov	r1, r2
 8001120:	4a04      	ldr	r2, [pc, #16]	@ (8001134 <gpio_input_pa+0x8c>)
 8001122:	430b      	orrs	r3, r1
 8001124:	6053      	str	r3, [r2, #4]
}
 8001126:	bf00      	nop
 8001128:	370c      	adds	r7, #12
 800112a:	46bd      	mov	sp, r7
 800112c:	bc80      	pop	{r7}
 800112e:	4770      	bx	lr
 8001130:	40021000 	.word	0x40021000
 8001134:	40010800 	.word	0x40010800

08001138 <gpio_input_pb>:

void gpio_input_pb(uint8_t pin) {
 8001138:	b480      	push	{r7}
 800113a:	b083      	sub	sp, #12
 800113c:	af00      	add	r7, sp, #0
 800113e:	4603      	mov	r3, r0
 8001140:	71fb      	strb	r3, [r7, #7]
    RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
 8001142:	4b1f      	ldr	r3, [pc, #124]	@ (80011c0 <gpio_input_pb+0x88>)
 8001144:	699b      	ldr	r3, [r3, #24]
 8001146:	4a1e      	ldr	r2, [pc, #120]	@ (80011c0 <gpio_input_pb+0x88>)
 8001148:	f043 0308 	orr.w	r3, r3, #8
 800114c:	6193      	str	r3, [r2, #24]
    if (pin < 8) {
 800114e:	79fb      	ldrb	r3, [r7, #7]
 8001150:	2b07      	cmp	r3, #7
 8001152:	d817      	bhi.n	8001184 <gpio_input_pb+0x4c>
        GPIOB->CRL &= ~(0xF << (pin * 4));
 8001154:	4b1b      	ldr	r3, [pc, #108]	@ (80011c4 <gpio_input_pb+0x8c>)
 8001156:	681b      	ldr	r3, [r3, #0]
 8001158:	79fa      	ldrb	r2, [r7, #7]
 800115a:	0092      	lsls	r2, r2, #2
 800115c:	210f      	movs	r1, #15
 800115e:	fa01 f202 	lsl.w	r2, r1, r2
 8001162:	43d2      	mvns	r2, r2
 8001164:	4611      	mov	r1, r2
 8001166:	4a17      	ldr	r2, [pc, #92]	@ (80011c4 <gpio_input_pb+0x8c>)
 8001168:	400b      	ands	r3, r1
 800116a:	6013      	str	r3, [r2, #0]
        GPIOB->CRL |= (0x4 << (pin * 4)); // Floating input
 800116c:	4b15      	ldr	r3, [pc, #84]	@ (80011c4 <gpio_input_pb+0x8c>)
 800116e:	681b      	ldr	r3, [r3, #0]
 8001170:	79fa      	ldrb	r2, [r7, #7]
 8001172:	0092      	lsls	r2, r2, #2
 8001174:	2104      	movs	r1, #4
 8001176:	fa01 f202 	lsl.w	r2, r1, r2
 800117a:	4611      	mov	r1, r2
 800117c:	4a11      	ldr	r2, [pc, #68]	@ (80011c4 <gpio_input_pb+0x8c>)
 800117e:	430b      	orrs	r3, r1
 8001180:	6013      	str	r3, [r2, #0]
    } else {
        GPIOB->CRH &= ~(0xF << ((pin - 8) * 4));
        GPIOB->CRH |= (0x4 << ((pin - 8) * 4));
    }
}
 8001182:	e018      	b.n	80011b6 <gpio_input_pb+0x7e>
        GPIOB->CRH &= ~(0xF << ((pin - 8) * 4));
 8001184:	4b0f      	ldr	r3, [pc, #60]	@ (80011c4 <gpio_input_pb+0x8c>)
 8001186:	685b      	ldr	r3, [r3, #4]
 8001188:	79fa      	ldrb	r2, [r7, #7]
 800118a:	3a08      	subs	r2, #8
 800118c:	0092      	lsls	r2, r2, #2
 800118e:	210f      	movs	r1, #15
 8001190:	fa01 f202 	lsl.w	r2, r1, r2
 8001194:	43d2      	mvns	r2, r2
 8001196:	4611      	mov	r1, r2
 8001198:	4a0a      	ldr	r2, [pc, #40]	@ (80011c4 <gpio_input_pb+0x8c>)
 800119a:	400b      	ands	r3, r1
 800119c:	6053      	str	r3, [r2, #4]
        GPIOB->CRH |= (0x4 << ((pin - 8) * 4));
 800119e:	4b09      	ldr	r3, [pc, #36]	@ (80011c4 <gpio_input_pb+0x8c>)
 80011a0:	685b      	ldr	r3, [r3, #4]
 80011a2:	79fa      	ldrb	r2, [r7, #7]
 80011a4:	3a08      	subs	r2, #8
 80011a6:	0092      	lsls	r2, r2, #2
 80011a8:	2104      	movs	r1, #4
 80011aa:	fa01 f202 	lsl.w	r2, r1, r2
 80011ae:	4611      	mov	r1, r2
 80011b0:	4a04      	ldr	r2, [pc, #16]	@ (80011c4 <gpio_input_pb+0x8c>)
 80011b2:	430b      	orrs	r3, r1
 80011b4:	6053      	str	r3, [r2, #4]
}
 80011b6:	bf00      	nop
 80011b8:	370c      	adds	r7, #12
 80011ba:	46bd      	mov	sp, r7
 80011bc:	bc80      	pop	{r7}
 80011be:	4770      	bx	lr
 80011c0:	40021000 	.word	0x40021000
 80011c4:	40010c00 	.word	0x40010c00

080011c8 <gpio_output_pb>:

void gpio_output_pb(uint8_t pin) {
 80011c8:	b480      	push	{r7}
 80011ca:	b083      	sub	sp, #12
 80011cc:	af00      	add	r7, sp, #0
 80011ce:	4603      	mov	r3, r0
 80011d0:	71fb      	strb	r3, [r7, #7]
    RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
 80011d2:	4b1f      	ldr	r3, [pc, #124]	@ (8001250 <gpio_output_pb+0x88>)
 80011d4:	699b      	ldr	r3, [r3, #24]
 80011d6:	4a1e      	ldr	r2, [pc, #120]	@ (8001250 <gpio_output_pb+0x88>)
 80011d8:	f043 0308 	orr.w	r3, r3, #8
 80011dc:	6193      	str	r3, [r2, #24]
    if (pin < 8) {
 80011de:	79fb      	ldrb	r3, [r7, #7]
 80011e0:	2b07      	cmp	r3, #7
 80011e2:	d817      	bhi.n	8001214 <gpio_output_pb+0x4c>
        GPIOB->CRL &= ~(0xF << (pin * 4));
 80011e4:	4b1b      	ldr	r3, [pc, #108]	@ (8001254 <gpio_output_pb+0x8c>)
 80011e6:	681b      	ldr	r3, [r3, #0]
 80011e8:	79fa      	ldrb	r2, [r7, #7]
 80011ea:	0092      	lsls	r2, r2, #2
 80011ec:	210f      	movs	r1, #15
 80011ee:	fa01 f202 	lsl.w	r2, r1, r2
 80011f2:	43d2      	mvns	r2, r2
 80011f4:	4611      	mov	r1, r2
 80011f6:	4a17      	ldr	r2, [pc, #92]	@ (8001254 <gpio_output_pb+0x8c>)
 80011f8:	400b      	ands	r3, r1
 80011fa:	6013      	str	r3, [r2, #0]
        GPIOB->CRL |= (0x3 << (pin * 4)); // Output push-pull 50MHz
 80011fc:	4b15      	ldr	r3, [pc, #84]	@ (8001254 <gpio_output_pb+0x8c>)
 80011fe:	681b      	ldr	r3, [r3, #0]
 8001200:	79fa      	ldrb	r2, [r7, #7]
 8001202:	0092      	lsls	r2, r2, #2
 8001204:	2103      	movs	r1, #3
 8001206:	fa01 f202 	lsl.w	r2, r1, r2
 800120a:	4611      	mov	r1, r2
 800120c:	4a11      	ldr	r2, [pc, #68]	@ (8001254 <gpio_output_pb+0x8c>)
 800120e:	430b      	orrs	r3, r1
 8001210:	6013      	str	r3, [r2, #0]
    } else {
        GPIOB->CRH &= ~(0xF << ((pin - 8) * 4));
        GPIOB->CRH |= (0x3 << ((pin - 8) * 4)); // Output push-pull 50MHz
    }
}
 8001212:	e018      	b.n	8001246 <gpio_output_pb+0x7e>
        GPIOB->CRH &= ~(0xF << ((pin - 8) * 4));
 8001214:	4b0f      	ldr	r3, [pc, #60]	@ (8001254 <gpio_output_pb+0x8c>)
 8001216:	685b      	ldr	r3, [r3, #4]
 8001218:	79fa      	ldrb	r2, [r7, #7]
 800121a:	3a08      	subs	r2, #8
 800121c:	0092      	lsls	r2, r2, #2
 800121e:	210f      	movs	r1, #15
 8001220:	fa01 f202 	lsl.w	r2, r1, r2
 8001224:	43d2      	mvns	r2, r2
 8001226:	4611      	mov	r1, r2
 8001228:	4a0a      	ldr	r2, [pc, #40]	@ (8001254 <gpio_output_pb+0x8c>)
 800122a:	400b      	ands	r3, r1
 800122c:	6053      	str	r3, [r2, #4]
        GPIOB->CRH |= (0x3 << ((pin - 8) * 4)); // Output push-pull 50MHz
 800122e:	4b09      	ldr	r3, [pc, #36]	@ (8001254 <gpio_output_pb+0x8c>)
 8001230:	685b      	ldr	r3, [r3, #4]
 8001232:	79fa      	ldrb	r2, [r7, #7]
 8001234:	3a08      	subs	r2, #8
 8001236:	0092      	lsls	r2, r2, #2
 8001238:	2103      	movs	r1, #3
 800123a:	fa01 f202 	lsl.w	r2, r1, r2
 800123e:	4611      	mov	r1, r2
 8001240:	4a04      	ldr	r2, [pc, #16]	@ (8001254 <gpio_output_pb+0x8c>)
 8001242:	430b      	orrs	r3, r1
 8001244:	6053      	str	r3, [r2, #4]
}
 8001246:	bf00      	nop
 8001248:	370c      	adds	r7, #12
 800124a:	46bd      	mov	sp, r7
 800124c:	bc80      	pop	{r7}
 800124e:	4770      	bx	lr
 8001250:	40021000 	.word	0x40021000
 8001254:	40010c00 	.word	0x40010c00

08001258 <dht22_output_mode>:

void dht22_output_mode(void) {
 8001258:	b480      	push	{r7}
 800125a:	af00      	add	r7, sp, #0
    GPIOB->CRH &= ~(0xF << 4); // PB9
 800125c:	4b07      	ldr	r3, [pc, #28]	@ (800127c <dht22_output_mode+0x24>)
 800125e:	685b      	ldr	r3, [r3, #4]
 8001260:	4a06      	ldr	r2, [pc, #24]	@ (800127c <dht22_output_mode+0x24>)
 8001262:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8001266:	6053      	str	r3, [r2, #4]
    GPIOB->CRH |= (0x3 << 4);  // Output 50MHz push-pull
 8001268:	4b04      	ldr	r3, [pc, #16]	@ (800127c <dht22_output_mode+0x24>)
 800126a:	685b      	ldr	r3, [r3, #4]
 800126c:	4a03      	ldr	r2, [pc, #12]	@ (800127c <dht22_output_mode+0x24>)
 800126e:	f043 0330 	orr.w	r3, r3, #48	@ 0x30
 8001272:	6053      	str	r3, [r2, #4]
}
 8001274:	bf00      	nop
 8001276:	46bd      	mov	sp, r7
 8001278:	bc80      	pop	{r7}
 800127a:	4770      	bx	lr
 800127c:	40010c00 	.word	0x40010c00

08001280 <dht22_read>:

// === DHT22 ===
uint8_t dht22_read(float *temperature) {
 8001280:	b580      	push	{r7, lr}
 8001282:	b086      	sub	sp, #24
 8001284:	af00      	add	r7, sp, #0
 8001286:	6078      	str	r0, [r7, #4]
    uint8_t data[5] = {0};
 8001288:	2300      	movs	r3, #0
 800128a:	60bb      	str	r3, [r7, #8]
 800128c:	2300      	movs	r3, #0
 800128e:	733b      	strb	r3, [r7, #12]
    uint32_t timeout;

    dht22_output_mode();
 8001290:	f7ff ffe2 	bl	8001258 <dht22_output_mode>
    GPIOB->ODR &= ~(1 << DHT22_PIN);
 8001294:	4b67      	ldr	r3, [pc, #412]	@ (8001434 <dht22_read+0x1b4>)
 8001296:	68db      	ldr	r3, [r3, #12]
 8001298:	4a66      	ldr	r2, [pc, #408]	@ (8001434 <dht22_read+0x1b4>)
 800129a:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800129e:	60d3      	str	r3, [r2, #12]
    delay_ms(1);
 80012a0:	2001      	movs	r0, #1
 80012a2:	f7ff feea 	bl	800107a <delay_ms>
    GPIOB->ODR |= (1 << DHT22_PIN);
 80012a6:	4b63      	ldr	r3, [pc, #396]	@ (8001434 <dht22_read+0x1b4>)
 80012a8:	68db      	ldr	r3, [r3, #12]
 80012aa:	4a62      	ldr	r2, [pc, #392]	@ (8001434 <dht22_read+0x1b4>)
 80012ac:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80012b0:	60d3      	str	r3, [r2, #12]
    delay_us(30);
 80012b2:	201e      	movs	r0, #30
 80012b4:	f7ff fecc 	bl	8001050 <delay_us>
    gpio_input_pb(DHT22_PIN);
 80012b8:	2009      	movs	r0, #9
 80012ba:	f7ff ff3d 	bl	8001138 <gpio_input_pb>

    timeout = 10000;
 80012be:	f242 7310 	movw	r3, #10000	@ 0x2710
 80012c2:	617b      	str	r3, [r7, #20]
    while (!(GPIOB->IDR & (1 << DHT22_PIN)) && timeout--) delay_us(1);
 80012c4:	e002      	b.n	80012cc <dht22_read+0x4c>
 80012c6:	2001      	movs	r0, #1
 80012c8:	f7ff fec2 	bl	8001050 <delay_us>
 80012cc:	4b59      	ldr	r3, [pc, #356]	@ (8001434 <dht22_read+0x1b4>)
 80012ce:	689b      	ldr	r3, [r3, #8]
 80012d0:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80012d4:	2b00      	cmp	r3, #0
 80012d6:	d104      	bne.n	80012e2 <dht22_read+0x62>
 80012d8:	697b      	ldr	r3, [r7, #20]
 80012da:	1e5a      	subs	r2, r3, #1
 80012dc:	617a      	str	r2, [r7, #20]
 80012de:	2b00      	cmp	r3, #0
 80012e0:	d1f1      	bne.n	80012c6 <dht22_read+0x46>
    if (!timeout) return 1;
 80012e2:	697b      	ldr	r3, [r7, #20]
 80012e4:	2b00      	cmp	r3, #0
 80012e6:	d101      	bne.n	80012ec <dht22_read+0x6c>
 80012e8:	2301      	movs	r3, #1
 80012ea:	e09e      	b.n	800142a <dht22_read+0x1aa>
    timeout = 10000;
 80012ec:	f242 7310 	movw	r3, #10000	@ 0x2710
 80012f0:	617b      	str	r3, [r7, #20]
    while ((GPIOB->IDR & (1 << DHT22_PIN)) && timeout--) delay_us(1);
 80012f2:	e002      	b.n	80012fa <dht22_read+0x7a>
 80012f4:	2001      	movs	r0, #1
 80012f6:	f7ff feab 	bl	8001050 <delay_us>
 80012fa:	4b4e      	ldr	r3, [pc, #312]	@ (8001434 <dht22_read+0x1b4>)
 80012fc:	689b      	ldr	r3, [r3, #8]
 80012fe:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8001302:	2b00      	cmp	r3, #0
 8001304:	d004      	beq.n	8001310 <dht22_read+0x90>
 8001306:	697b      	ldr	r3, [r7, #20]
 8001308:	1e5a      	subs	r2, r3, #1
 800130a:	617a      	str	r2, [r7, #20]
 800130c:	2b00      	cmp	r3, #0
 800130e:	d1f1      	bne.n	80012f4 <dht22_read+0x74>
    if (!timeout) return 1;
 8001310:	697b      	ldr	r3, [r7, #20]
 8001312:	2b00      	cmp	r3, #0
 8001314:	d101      	bne.n	800131a <dht22_read+0x9a>
 8001316:	2301      	movs	r3, #1
 8001318:	e087      	b.n	800142a <dht22_read+0x1aa>

    for (uint8_t i = 0; i < 5; i++) {
 800131a:	2300      	movs	r3, #0
 800131c:	74fb      	strb	r3, [r7, #19]
 800131e:	e051      	b.n	80013c4 <dht22_read+0x144>
        for (uint8_t j = 0; j < 8; j++) {
 8001320:	2300      	movs	r3, #0
 8001322:	74bb      	strb	r3, [r7, #18]
 8001324:	e048      	b.n	80013b8 <dht22_read+0x138>
            timeout = 10000;
 8001326:	f242 7310 	movw	r3, #10000	@ 0x2710
 800132a:	617b      	str	r3, [r7, #20]
            while (!(GPIOB->IDR & (1 << DHT22_PIN)) && timeout--) delay_us(1);
 800132c:	e002      	b.n	8001334 <dht22_read+0xb4>
 800132e:	2001      	movs	r0, #1
 8001330:	f7ff fe8e 	bl	8001050 <delay_us>
 8001334:	4b3f      	ldr	r3, [pc, #252]	@ (8001434 <dht22_read+0x1b4>)
 8001336:	689b      	ldr	r3, [r3, #8]
 8001338:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800133c:	2b00      	cmp	r3, #0
 800133e:	d104      	bne.n	800134a <dht22_read+0xca>
 8001340:	697b      	ldr	r3, [r7, #20]
 8001342:	1e5a      	subs	r2, r3, #1
 8001344:	617a      	str	r2, [r7, #20]
 8001346:	2b00      	cmp	r3, #0
 8001348:	d1f1      	bne.n	800132e <dht22_read+0xae>
            delay_us(40);
 800134a:	2028      	movs	r0, #40	@ 0x28
 800134c:	f7ff fe80 	bl	8001050 <delay_us>
            data[i] <<= 1;
 8001350:	7cfb      	ldrb	r3, [r7, #19]
 8001352:	3318      	adds	r3, #24
 8001354:	443b      	add	r3, r7
 8001356:	f813 2c10 	ldrb.w	r2, [r3, #-16]
 800135a:	7cfb      	ldrb	r3, [r7, #19]
 800135c:	0052      	lsls	r2, r2, #1
 800135e:	b2d2      	uxtb	r2, r2
 8001360:	3318      	adds	r3, #24
 8001362:	443b      	add	r3, r7
 8001364:	f803 2c10 	strb.w	r2, [r3, #-16]
            if (GPIOB->IDR & (1 << DHT22_PIN)) data[i] |= 1;
 8001368:	4b32      	ldr	r3, [pc, #200]	@ (8001434 <dht22_read+0x1b4>)
 800136a:	689b      	ldr	r3, [r3, #8]
 800136c:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8001370:	2b00      	cmp	r3, #0
 8001372:	d00c      	beq.n	800138e <dht22_read+0x10e>
 8001374:	7cfb      	ldrb	r3, [r7, #19]
 8001376:	3318      	adds	r3, #24
 8001378:	443b      	add	r3, r7
 800137a:	f813 2c10 	ldrb.w	r2, [r3, #-16]
 800137e:	7cfb      	ldrb	r3, [r7, #19]
 8001380:	f042 0201 	orr.w	r2, r2, #1
 8001384:	b2d2      	uxtb	r2, r2
 8001386:	3318      	adds	r3, #24
 8001388:	443b      	add	r3, r7
 800138a:	f803 2c10 	strb.w	r2, [r3, #-16]
            timeout = 10000;
 800138e:	f242 7310 	movw	r3, #10000	@ 0x2710
 8001392:	617b      	str	r3, [r7, #20]
            while ((GPIOB->IDR & (1 << DHT22_PIN)) && timeout--) delay_us(1);
 8001394:	e002      	b.n	800139c <dht22_read+0x11c>
 8001396:	2001      	movs	r0, #1
 8001398:	f7ff fe5a 	bl	8001050 <delay_us>
 800139c:	4b25      	ldr	r3, [pc, #148]	@ (8001434 <dht22_read+0x1b4>)
 800139e:	689b      	ldr	r3, [r3, #8]
 80013a0:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80013a4:	2b00      	cmp	r3, #0
 80013a6:	d004      	beq.n	80013b2 <dht22_read+0x132>
 80013a8:	697b      	ldr	r3, [r7, #20]
 80013aa:	1e5a      	subs	r2, r3, #1
 80013ac:	617a      	str	r2, [r7, #20]
 80013ae:	2b00      	cmp	r3, #0
 80013b0:	d1f1      	bne.n	8001396 <dht22_read+0x116>
        for (uint8_t j = 0; j < 8; j++) {
 80013b2:	7cbb      	ldrb	r3, [r7, #18]
 80013b4:	3301      	adds	r3, #1
 80013b6:	74bb      	strb	r3, [r7, #18]
 80013b8:	7cbb      	ldrb	r3, [r7, #18]
 80013ba:	2b07      	cmp	r3, #7
 80013bc:	d9b3      	bls.n	8001326 <dht22_read+0xa6>
    for (uint8_t i = 0; i < 5; i++) {
 80013be:	7cfb      	ldrb	r3, [r7, #19]
 80013c0:	3301      	adds	r3, #1
 80013c2:	74fb      	strb	r3, [r7, #19]
 80013c4:	7cfb      	ldrb	r3, [r7, #19]
 80013c6:	2b04      	cmp	r3, #4
 80013c8:	d9aa      	bls.n	8001320 <dht22_read+0xa0>
        }
    }

    if (data[4] != ((data[0] + data[1] + data[2] + data[3]) & 0xFF)) return 1;
 80013ca:	7b3b      	ldrb	r3, [r7, #12]
 80013cc:	461a      	mov	r2, r3
 80013ce:	7a3b      	ldrb	r3, [r7, #8]
 80013d0:	4619      	mov	r1, r3
 80013d2:	7a7b      	ldrb	r3, [r7, #9]
 80013d4:	440b      	add	r3, r1
 80013d6:	7ab9      	ldrb	r1, [r7, #10]
 80013d8:	440b      	add	r3, r1
 80013da:	7af9      	ldrb	r1, [r7, #11]
 80013dc:	440b      	add	r3, r1
 80013de:	b2db      	uxtb	r3, r3
 80013e0:	429a      	cmp	r2, r3
 80013e2:	d001      	beq.n	80013e8 <dht22_read+0x168>
 80013e4:	2301      	movs	r3, #1
 80013e6:	e020      	b.n	800142a <dht22_read+0x1aa>

    int16_t temp_raw = ((data[2] & 0x7F) << 8) | data[3];
 80013e8:	7abb      	ldrb	r3, [r7, #10]
 80013ea:	021b      	lsls	r3, r3, #8
 80013ec:	b21b      	sxth	r3, r3
 80013ee:	f403 43fe 	and.w	r3, r3, #32512	@ 0x7f00
 80013f2:	b21a      	sxth	r2, r3
 80013f4:	7afb      	ldrb	r3, [r7, #11]
 80013f6:	b21b      	sxth	r3, r3
 80013f8:	4313      	orrs	r3, r2
 80013fa:	823b      	strh	r3, [r7, #16]
    if (data[2] & 0x80) temp_raw = -temp_raw;
 80013fc:	7abb      	ldrb	r3, [r7, #10]
 80013fe:	b25b      	sxtb	r3, r3
 8001400:	2b00      	cmp	r3, #0
 8001402:	da03      	bge.n	800140c <dht22_read+0x18c>
 8001404:	8a3b      	ldrh	r3, [r7, #16]
 8001406:	425b      	negs	r3, r3
 8001408:	b29b      	uxth	r3, r3
 800140a:	823b      	strh	r3, [r7, #16]
    *temperature = temp_raw * 0.1f;
 800140c:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 8001410:	4618      	mov	r0, r3
 8001412:	f7ff fca7 	bl	8000d64 <__aeabi_i2f>
 8001416:	4603      	mov	r3, r0
 8001418:	4907      	ldr	r1, [pc, #28]	@ (8001438 <dht22_read+0x1b8>)
 800141a:	4618      	mov	r0, r3
 800141c:	f7fe fea0 	bl	8000160 <__aeabi_fmul>
 8001420:	4603      	mov	r3, r0
 8001422:	461a      	mov	r2, r3
 8001424:	687b      	ldr	r3, [r7, #4]
 8001426:	601a      	str	r2, [r3, #0]

    return 0;
 8001428:	2300      	movs	r3, #0
}
 800142a:	4618      	mov	r0, r3
 800142c:	3718      	adds	r7, #24
 800142e:	46bd      	mov	sp, r7
 8001430:	bd80      	pop	{r7, pc}
 8001432:	bf00      	nop
 8001434:	40010c00 	.word	0x40010c00
 8001438:	3dcccccd 	.word	0x3dcccccd

0800143c <adc_init>:

// === ADC ===
void adc_init(void) {
 800143c:	b580      	push	{r7, lr}
 800143e:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_IOPAEN | RCC_APB2ENR_ADC1EN;
 8001440:	4b0b      	ldr	r3, [pc, #44]	@ (8001470 <adc_init+0x34>)
 8001442:	699b      	ldr	r3, [r3, #24]
 8001444:	4a0a      	ldr	r2, [pc, #40]	@ (8001470 <adc_init+0x34>)
 8001446:	f443 7301 	orr.w	r3, r3, #516	@ 0x204
 800144a:	6193      	str	r3, [r2, #24]
    GPIOA->CRL &= ~(0xF << (POTENTIOMETER * 4)); // PA0: analog input
 800144c:	4b09      	ldr	r3, [pc, #36]	@ (8001474 <adc_init+0x38>)
 800144e:	681b      	ldr	r3, [r3, #0]
 8001450:	4a08      	ldr	r2, [pc, #32]	@ (8001474 <adc_init+0x38>)
 8001452:	f023 030f 	bic.w	r3, r3, #15
 8001456:	6013      	str	r3, [r2, #0]
    ADC1->CR2 |= ADC_CR2_ADON; // Power on
 8001458:	4b07      	ldr	r3, [pc, #28]	@ (8001478 <adc_init+0x3c>)
 800145a:	689b      	ldr	r3, [r3, #8]
 800145c:	4a06      	ldr	r2, [pc, #24]	@ (8001478 <adc_init+0x3c>)
 800145e:	f043 0301 	orr.w	r3, r3, #1
 8001462:	6093      	str	r3, [r2, #8]
    delay_ms(1);
 8001464:	2001      	movs	r0, #1
 8001466:	f7ff fe08 	bl	800107a <delay_ms>
}
 800146a:	bf00      	nop
 800146c:	bd80      	pop	{r7, pc}
 800146e:	bf00      	nop
 8001470:	40021000 	.word	0x40021000
 8001474:	40010800 	.word	0x40010800
 8001478:	40012400 	.word	0x40012400

0800147c <adc_read>:

uint16_t adc_read(void) {
 800147c:	b480      	push	{r7}
 800147e:	af00      	add	r7, sp, #0
    ADC1->SQR3 = POTENTIOMETER; // Channel 0
 8001480:	4b0b      	ldr	r3, [pc, #44]	@ (80014b0 <adc_read+0x34>)
 8001482:	2200      	movs	r2, #0
 8001484:	635a      	str	r2, [r3, #52]	@ 0x34
    ADC1->CR2 |= ADC_CR2_ADON;  // Start conversion
 8001486:	4b0a      	ldr	r3, [pc, #40]	@ (80014b0 <adc_read+0x34>)
 8001488:	689b      	ldr	r3, [r3, #8]
 800148a:	4a09      	ldr	r2, [pc, #36]	@ (80014b0 <adc_read+0x34>)
 800148c:	f043 0301 	orr.w	r3, r3, #1
 8001490:	6093      	str	r3, [r2, #8]
    while (!(ADC1->SR & ADC_SR_EOC));
 8001492:	bf00      	nop
 8001494:	4b06      	ldr	r3, [pc, #24]	@ (80014b0 <adc_read+0x34>)
 8001496:	681b      	ldr	r3, [r3, #0]
 8001498:	f003 0302 	and.w	r3, r3, #2
 800149c:	2b00      	cmp	r3, #0
 800149e:	d0f9      	beq.n	8001494 <adc_read+0x18>
    return ADC1->DR;
 80014a0:	4b03      	ldr	r3, [pc, #12]	@ (80014b0 <adc_read+0x34>)
 80014a2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80014a4:	b29b      	uxth	r3, r3
}
 80014a6:	4618      	mov	r0, r3
 80014a8:	46bd      	mov	sp, r7
 80014aa:	bc80      	pop	{r7}
 80014ac:	4770      	bx	lr
 80014ae:	bf00      	nop
 80014b0:	40012400 	.word	0x40012400

080014b4 <pwm_init>:

// === PWM ===
void pwm_init(void) {
 80014b4:	b480      	push	{r7}
 80014b6:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_IOPAEN | RCC_APB2ENR_AFIOEN;
 80014b8:	4b1b      	ldr	r3, [pc, #108]	@ (8001528 <pwm_init+0x74>)
 80014ba:	699b      	ldr	r3, [r3, #24]
 80014bc:	4a1a      	ldr	r2, [pc, #104]	@ (8001528 <pwm_init+0x74>)
 80014be:	f043 0305 	orr.w	r3, r3, #5
 80014c2:	6193      	str	r3, [r2, #24]
    RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 80014c4:	4b18      	ldr	r3, [pc, #96]	@ (8001528 <pwm_init+0x74>)
 80014c6:	69db      	ldr	r3, [r3, #28]
 80014c8:	4a17      	ldr	r2, [pc, #92]	@ (8001528 <pwm_init+0x74>)
 80014ca:	f043 0302 	orr.w	r3, r3, #2
 80014ce:	61d3      	str	r3, [r2, #28]

    GPIOA->CRL &= ~(0xF << (FAN_PWM_PIN * 4));
 80014d0:	4b16      	ldr	r3, [pc, #88]	@ (800152c <pwm_init+0x78>)
 80014d2:	681b      	ldr	r3, [r3, #0]
 80014d4:	4a15      	ldr	r2, [pc, #84]	@ (800152c <pwm_init+0x78>)
 80014d6:	f023 6370 	bic.w	r3, r3, #251658240	@ 0xf000000
 80014da:	6013      	str	r3, [r2, #0]
    GPIOA->CRL |= (0xB << (FAN_PWM_PIN * 4)); // AF push-pull
 80014dc:	4b13      	ldr	r3, [pc, #76]	@ (800152c <pwm_init+0x78>)
 80014de:	681b      	ldr	r3, [r3, #0]
 80014e0:	4a12      	ldr	r2, [pc, #72]	@ (800152c <pwm_init+0x78>)
 80014e2:	f043 6330 	orr.w	r3, r3, #184549376	@ 0xb000000
 80014e6:	6013      	str	r3, [r2, #0]

    TIM3->PSC = 72 - 1; // 1 MHz
 80014e8:	4b11      	ldr	r3, [pc, #68]	@ (8001530 <pwm_init+0x7c>)
 80014ea:	2247      	movs	r2, #71	@ 0x47
 80014ec:	629a      	str	r2, [r3, #40]	@ 0x28
    TIM3->ARR = 1000 - 1; // 1 kHz PWM
 80014ee:	4b10      	ldr	r3, [pc, #64]	@ (8001530 <pwm_init+0x7c>)
 80014f0:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80014f4:	62da      	str	r2, [r3, #44]	@ 0x2c
    TIM3->CCR1 = 0;
 80014f6:	4b0e      	ldr	r3, [pc, #56]	@ (8001530 <pwm_init+0x7c>)
 80014f8:	2200      	movs	r2, #0
 80014fa:	635a      	str	r2, [r3, #52]	@ 0x34
    TIM3->CCMR1 |= (6 << 4); // PWM mode 1
 80014fc:	4b0c      	ldr	r3, [pc, #48]	@ (8001530 <pwm_init+0x7c>)
 80014fe:	699b      	ldr	r3, [r3, #24]
 8001500:	4a0b      	ldr	r2, [pc, #44]	@ (8001530 <pwm_init+0x7c>)
 8001502:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8001506:	6193      	str	r3, [r2, #24]
    TIM3->CCER |= TIM_CCER_CC1E; // Enable output
 8001508:	4b09      	ldr	r3, [pc, #36]	@ (8001530 <pwm_init+0x7c>)
 800150a:	6a1b      	ldr	r3, [r3, #32]
 800150c:	4a08      	ldr	r2, [pc, #32]	@ (8001530 <pwm_init+0x7c>)
 800150e:	f043 0301 	orr.w	r3, r3, #1
 8001512:	6213      	str	r3, [r2, #32]
    TIM3->CR1 |= TIM_CR1_CEN; // Start timer
 8001514:	4b06      	ldr	r3, [pc, #24]	@ (8001530 <pwm_init+0x7c>)
 8001516:	681b      	ldr	r3, [r3, #0]
 8001518:	4a05      	ldr	r2, [pc, #20]	@ (8001530 <pwm_init+0x7c>)
 800151a:	f043 0301 	orr.w	r3, r3, #1
 800151e:	6013      	str	r3, [r2, #0]
}
 8001520:	bf00      	nop
 8001522:	46bd      	mov	sp, r7
 8001524:	bc80      	pop	{r7}
 8001526:	4770      	bx	lr
 8001528:	40021000 	.word	0x40021000
 800152c:	40010800 	.word	0x40010800
 8001530:	40000400 	.word	0x40000400

08001534 <pwm_set_duty>:

void pwm_set_duty(uint16_t duty) {
 8001534:	b480      	push	{r7}
 8001536:	b083      	sub	sp, #12
 8001538:	af00      	add	r7, sp, #0
 800153a:	4603      	mov	r3, r0
 800153c:	80fb      	strh	r3, [r7, #6]
    if (duty > 1000) duty = 1000;
 800153e:	88fb      	ldrh	r3, [r7, #6]
 8001540:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8001544:	d902      	bls.n	800154c <pwm_set_duty+0x18>
 8001546:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800154a:	80fb      	strh	r3, [r7, #6]
    TIM3->CCR1 = duty;
 800154c:	4a03      	ldr	r2, [pc, #12]	@ (800155c <pwm_set_duty+0x28>)
 800154e:	88fb      	ldrh	r3, [r7, #6]
 8001550:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8001552:	bf00      	nop
 8001554:	370c      	adds	r7, #12
 8001556:	46bd      	mov	sp, r7
 8001558:	bc80      	pop	{r7}
 800155a:	4770      	bx	lr
 800155c:	40000400 	.word	0x40000400

08001560 <main>:

// === Main ===
int main(void) {
 8001560:	b580      	push	{r7, lr}
 8001562:	b094      	sub	sp, #80	@ 0x50
 8001564:	af00      	add	r7, sp, #0
    SystemInit72MHz();
 8001566:	f7ff fd0d 	bl	8000f84 <SystemInit72MHz>
    uart_init();
 800156a:	f7ff fcc5 	bl	8000ef8 <uart_init>
    timer_init();
 800156e:	f7ff fd4f 	bl	8001010 <timer_init>
    adc_init();
 8001572:	f7ff ff63 	bl	800143c <adc_init>
    pwm_init();
 8001576:	f7ff ff9d 	bl	80014b4 <pwm_init>

    gpio_input_pb(DHT22_PIN);
 800157a:	2009      	movs	r0, #9
 800157c:	f7ff fddc 	bl	8001138 <gpio_input_pb>
    gpio_input_pa(MODE_BTN);
 8001580:	2008      	movs	r0, #8
 8001582:	f7ff fd91 	bl	80010a8 <gpio_input_pa>
    gpio_input_pb(FAN_BTN);
 8001586:	2005      	movs	r0, #5
 8001588:	f7ff fdd6 	bl	8001138 <gpio_input_pb>
    gpio_output_pb(RELAY_PIN);
 800158c:	200a      	movs	r0, #10
 800158e:	f7ff fe1b 	bl	80011c8 <gpio_output_pb>

    uart_send("Khoi dong OK (Fan Control)\r\n");
 8001592:	4892      	ldr	r0, [pc, #584]	@ (80017dc <main+0x27c>)
 8001594:	f7ff fcd8 	bl	8000f48 <uart_send>

    float temp = 0;
 8001598:	f04f 0300 	mov.w	r3, #0
 800159c:	647b      	str	r3, [r7, #68]	@ 0x44
    char buffer[64];
    uint8_t btn_last = 1;
 800159e:	2301      	movs	r3, #1
 80015a0:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
    uint8_t fanbtn_last = 1;
 80015a4:	2301      	movs	r3, #1
 80015a6:	f887 304e 	strb.w	r3, [r7, #78]	@ 0x4e

    while (1) {
        // Nút chọn chế độ
        uint8_t btn = (GPIOA->IDR & (1 << MODE_BTN)) ? 1 : 0;
 80015aa:	4b8d      	ldr	r3, [pc, #564]	@ (80017e0 <main+0x280>)
 80015ac:	689b      	ldr	r3, [r3, #8]
 80015ae:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80015b2:	2b00      	cmp	r3, #0
 80015b4:	bf14      	ite	ne
 80015b6:	2301      	movne	r3, #1
 80015b8:	2300      	moveq	r3, #0
 80015ba:	b2db      	uxtb	r3, r3
 80015bc:	f887 304d 	strb.w	r3, [r7, #77]	@ 0x4d
        if (btn_last == 1 && btn == 0) {
 80015c0:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 80015c4:	2b01      	cmp	r3, #1
 80015c6:	d143      	bne.n	8001650 <main+0xf0>
 80015c8:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 80015cc:	2b00      	cmp	r3, #0
 80015ce:	d13f      	bne.n	8001650 <main+0xf0>
            mode ^= 1; // Toggle AUTO/MANUAL
 80015d0:	4b84      	ldr	r3, [pc, #528]	@ (80017e4 <main+0x284>)
 80015d2:	781b      	ldrb	r3, [r3, #0]
 80015d4:	f083 0301 	eor.w	r3, r3, #1
 80015d8:	b2da      	uxtb	r2, r3
 80015da:	4b82      	ldr	r3, [pc, #520]	@ (80017e4 <main+0x284>)
 80015dc:	701a      	strb	r2, [r3, #0]
            if (mode) {
 80015de:	4b81      	ldr	r3, [pc, #516]	@ (80017e4 <main+0x284>)
 80015e0:	781b      	ldrb	r3, [r3, #0]
 80015e2:	2b00      	cmp	r3, #0
 80015e4:	d003      	beq.n	80015ee <main+0x8e>
                uart_send("Che do: MANUAL\r\n");
 80015e6:	4880      	ldr	r0, [pc, #512]	@ (80017e8 <main+0x288>)
 80015e8:	f7ff fcae 	bl	8000f48 <uart_send>
 80015ec:	e030      	b.n	8001650 <main+0xf0>
            } else {
                uart_send("Che do: AUTO\r\n");
 80015ee:	487f      	ldr	r0, [pc, #508]	@ (80017ec <main+0x28c>)
 80015f0:	f7ff fcaa 	bl	8000f48 <uart_send>
                fan_manual = 0;
 80015f4:	4b7e      	ldr	r3, [pc, #504]	@ (80017f0 <main+0x290>)
 80015f6:	2200      	movs	r2, #0
 80015f8:	701a      	strb	r2, [r3, #0]
                pwm_set_duty(0);
 80015fa:	2000      	movs	r0, #0
 80015fc:	f7ff ff9a 	bl	8001534 <pwm_set_duty>
                // Kiểm tra nhiệt độ ngay khi chuyển sang AUTO
                if (temp >= 34.0f) {
 8001600:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001602:	497c      	ldr	r1, [pc, #496]	@ (80017f4 <main+0x294>)
 8001604:	4618      	mov	r0, r3
 8001606:	f7ff fc63 	bl	8000ed0 <__aeabi_fcmpge>
 800160a:	4603      	mov	r3, r0
 800160c:	2b00      	cmp	r3, #0
 800160e:	d010      	beq.n	8001632 <main+0xd2>
                    GPIOB->ODR |= (1 << RELAY_PIN);
 8001610:	4b79      	ldr	r3, [pc, #484]	@ (80017f8 <main+0x298>)
 8001612:	68db      	ldr	r3, [r3, #12]
 8001614:	4a78      	ldr	r2, [pc, #480]	@ (80017f8 <main+0x298>)
 8001616:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800161a:	60d3      	str	r3, [r2, #12]
                    pwm_set_duty(1000); // FULL SPEED
 800161c:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001620:	f7ff ff88 	bl	8001534 <pwm_set_duty>
                    fan_auto_state = 1;
 8001624:	4b75      	ldr	r3, [pc, #468]	@ (80017fc <main+0x29c>)
 8001626:	2201      	movs	r2, #1
 8001628:	701a      	strb	r2, [r3, #0]
                    uart_send("Quat: BAT (AUTO)\r\n");
 800162a:	4875      	ldr	r0, [pc, #468]	@ (8001800 <main+0x2a0>)
 800162c:	f7ff fc8c 	bl	8000f48 <uart_send>
 8001630:	e00e      	b.n	8001650 <main+0xf0>
                } else {
                    GPIOB->ODR &= ~(1 << RELAY_PIN);
 8001632:	4b71      	ldr	r3, [pc, #452]	@ (80017f8 <main+0x298>)
 8001634:	68db      	ldr	r3, [r3, #12]
 8001636:	4a70      	ldr	r2, [pc, #448]	@ (80017f8 <main+0x298>)
 8001638:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800163c:	60d3      	str	r3, [r2, #12]
                    pwm_set_duty(0);
 800163e:	2000      	movs	r0, #0
 8001640:	f7ff ff78 	bl	8001534 <pwm_set_duty>
                    fan_auto_state = 0;
 8001644:	4b6d      	ldr	r3, [pc, #436]	@ (80017fc <main+0x29c>)
 8001646:	2200      	movs	r2, #0
 8001648:	701a      	strb	r2, [r3, #0]
                    uart_send("Quat: TAT (AUTO)\r\n");
 800164a:	486e      	ldr	r0, [pc, #440]	@ (8001804 <main+0x2a4>)
 800164c:	f7ff fc7c 	bl	8000f48 <uart_send>
                }
            }
        }
        btn_last = btn;
 8001650:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 8001654:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f

        // Nút bật/tắt quạt khi MANUAL
        uint8_t fanbtn = (GPIOB->IDR & (1 << FAN_BTN)) ? 1 : 0;
 8001658:	4b67      	ldr	r3, [pc, #412]	@ (80017f8 <main+0x298>)
 800165a:	689b      	ldr	r3, [r3, #8]
 800165c:	f003 0320 	and.w	r3, r3, #32
 8001660:	2b00      	cmp	r3, #0
 8001662:	bf14      	ite	ne
 8001664:	2301      	movne	r3, #1
 8001666:	2300      	moveq	r3, #0
 8001668:	b2db      	uxtb	r3, r3
 800166a:	f887 304c 	strb.w	r3, [r7, #76]	@ 0x4c
        if (fanbtn_last == 1 && fanbtn == 0 && mode == 1) {
 800166e:	f897 304e 	ldrb.w	r3, [r7, #78]	@ 0x4e
 8001672:	2b01      	cmp	r3, #1
 8001674:	d11c      	bne.n	80016b0 <main+0x150>
 8001676:	f897 304c 	ldrb.w	r3, [r7, #76]	@ 0x4c
 800167a:	2b00      	cmp	r3, #0
 800167c:	d118      	bne.n	80016b0 <main+0x150>
 800167e:	4b59      	ldr	r3, [pc, #356]	@ (80017e4 <main+0x284>)
 8001680:	781b      	ldrb	r3, [r3, #0]
 8001682:	2b01      	cmp	r3, #1
 8001684:	d114      	bne.n	80016b0 <main+0x150>
            fan_manual ^= 1; // Toggle fan
 8001686:	4b5a      	ldr	r3, [pc, #360]	@ (80017f0 <main+0x290>)
 8001688:	781b      	ldrb	r3, [r3, #0]
 800168a:	f083 0301 	eor.w	r3, r3, #1
 800168e:	b2da      	uxtb	r2, r3
 8001690:	4b57      	ldr	r3, [pc, #348]	@ (80017f0 <main+0x290>)
 8001692:	701a      	strb	r2, [r3, #0]
            if (fan_manual) uart_send("Quat: BAT (MANUAL)\r\n");
 8001694:	4b56      	ldr	r3, [pc, #344]	@ (80017f0 <main+0x290>)
 8001696:	781b      	ldrb	r3, [r3, #0]
 8001698:	2b00      	cmp	r3, #0
 800169a:	d003      	beq.n	80016a4 <main+0x144>
 800169c:	485a      	ldr	r0, [pc, #360]	@ (8001808 <main+0x2a8>)
 800169e:	f7ff fc53 	bl	8000f48 <uart_send>
 80016a2:	e005      	b.n	80016b0 <main+0x150>
            else {
                uart_send("Quat: TAT (MANUAL)\r\n");
 80016a4:	4859      	ldr	r0, [pc, #356]	@ (800180c <main+0x2ac>)
 80016a6:	f7ff fc4f 	bl	8000f48 <uart_send>
                pwm_set_duty(0);
 80016aa:	2000      	movs	r0, #0
 80016ac:	f7ff ff42 	bl	8001534 <pwm_set_duty>
            }
        }
        fanbtn_last = fanbtn;
 80016b0:	f897 304c 	ldrb.w	r3, [r7, #76]	@ 0x4c
 80016b4:	f887 304e 	strb.w	r3, [r7, #78]	@ 0x4e

        // Đọc nhiệt độ
        if (dht22_read(&temp) == 0) {
 80016b8:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 80016bc:	4618      	mov	r0, r3
 80016be:	f7ff fddf 	bl	8001280 <dht22_read>
 80016c2:	4603      	mov	r3, r0
 80016c4:	2b00      	cmp	r3, #0
 80016c6:	d10e      	bne.n	80016e6 <main+0x186>
            sprintf(buffer, "Nhiet do: %.1f C\r\n", temp);
 80016c8:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80016ca:	4618      	mov	r0, r3
 80016cc:	f7fe ff60 	bl	8000590 <__aeabi_f2d>
 80016d0:	4602      	mov	r2, r0
 80016d2:	460b      	mov	r3, r1
 80016d4:	1d38      	adds	r0, r7, #4
 80016d6:	494e      	ldr	r1, [pc, #312]	@ (8001810 <main+0x2b0>)
 80016d8:	f000 feec 	bl	80024b4 <siprintf>
            uart_send(buffer);
 80016dc:	1d3b      	adds	r3, r7, #4
 80016de:	4618      	mov	r0, r3
 80016e0:	f7ff fc32 	bl	8000f48 <uart_send>
 80016e4:	e002      	b.n	80016ec <main+0x18c>
        } else {
            uart_send("Doc DHT22 that bai!\r\n");
 80016e6:	484b      	ldr	r0, [pc, #300]	@ (8001814 <main+0x2b4>)
 80016e8:	f7ff fc2e 	bl	8000f48 <uart_send>
        }

        // Điều khiển quạt
        if (mode == 0) { // AUTO
 80016ec:	4b3d      	ldr	r3, [pc, #244]	@ (80017e4 <main+0x284>)
 80016ee:	781b      	ldrb	r3, [r3, #0]
 80016f0:	2b00      	cmp	r3, #0
 80016f2:	d139      	bne.n	8001768 <main+0x208>
            if (temp >= 34.0f && fan_auto_state == 0) {
 80016f4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80016f6:	493f      	ldr	r1, [pc, #252]	@ (80017f4 <main+0x294>)
 80016f8:	4618      	mov	r0, r3
 80016fa:	f7ff fbe9 	bl	8000ed0 <__aeabi_fcmpge>
 80016fe:	4603      	mov	r3, r0
 8001700:	2b00      	cmp	r3, #0
 8001702:	d014      	beq.n	800172e <main+0x1ce>
 8001704:	4b3d      	ldr	r3, [pc, #244]	@ (80017fc <main+0x29c>)
 8001706:	781b      	ldrb	r3, [r3, #0]
 8001708:	2b00      	cmp	r3, #0
 800170a:	d110      	bne.n	800172e <main+0x1ce>
                GPIOB->ODR |= (1 << RELAY_PIN);
 800170c:	4b3a      	ldr	r3, [pc, #232]	@ (80017f8 <main+0x298>)
 800170e:	68db      	ldr	r3, [r3, #12]
 8001710:	4a39      	ldr	r2, [pc, #228]	@ (80017f8 <main+0x298>)
 8001712:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001716:	60d3      	str	r3, [r2, #12]
                pwm_set_duty(1000); // FULL SPEED
 8001718:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800171c:	f7ff ff0a 	bl	8001534 <pwm_set_duty>
                fan_auto_state = 1;
 8001720:	4b36      	ldr	r3, [pc, #216]	@ (80017fc <main+0x29c>)
 8001722:	2201      	movs	r2, #1
 8001724:	701a      	strb	r2, [r3, #0]
                uart_send("Quat: BAT (AUTO)\r\n");
 8001726:	4836      	ldr	r0, [pc, #216]	@ (8001800 <main+0x2a0>)
 8001728:	f7ff fc0e 	bl	8000f48 <uart_send>
 800172c:	e051      	b.n	80017d2 <main+0x272>
            } else if (temp <= 32.0f && fan_auto_state == 1) {
 800172e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8001730:	f04f 4184 	mov.w	r1, #1107296256	@ 0x42000000
 8001734:	4618      	mov	r0, r3
 8001736:	f7ff fbc1 	bl	8000ebc <__aeabi_fcmple>
 800173a:	4603      	mov	r3, r0
 800173c:	2b00      	cmp	r3, #0
 800173e:	d048      	beq.n	80017d2 <main+0x272>
 8001740:	4b2e      	ldr	r3, [pc, #184]	@ (80017fc <main+0x29c>)
 8001742:	781b      	ldrb	r3, [r3, #0]
 8001744:	2b01      	cmp	r3, #1
 8001746:	d144      	bne.n	80017d2 <main+0x272>
                GPIOB->ODR &= ~(1 << RELAY_PIN);
 8001748:	4b2b      	ldr	r3, [pc, #172]	@ (80017f8 <main+0x298>)
 800174a:	68db      	ldr	r3, [r3, #12]
 800174c:	4a2a      	ldr	r2, [pc, #168]	@ (80017f8 <main+0x298>)
 800174e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8001752:	60d3      	str	r3, [r2, #12]
                pwm_set_duty(0);
 8001754:	2000      	movs	r0, #0
 8001756:	f7ff feed 	bl	8001534 <pwm_set_duty>
                fan_auto_state = 0;
 800175a:	4b28      	ldr	r3, [pc, #160]	@ (80017fc <main+0x29c>)
 800175c:	2200      	movs	r2, #0
 800175e:	701a      	strb	r2, [r3, #0]
                uart_send("Quat: TAT (AUTO)\r\n");
 8001760:	4828      	ldr	r0, [pc, #160]	@ (8001804 <main+0x2a4>)
 8001762:	f7ff fbf1 	bl	8000f48 <uart_send>
 8001766:	e034      	b.n	80017d2 <main+0x272>
            }
        } else { // MANUAL
            if (fan_manual) {
 8001768:	4b21      	ldr	r3, [pc, #132]	@ (80017f0 <main+0x290>)
 800176a:	781b      	ldrb	r3, [r3, #0]
 800176c:	2b00      	cmp	r3, #0
 800176e:	d027      	beq.n	80017c0 <main+0x260>
                GPIOB->ODR |= (1 << RELAY_PIN);
 8001770:	4b21      	ldr	r3, [pc, #132]	@ (80017f8 <main+0x298>)
 8001772:	68db      	ldr	r3, [r3, #12]
 8001774:	4a20      	ldr	r2, [pc, #128]	@ (80017f8 <main+0x298>)
 8001776:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800177a:	60d3      	str	r3, [r2, #12]
                uint16_t adc = adc_read();
 800177c:	f7ff fe7e 	bl	800147c <adc_read>
 8001780:	4603      	mov	r3, r0
 8001782:	f8a7 304a 	strh.w	r3, [r7, #74]	@ 0x4a
                uint16_t duty = adc / 4; // scale 0..1000
 8001786:	f8b7 304a 	ldrh.w	r3, [r7, #74]	@ 0x4a
 800178a:	089b      	lsrs	r3, r3, #2
 800178c:	f8a7 3048 	strh.w	r3, [r7, #72]	@ 0x48
                pwm_set_duty(duty);
 8001790:	f8b7 3048 	ldrh.w	r3, [r7, #72]	@ 0x48
 8001794:	4618      	mov	r0, r3
 8001796:	f7ff fecd 	bl	8001534 <pwm_set_duty>
                sprintf(buffer, "PWM Duty: %lu%%\r\n", (uint32_t)((duty * 100) / 1000));
 800179a:	f8b7 3048 	ldrh.w	r3, [r7, #72]	@ 0x48
 800179e:	4a1e      	ldr	r2, [pc, #120]	@ (8001818 <main+0x2b8>)
 80017a0:	fb82 1203 	smull	r1, r2, r2, r3
 80017a4:	1092      	asrs	r2, r2, #2
 80017a6:	17db      	asrs	r3, r3, #31
 80017a8:	1ad3      	subs	r3, r2, r3
 80017aa:	461a      	mov	r2, r3
 80017ac:	1d3b      	adds	r3, r7, #4
 80017ae:	491b      	ldr	r1, [pc, #108]	@ (800181c <main+0x2bc>)
 80017b0:	4618      	mov	r0, r3
 80017b2:	f000 fe7f 	bl	80024b4 <siprintf>
                uart_send(buffer);
 80017b6:	1d3b      	adds	r3, r7, #4
 80017b8:	4618      	mov	r0, r3
 80017ba:	f7ff fbc5 	bl	8000f48 <uart_send>
 80017be:	e008      	b.n	80017d2 <main+0x272>
            } else {
                GPIOB->ODR &= ~(1 << RELAY_PIN);
 80017c0:	4b0d      	ldr	r3, [pc, #52]	@ (80017f8 <main+0x298>)
 80017c2:	68db      	ldr	r3, [r3, #12]
 80017c4:	4a0c      	ldr	r2, [pc, #48]	@ (80017f8 <main+0x298>)
 80017c6:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80017ca:	60d3      	str	r3, [r2, #12]
                pwm_set_duty(0);
 80017cc:	2000      	movs	r0, #0
 80017ce:	f7ff feb1 	bl	8001534 <pwm_set_duty>
            }
        }

        delay_ms(2000);
 80017d2:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 80017d6:	f7ff fc50 	bl	800107a <delay_ms>
    while (1) {
 80017da:	e6e6      	b.n	80015aa <main+0x4a>
 80017dc:	08004738 	.word	0x08004738
 80017e0:	40010800 	.word	0x40010800
 80017e4:	200001e8 	.word	0x200001e8
 80017e8:	08004758 	.word	0x08004758
 80017ec:	0800476c 	.word	0x0800476c
 80017f0:	200001e9 	.word	0x200001e9
 80017f4:	42080000 	.word	0x42080000
 80017f8:	40010c00 	.word	0x40010c00
 80017fc:	200001ea 	.word	0x200001ea
 8001800:	0800477c 	.word	0x0800477c
 8001804:	08004790 	.word	0x08004790
 8001808:	080047a4 	.word	0x080047a4
 800180c:	080047bc 	.word	0x080047bc
 8001810:	080047d4 	.word	0x080047d4
 8001814:	080047e8 	.word	0x080047e8
 8001818:	66666667 	.word	0x66666667
 800181c:	08004800 	.word	0x08004800

08001820 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001820:	b480      	push	{r7}
 8001822:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001824:	bf00      	nop
 8001826:	e7fd      	b.n	8001824 <NMI_Handler+0x4>

08001828 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001828:	b480      	push	{r7}
 800182a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800182c:	bf00      	nop
 800182e:	e7fd      	b.n	800182c <HardFault_Handler+0x4>

08001830 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001830:	b480      	push	{r7}
 8001832:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001834:	bf00      	nop
 8001836:	e7fd      	b.n	8001834 <MemManage_Handler+0x4>

08001838 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001838:	b480      	push	{r7}
 800183a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800183c:	bf00      	nop
 800183e:	e7fd      	b.n	800183c <BusFault_Handler+0x4>

08001840 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001840:	b480      	push	{r7}
 8001842:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001844:	bf00      	nop
 8001846:	e7fd      	b.n	8001844 <UsageFault_Handler+0x4>

08001848 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001848:	b480      	push	{r7}
 800184a:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800184c:	bf00      	nop
 800184e:	46bd      	mov	sp, r7
 8001850:	bc80      	pop	{r7}
 8001852:	4770      	bx	lr

08001854 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001854:	b480      	push	{r7}
 8001856:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001858:	bf00      	nop
 800185a:	46bd      	mov	sp, r7
 800185c:	bc80      	pop	{r7}
 800185e:	4770      	bx	lr

08001860 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001860:	b480      	push	{r7}
 8001862:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001864:	bf00      	nop
 8001866:	46bd      	mov	sp, r7
 8001868:	bc80      	pop	{r7}
 800186a:	4770      	bx	lr

0800186c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800186c:	b580      	push	{r7, lr}
 800186e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001870:	f000 f8f0 	bl	8001a54 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001874:	bf00      	nop
 8001876:	bd80      	pop	{r7, pc}

08001878 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001878:	b480      	push	{r7}
 800187a:	af00      	add	r7, sp, #0
  return 1;
 800187c:	2301      	movs	r3, #1
}
 800187e:	4618      	mov	r0, r3
 8001880:	46bd      	mov	sp, r7
 8001882:	bc80      	pop	{r7}
 8001884:	4770      	bx	lr

08001886 <_kill>:

int _kill(int pid, int sig)
{
 8001886:	b580      	push	{r7, lr}
 8001888:	b082      	sub	sp, #8
 800188a:	af00      	add	r7, sp, #0
 800188c:	6078      	str	r0, [r7, #4]
 800188e:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001890:	f000 fec6 	bl	8002620 <__errno>
 8001894:	4603      	mov	r3, r0
 8001896:	2216      	movs	r2, #22
 8001898:	601a      	str	r2, [r3, #0]
  return -1;
 800189a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800189e:	4618      	mov	r0, r3
 80018a0:	3708      	adds	r7, #8
 80018a2:	46bd      	mov	sp, r7
 80018a4:	bd80      	pop	{r7, pc}

080018a6 <_exit>:

void _exit (int status)
{
 80018a6:	b580      	push	{r7, lr}
 80018a8:	b082      	sub	sp, #8
 80018aa:	af00      	add	r7, sp, #0
 80018ac:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80018ae:	f04f 31ff 	mov.w	r1, #4294967295
 80018b2:	6878      	ldr	r0, [r7, #4]
 80018b4:	f7ff ffe7 	bl	8001886 <_kill>
  while (1) {}    /* Make sure we hang here */
 80018b8:	bf00      	nop
 80018ba:	e7fd      	b.n	80018b8 <_exit+0x12>

080018bc <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80018bc:	b580      	push	{r7, lr}
 80018be:	b086      	sub	sp, #24
 80018c0:	af00      	add	r7, sp, #0
 80018c2:	60f8      	str	r0, [r7, #12]
 80018c4:	60b9      	str	r1, [r7, #8]
 80018c6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80018c8:	2300      	movs	r3, #0
 80018ca:	617b      	str	r3, [r7, #20]
 80018cc:	e00a      	b.n	80018e4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80018ce:	f3af 8000 	nop.w
 80018d2:	4601      	mov	r1, r0
 80018d4:	68bb      	ldr	r3, [r7, #8]
 80018d6:	1c5a      	adds	r2, r3, #1
 80018d8:	60ba      	str	r2, [r7, #8]
 80018da:	b2ca      	uxtb	r2, r1
 80018dc:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80018de:	697b      	ldr	r3, [r7, #20]
 80018e0:	3301      	adds	r3, #1
 80018e2:	617b      	str	r3, [r7, #20]
 80018e4:	697a      	ldr	r2, [r7, #20]
 80018e6:	687b      	ldr	r3, [r7, #4]
 80018e8:	429a      	cmp	r2, r3
 80018ea:	dbf0      	blt.n	80018ce <_read+0x12>
  }

  return len;
 80018ec:	687b      	ldr	r3, [r7, #4]
}
 80018ee:	4618      	mov	r0, r3
 80018f0:	3718      	adds	r7, #24
 80018f2:	46bd      	mov	sp, r7
 80018f4:	bd80      	pop	{r7, pc}

080018f6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80018f6:	b580      	push	{r7, lr}
 80018f8:	b086      	sub	sp, #24
 80018fa:	af00      	add	r7, sp, #0
 80018fc:	60f8      	str	r0, [r7, #12]
 80018fe:	60b9      	str	r1, [r7, #8]
 8001900:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001902:	2300      	movs	r3, #0
 8001904:	617b      	str	r3, [r7, #20]
 8001906:	e009      	b.n	800191c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001908:	68bb      	ldr	r3, [r7, #8]
 800190a:	1c5a      	adds	r2, r3, #1
 800190c:	60ba      	str	r2, [r7, #8]
 800190e:	781b      	ldrb	r3, [r3, #0]
 8001910:	4618      	mov	r0, r3
 8001912:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001916:	697b      	ldr	r3, [r7, #20]
 8001918:	3301      	adds	r3, #1
 800191a:	617b      	str	r3, [r7, #20]
 800191c:	697a      	ldr	r2, [r7, #20]
 800191e:	687b      	ldr	r3, [r7, #4]
 8001920:	429a      	cmp	r2, r3
 8001922:	dbf1      	blt.n	8001908 <_write+0x12>
  }
  return len;
 8001924:	687b      	ldr	r3, [r7, #4]
}
 8001926:	4618      	mov	r0, r3
 8001928:	3718      	adds	r7, #24
 800192a:	46bd      	mov	sp, r7
 800192c:	bd80      	pop	{r7, pc}

0800192e <_close>:

int _close(int file)
{
 800192e:	b480      	push	{r7}
 8001930:	b083      	sub	sp, #12
 8001932:	af00      	add	r7, sp, #0
 8001934:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001936:	f04f 33ff 	mov.w	r3, #4294967295
}
 800193a:	4618      	mov	r0, r3
 800193c:	370c      	adds	r7, #12
 800193e:	46bd      	mov	sp, r7
 8001940:	bc80      	pop	{r7}
 8001942:	4770      	bx	lr

08001944 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001944:	b480      	push	{r7}
 8001946:	b083      	sub	sp, #12
 8001948:	af00      	add	r7, sp, #0
 800194a:	6078      	str	r0, [r7, #4]
 800194c:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800194e:	683b      	ldr	r3, [r7, #0]
 8001950:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001954:	605a      	str	r2, [r3, #4]
  return 0;
 8001956:	2300      	movs	r3, #0
}
 8001958:	4618      	mov	r0, r3
 800195a:	370c      	adds	r7, #12
 800195c:	46bd      	mov	sp, r7
 800195e:	bc80      	pop	{r7}
 8001960:	4770      	bx	lr

08001962 <_isatty>:

int _isatty(int file)
{
 8001962:	b480      	push	{r7}
 8001964:	b083      	sub	sp, #12
 8001966:	af00      	add	r7, sp, #0
 8001968:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800196a:	2301      	movs	r3, #1
}
 800196c:	4618      	mov	r0, r3
 800196e:	370c      	adds	r7, #12
 8001970:	46bd      	mov	sp, r7
 8001972:	bc80      	pop	{r7}
 8001974:	4770      	bx	lr

08001976 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001976:	b480      	push	{r7}
 8001978:	b085      	sub	sp, #20
 800197a:	af00      	add	r7, sp, #0
 800197c:	60f8      	str	r0, [r7, #12]
 800197e:	60b9      	str	r1, [r7, #8]
 8001980:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001982:	2300      	movs	r3, #0
}
 8001984:	4618      	mov	r0, r3
 8001986:	3714      	adds	r7, #20
 8001988:	46bd      	mov	sp, r7
 800198a:	bc80      	pop	{r7}
 800198c:	4770      	bx	lr
	...

08001990 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001990:	b580      	push	{r7, lr}
 8001992:	b086      	sub	sp, #24
 8001994:	af00      	add	r7, sp, #0
 8001996:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001998:	4a14      	ldr	r2, [pc, #80]	@ (80019ec <_sbrk+0x5c>)
 800199a:	4b15      	ldr	r3, [pc, #84]	@ (80019f0 <_sbrk+0x60>)
 800199c:	1ad3      	subs	r3, r2, r3
 800199e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80019a0:	697b      	ldr	r3, [r7, #20]
 80019a2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80019a4:	4b13      	ldr	r3, [pc, #76]	@ (80019f4 <_sbrk+0x64>)
 80019a6:	681b      	ldr	r3, [r3, #0]
 80019a8:	2b00      	cmp	r3, #0
 80019aa:	d102      	bne.n	80019b2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80019ac:	4b11      	ldr	r3, [pc, #68]	@ (80019f4 <_sbrk+0x64>)
 80019ae:	4a12      	ldr	r2, [pc, #72]	@ (80019f8 <_sbrk+0x68>)
 80019b0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80019b2:	4b10      	ldr	r3, [pc, #64]	@ (80019f4 <_sbrk+0x64>)
 80019b4:	681a      	ldr	r2, [r3, #0]
 80019b6:	687b      	ldr	r3, [r7, #4]
 80019b8:	4413      	add	r3, r2
 80019ba:	693a      	ldr	r2, [r7, #16]
 80019bc:	429a      	cmp	r2, r3
 80019be:	d207      	bcs.n	80019d0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80019c0:	f000 fe2e 	bl	8002620 <__errno>
 80019c4:	4603      	mov	r3, r0
 80019c6:	220c      	movs	r2, #12
 80019c8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80019ca:	f04f 33ff 	mov.w	r3, #4294967295
 80019ce:	e009      	b.n	80019e4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80019d0:	4b08      	ldr	r3, [pc, #32]	@ (80019f4 <_sbrk+0x64>)
 80019d2:	681b      	ldr	r3, [r3, #0]
 80019d4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80019d6:	4b07      	ldr	r3, [pc, #28]	@ (80019f4 <_sbrk+0x64>)
 80019d8:	681a      	ldr	r2, [r3, #0]
 80019da:	687b      	ldr	r3, [r7, #4]
 80019dc:	4413      	add	r3, r2
 80019de:	4a05      	ldr	r2, [pc, #20]	@ (80019f4 <_sbrk+0x64>)
 80019e0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80019e2:	68fb      	ldr	r3, [r7, #12]
}
 80019e4:	4618      	mov	r0, r3
 80019e6:	3718      	adds	r7, #24
 80019e8:	46bd      	mov	sp, r7
 80019ea:	bd80      	pop	{r7, pc}
 80019ec:	20005000 	.word	0x20005000
 80019f0:	00000400 	.word	0x00000400
 80019f4:	200001ec 	.word	0x200001ec
 80019f8:	20000340 	.word	0x20000340

080019fc <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80019fc:	b480      	push	{r7}
 80019fe:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001a00:	bf00      	nop
 8001a02:	46bd      	mov	sp, r7
 8001a04:	bc80      	pop	{r7}
 8001a06:	4770      	bx	lr

08001a08 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Call the clock system initialization function.*/
    bl  SystemInit
 8001a08:	f7ff fff8 	bl	80019fc <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001a0c:	480b      	ldr	r0, [pc, #44]	@ (8001a3c <LoopFillZerobss+0xe>)
  ldr r1, =_edata
 8001a0e:	490c      	ldr	r1, [pc, #48]	@ (8001a40 <LoopFillZerobss+0x12>)
  ldr r2, =_sidata
 8001a10:	4a0c      	ldr	r2, [pc, #48]	@ (8001a44 <LoopFillZerobss+0x16>)
  movs r3, #0
 8001a12:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001a14:	e002      	b.n	8001a1c <LoopCopyDataInit>

08001a16 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001a16:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001a18:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001a1a:	3304      	adds	r3, #4

08001a1c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001a1c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001a1e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001a20:	d3f9      	bcc.n	8001a16 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001a22:	4a09      	ldr	r2, [pc, #36]	@ (8001a48 <LoopFillZerobss+0x1a>)
  ldr r4, =_ebss
 8001a24:	4c09      	ldr	r4, [pc, #36]	@ (8001a4c <LoopFillZerobss+0x1e>)
  movs r3, #0
 8001a26:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001a28:	e001      	b.n	8001a2e <LoopFillZerobss>

08001a2a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001a2a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001a2c:	3204      	adds	r2, #4

08001a2e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001a2e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001a30:	d3fb      	bcc.n	8001a2a <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8001a32:	f000 fdfb 	bl	800262c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001a36:	f7ff fd93 	bl	8001560 <main>
  bx lr
 8001a3a:	4770      	bx	lr
  ldr r0, =_sdata
 8001a3c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001a40:	200001cc 	.word	0x200001cc
  ldr r2, =_sidata
 8001a44:	08004b90 	.word	0x08004b90
  ldr r2, =_sbss
 8001a48:	200001cc 	.word	0x200001cc
  ldr r4, =_ebss
 8001a4c:	20000340 	.word	0x20000340

08001a50 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001a50:	e7fe      	b.n	8001a50 <ADC1_2_IRQHandler>
	...

08001a54 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001a54:	b480      	push	{r7}
 8001a56:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001a58:	4b05      	ldr	r3, [pc, #20]	@ (8001a70 <HAL_IncTick+0x1c>)
 8001a5a:	781b      	ldrb	r3, [r3, #0]
 8001a5c:	461a      	mov	r2, r3
 8001a5e:	4b05      	ldr	r3, [pc, #20]	@ (8001a74 <HAL_IncTick+0x20>)
 8001a60:	681b      	ldr	r3, [r3, #0]
 8001a62:	4413      	add	r3, r2
 8001a64:	4a03      	ldr	r2, [pc, #12]	@ (8001a74 <HAL_IncTick+0x20>)
 8001a66:	6013      	str	r3, [r2, #0]
}
 8001a68:	bf00      	nop
 8001a6a:	46bd      	mov	sp, r7
 8001a6c:	bc80      	pop	{r7}
 8001a6e:	4770      	bx	lr
 8001a70:	20000000 	.word	0x20000000
 8001a74:	200001f0 	.word	0x200001f0

08001a78 <__cvt>:
 8001a78:	2b00      	cmp	r3, #0
 8001a7a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001a7e:	461d      	mov	r5, r3
 8001a80:	bfbb      	ittet	lt
 8001a82:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 8001a86:	461d      	movlt	r5, r3
 8001a88:	2300      	movge	r3, #0
 8001a8a:	232d      	movlt	r3, #45	@ 0x2d
 8001a8c:	b088      	sub	sp, #32
 8001a8e:	4614      	mov	r4, r2
 8001a90:	bfb8      	it	lt
 8001a92:	4614      	movlt	r4, r2
 8001a94:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8001a96:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 8001a98:	7013      	strb	r3, [r2, #0]
 8001a9a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8001a9c:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8001aa0:	f023 0820 	bic.w	r8, r3, #32
 8001aa4:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001aa8:	d005      	beq.n	8001ab6 <__cvt+0x3e>
 8001aaa:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001aae:	d100      	bne.n	8001ab2 <__cvt+0x3a>
 8001ab0:	3601      	adds	r6, #1
 8001ab2:	2302      	movs	r3, #2
 8001ab4:	e000      	b.n	8001ab8 <__cvt+0x40>
 8001ab6:	2303      	movs	r3, #3
 8001ab8:	aa07      	add	r2, sp, #28
 8001aba:	9204      	str	r2, [sp, #16]
 8001abc:	aa06      	add	r2, sp, #24
 8001abe:	e9cd a202 	strd	sl, r2, [sp, #8]
 8001ac2:	e9cd 3600 	strd	r3, r6, [sp]
 8001ac6:	4622      	mov	r2, r4
 8001ac8:	462b      	mov	r3, r5
 8001aca:	f000 fe6d 	bl	80027a8 <_dtoa_r>
 8001ace:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001ad2:	4607      	mov	r7, r0
 8001ad4:	d119      	bne.n	8001b0a <__cvt+0x92>
 8001ad6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8001ad8:	07db      	lsls	r3, r3, #31
 8001ada:	d50e      	bpl.n	8001afa <__cvt+0x82>
 8001adc:	eb00 0906 	add.w	r9, r0, r6
 8001ae0:	2200      	movs	r2, #0
 8001ae2:	2300      	movs	r3, #0
 8001ae4:	4620      	mov	r0, r4
 8001ae6:	4629      	mov	r1, r5
 8001ae8:	f7ff f812 	bl	8000b10 <__aeabi_dcmpeq>
 8001aec:	b108      	cbz	r0, 8001af2 <__cvt+0x7a>
 8001aee:	f8cd 901c 	str.w	r9, [sp, #28]
 8001af2:	2230      	movs	r2, #48	@ 0x30
 8001af4:	9b07      	ldr	r3, [sp, #28]
 8001af6:	454b      	cmp	r3, r9
 8001af8:	d31e      	bcc.n	8001b38 <__cvt+0xc0>
 8001afa:	4638      	mov	r0, r7
 8001afc:	9b07      	ldr	r3, [sp, #28]
 8001afe:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8001b00:	1bdb      	subs	r3, r3, r7
 8001b02:	6013      	str	r3, [r2, #0]
 8001b04:	b008      	add	sp, #32
 8001b06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001b0a:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001b0e:	eb00 0906 	add.w	r9, r0, r6
 8001b12:	d1e5      	bne.n	8001ae0 <__cvt+0x68>
 8001b14:	7803      	ldrb	r3, [r0, #0]
 8001b16:	2b30      	cmp	r3, #48	@ 0x30
 8001b18:	d10a      	bne.n	8001b30 <__cvt+0xb8>
 8001b1a:	2200      	movs	r2, #0
 8001b1c:	2300      	movs	r3, #0
 8001b1e:	4620      	mov	r0, r4
 8001b20:	4629      	mov	r1, r5
 8001b22:	f7fe fff5 	bl	8000b10 <__aeabi_dcmpeq>
 8001b26:	b918      	cbnz	r0, 8001b30 <__cvt+0xb8>
 8001b28:	f1c6 0601 	rsb	r6, r6, #1
 8001b2c:	f8ca 6000 	str.w	r6, [sl]
 8001b30:	f8da 3000 	ldr.w	r3, [sl]
 8001b34:	4499      	add	r9, r3
 8001b36:	e7d3      	b.n	8001ae0 <__cvt+0x68>
 8001b38:	1c59      	adds	r1, r3, #1
 8001b3a:	9107      	str	r1, [sp, #28]
 8001b3c:	701a      	strb	r2, [r3, #0]
 8001b3e:	e7d9      	b.n	8001af4 <__cvt+0x7c>

08001b40 <__exponent>:
 8001b40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001b42:	2900      	cmp	r1, #0
 8001b44:	bfb6      	itet	lt
 8001b46:	232d      	movlt	r3, #45	@ 0x2d
 8001b48:	232b      	movge	r3, #43	@ 0x2b
 8001b4a:	4249      	neglt	r1, r1
 8001b4c:	2909      	cmp	r1, #9
 8001b4e:	7002      	strb	r2, [r0, #0]
 8001b50:	7043      	strb	r3, [r0, #1]
 8001b52:	dd29      	ble.n	8001ba8 <__exponent+0x68>
 8001b54:	f10d 0307 	add.w	r3, sp, #7
 8001b58:	461d      	mov	r5, r3
 8001b5a:	270a      	movs	r7, #10
 8001b5c:	fbb1 f6f7 	udiv	r6, r1, r7
 8001b60:	461a      	mov	r2, r3
 8001b62:	fb07 1416 	mls	r4, r7, r6, r1
 8001b66:	3430      	adds	r4, #48	@ 0x30
 8001b68:	f802 4c01 	strb.w	r4, [r2, #-1]
 8001b6c:	460c      	mov	r4, r1
 8001b6e:	2c63      	cmp	r4, #99	@ 0x63
 8001b70:	4631      	mov	r1, r6
 8001b72:	f103 33ff 	add.w	r3, r3, #4294967295
 8001b76:	dcf1      	bgt.n	8001b5c <__exponent+0x1c>
 8001b78:	3130      	adds	r1, #48	@ 0x30
 8001b7a:	1e94      	subs	r4, r2, #2
 8001b7c:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001b80:	4623      	mov	r3, r4
 8001b82:	1c41      	adds	r1, r0, #1
 8001b84:	42ab      	cmp	r3, r5
 8001b86:	d30a      	bcc.n	8001b9e <__exponent+0x5e>
 8001b88:	f10d 0309 	add.w	r3, sp, #9
 8001b8c:	1a9b      	subs	r3, r3, r2
 8001b8e:	42ac      	cmp	r4, r5
 8001b90:	bf88      	it	hi
 8001b92:	2300      	movhi	r3, #0
 8001b94:	3302      	adds	r3, #2
 8001b96:	4403      	add	r3, r0
 8001b98:	1a18      	subs	r0, r3, r0
 8001b9a:	b003      	add	sp, #12
 8001b9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b9e:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001ba2:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001ba6:	e7ed      	b.n	8001b84 <__exponent+0x44>
 8001ba8:	2330      	movs	r3, #48	@ 0x30
 8001baa:	3130      	adds	r1, #48	@ 0x30
 8001bac:	7083      	strb	r3, [r0, #2]
 8001bae:	70c1      	strb	r1, [r0, #3]
 8001bb0:	1d03      	adds	r3, r0, #4
 8001bb2:	e7f1      	b.n	8001b98 <__exponent+0x58>

08001bb4 <_printf_float>:
 8001bb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001bb8:	b091      	sub	sp, #68	@ 0x44
 8001bba:	460c      	mov	r4, r1
 8001bbc:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 8001bc0:	4616      	mov	r6, r2
 8001bc2:	461f      	mov	r7, r3
 8001bc4:	4605      	mov	r5, r0
 8001bc6:	f000 fce1 	bl	800258c <_localeconv_r>
 8001bca:	6803      	ldr	r3, [r0, #0]
 8001bcc:	4618      	mov	r0, r3
 8001bce:	9308      	str	r3, [sp, #32]
 8001bd0:	f7fe fabe 	bl	8000150 <strlen>
 8001bd4:	2300      	movs	r3, #0
 8001bd6:	930e      	str	r3, [sp, #56]	@ 0x38
 8001bd8:	f8d8 3000 	ldr.w	r3, [r8]
 8001bdc:	9009      	str	r0, [sp, #36]	@ 0x24
 8001bde:	3307      	adds	r3, #7
 8001be0:	f023 0307 	bic.w	r3, r3, #7
 8001be4:	f103 0208 	add.w	r2, r3, #8
 8001be8:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001bec:	f8d4 b000 	ldr.w	fp, [r4]
 8001bf0:	f8c8 2000 	str.w	r2, [r8]
 8001bf4:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001bf8:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001bfc:	930b      	str	r3, [sp, #44]	@ 0x2c
 8001bfe:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 8001c02:	f04f 32ff 	mov.w	r2, #4294967295
 8001c06:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8001c0a:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001c0e:	4b9c      	ldr	r3, [pc, #624]	@ (8001e80 <_printf_float+0x2cc>)
 8001c10:	f7fe ffb0 	bl	8000b74 <__aeabi_dcmpun>
 8001c14:	bb70      	cbnz	r0, 8001c74 <_printf_float+0xc0>
 8001c16:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8001c1a:	f04f 32ff 	mov.w	r2, #4294967295
 8001c1e:	4b98      	ldr	r3, [pc, #608]	@ (8001e80 <_printf_float+0x2cc>)
 8001c20:	f7fe ff8a 	bl	8000b38 <__aeabi_dcmple>
 8001c24:	bb30      	cbnz	r0, 8001c74 <_printf_float+0xc0>
 8001c26:	2200      	movs	r2, #0
 8001c28:	2300      	movs	r3, #0
 8001c2a:	4640      	mov	r0, r8
 8001c2c:	4649      	mov	r1, r9
 8001c2e:	f7fe ff79 	bl	8000b24 <__aeabi_dcmplt>
 8001c32:	b110      	cbz	r0, 8001c3a <_printf_float+0x86>
 8001c34:	232d      	movs	r3, #45	@ 0x2d
 8001c36:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001c3a:	4a92      	ldr	r2, [pc, #584]	@ (8001e84 <_printf_float+0x2d0>)
 8001c3c:	4b92      	ldr	r3, [pc, #584]	@ (8001e88 <_printf_float+0x2d4>)
 8001c3e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8001c42:	bf94      	ite	ls
 8001c44:	4690      	movls	r8, r2
 8001c46:	4698      	movhi	r8, r3
 8001c48:	2303      	movs	r3, #3
 8001c4a:	f04f 0900 	mov.w	r9, #0
 8001c4e:	6123      	str	r3, [r4, #16]
 8001c50:	f02b 0304 	bic.w	r3, fp, #4
 8001c54:	6023      	str	r3, [r4, #0]
 8001c56:	4633      	mov	r3, r6
 8001c58:	4621      	mov	r1, r4
 8001c5a:	4628      	mov	r0, r5
 8001c5c:	9700      	str	r7, [sp, #0]
 8001c5e:	aa0f      	add	r2, sp, #60	@ 0x3c
 8001c60:	f000 f9d4 	bl	800200c <_printf_common>
 8001c64:	3001      	adds	r0, #1
 8001c66:	f040 8090 	bne.w	8001d8a <_printf_float+0x1d6>
 8001c6a:	f04f 30ff 	mov.w	r0, #4294967295
 8001c6e:	b011      	add	sp, #68	@ 0x44
 8001c70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001c74:	4642      	mov	r2, r8
 8001c76:	464b      	mov	r3, r9
 8001c78:	4640      	mov	r0, r8
 8001c7a:	4649      	mov	r1, r9
 8001c7c:	f7fe ff7a 	bl	8000b74 <__aeabi_dcmpun>
 8001c80:	b148      	cbz	r0, 8001c96 <_printf_float+0xe2>
 8001c82:	464b      	mov	r3, r9
 8001c84:	2b00      	cmp	r3, #0
 8001c86:	bfb8      	it	lt
 8001c88:	232d      	movlt	r3, #45	@ 0x2d
 8001c8a:	4a80      	ldr	r2, [pc, #512]	@ (8001e8c <_printf_float+0x2d8>)
 8001c8c:	bfb8      	it	lt
 8001c8e:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8001c92:	4b7f      	ldr	r3, [pc, #508]	@ (8001e90 <_printf_float+0x2dc>)
 8001c94:	e7d3      	b.n	8001c3e <_printf_float+0x8a>
 8001c96:	6863      	ldr	r3, [r4, #4]
 8001c98:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 8001c9c:	1c5a      	adds	r2, r3, #1
 8001c9e:	d13f      	bne.n	8001d20 <_printf_float+0x16c>
 8001ca0:	2306      	movs	r3, #6
 8001ca2:	6063      	str	r3, [r4, #4]
 8001ca4:	2200      	movs	r2, #0
 8001ca6:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 8001caa:	6023      	str	r3, [r4, #0]
 8001cac:	9206      	str	r2, [sp, #24]
 8001cae:	aa0e      	add	r2, sp, #56	@ 0x38
 8001cb0:	e9cd a204 	strd	sl, r2, [sp, #16]
 8001cb4:	aa0d      	add	r2, sp, #52	@ 0x34
 8001cb6:	9203      	str	r2, [sp, #12]
 8001cb8:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8001cbc:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8001cc0:	6863      	ldr	r3, [r4, #4]
 8001cc2:	4642      	mov	r2, r8
 8001cc4:	9300      	str	r3, [sp, #0]
 8001cc6:	4628      	mov	r0, r5
 8001cc8:	464b      	mov	r3, r9
 8001cca:	910a      	str	r1, [sp, #40]	@ 0x28
 8001ccc:	f7ff fed4 	bl	8001a78 <__cvt>
 8001cd0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8001cd2:	4680      	mov	r8, r0
 8001cd4:	2947      	cmp	r1, #71	@ 0x47
 8001cd6:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8001cd8:	d128      	bne.n	8001d2c <_printf_float+0x178>
 8001cda:	1cc8      	adds	r0, r1, #3
 8001cdc:	db02      	blt.n	8001ce4 <_printf_float+0x130>
 8001cde:	6863      	ldr	r3, [r4, #4]
 8001ce0:	4299      	cmp	r1, r3
 8001ce2:	dd40      	ble.n	8001d66 <_printf_float+0x1b2>
 8001ce4:	f1aa 0a02 	sub.w	sl, sl, #2
 8001ce8:	fa5f fa8a 	uxtb.w	sl, sl
 8001cec:	4652      	mov	r2, sl
 8001cee:	3901      	subs	r1, #1
 8001cf0:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8001cf4:	910d      	str	r1, [sp, #52]	@ 0x34
 8001cf6:	f7ff ff23 	bl	8001b40 <__exponent>
 8001cfa:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8001cfc:	4681      	mov	r9, r0
 8001cfe:	1813      	adds	r3, r2, r0
 8001d00:	2a01      	cmp	r2, #1
 8001d02:	6123      	str	r3, [r4, #16]
 8001d04:	dc02      	bgt.n	8001d0c <_printf_float+0x158>
 8001d06:	6822      	ldr	r2, [r4, #0]
 8001d08:	07d2      	lsls	r2, r2, #31
 8001d0a:	d501      	bpl.n	8001d10 <_printf_float+0x15c>
 8001d0c:	3301      	adds	r3, #1
 8001d0e:	6123      	str	r3, [r4, #16]
 8001d10:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 8001d14:	2b00      	cmp	r3, #0
 8001d16:	d09e      	beq.n	8001c56 <_printf_float+0xa2>
 8001d18:	232d      	movs	r3, #45	@ 0x2d
 8001d1a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001d1e:	e79a      	b.n	8001c56 <_printf_float+0xa2>
 8001d20:	2947      	cmp	r1, #71	@ 0x47
 8001d22:	d1bf      	bne.n	8001ca4 <_printf_float+0xf0>
 8001d24:	2b00      	cmp	r3, #0
 8001d26:	d1bd      	bne.n	8001ca4 <_printf_float+0xf0>
 8001d28:	2301      	movs	r3, #1
 8001d2a:	e7ba      	b.n	8001ca2 <_printf_float+0xee>
 8001d2c:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001d30:	d9dc      	bls.n	8001cec <_printf_float+0x138>
 8001d32:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001d36:	d118      	bne.n	8001d6a <_printf_float+0x1b6>
 8001d38:	2900      	cmp	r1, #0
 8001d3a:	6863      	ldr	r3, [r4, #4]
 8001d3c:	dd0b      	ble.n	8001d56 <_printf_float+0x1a2>
 8001d3e:	6121      	str	r1, [r4, #16]
 8001d40:	b913      	cbnz	r3, 8001d48 <_printf_float+0x194>
 8001d42:	6822      	ldr	r2, [r4, #0]
 8001d44:	07d0      	lsls	r0, r2, #31
 8001d46:	d502      	bpl.n	8001d4e <_printf_float+0x19a>
 8001d48:	3301      	adds	r3, #1
 8001d4a:	440b      	add	r3, r1
 8001d4c:	6123      	str	r3, [r4, #16]
 8001d4e:	f04f 0900 	mov.w	r9, #0
 8001d52:	65a1      	str	r1, [r4, #88]	@ 0x58
 8001d54:	e7dc      	b.n	8001d10 <_printf_float+0x15c>
 8001d56:	b913      	cbnz	r3, 8001d5e <_printf_float+0x1aa>
 8001d58:	6822      	ldr	r2, [r4, #0]
 8001d5a:	07d2      	lsls	r2, r2, #31
 8001d5c:	d501      	bpl.n	8001d62 <_printf_float+0x1ae>
 8001d5e:	3302      	adds	r3, #2
 8001d60:	e7f4      	b.n	8001d4c <_printf_float+0x198>
 8001d62:	2301      	movs	r3, #1
 8001d64:	e7f2      	b.n	8001d4c <_printf_float+0x198>
 8001d66:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8001d6a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8001d6c:	4299      	cmp	r1, r3
 8001d6e:	db05      	blt.n	8001d7c <_printf_float+0x1c8>
 8001d70:	6823      	ldr	r3, [r4, #0]
 8001d72:	6121      	str	r1, [r4, #16]
 8001d74:	07d8      	lsls	r0, r3, #31
 8001d76:	d5ea      	bpl.n	8001d4e <_printf_float+0x19a>
 8001d78:	1c4b      	adds	r3, r1, #1
 8001d7a:	e7e7      	b.n	8001d4c <_printf_float+0x198>
 8001d7c:	2900      	cmp	r1, #0
 8001d7e:	bfcc      	ite	gt
 8001d80:	2201      	movgt	r2, #1
 8001d82:	f1c1 0202 	rsble	r2, r1, #2
 8001d86:	4413      	add	r3, r2
 8001d88:	e7e0      	b.n	8001d4c <_printf_float+0x198>
 8001d8a:	6823      	ldr	r3, [r4, #0]
 8001d8c:	055a      	lsls	r2, r3, #21
 8001d8e:	d407      	bmi.n	8001da0 <_printf_float+0x1ec>
 8001d90:	6923      	ldr	r3, [r4, #16]
 8001d92:	4642      	mov	r2, r8
 8001d94:	4631      	mov	r1, r6
 8001d96:	4628      	mov	r0, r5
 8001d98:	47b8      	blx	r7
 8001d9a:	3001      	adds	r0, #1
 8001d9c:	d12b      	bne.n	8001df6 <_printf_float+0x242>
 8001d9e:	e764      	b.n	8001c6a <_printf_float+0xb6>
 8001da0:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001da4:	f240 80dc 	bls.w	8001f60 <_printf_float+0x3ac>
 8001da8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001dac:	2200      	movs	r2, #0
 8001dae:	2300      	movs	r3, #0
 8001db0:	f7fe feae 	bl	8000b10 <__aeabi_dcmpeq>
 8001db4:	2800      	cmp	r0, #0
 8001db6:	d033      	beq.n	8001e20 <_printf_float+0x26c>
 8001db8:	2301      	movs	r3, #1
 8001dba:	4631      	mov	r1, r6
 8001dbc:	4628      	mov	r0, r5
 8001dbe:	4a35      	ldr	r2, [pc, #212]	@ (8001e94 <_printf_float+0x2e0>)
 8001dc0:	47b8      	blx	r7
 8001dc2:	3001      	adds	r0, #1
 8001dc4:	f43f af51 	beq.w	8001c6a <_printf_float+0xb6>
 8001dc8:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 8001dcc:	4543      	cmp	r3, r8
 8001dce:	db02      	blt.n	8001dd6 <_printf_float+0x222>
 8001dd0:	6823      	ldr	r3, [r4, #0]
 8001dd2:	07d8      	lsls	r0, r3, #31
 8001dd4:	d50f      	bpl.n	8001df6 <_printf_float+0x242>
 8001dd6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001dda:	4631      	mov	r1, r6
 8001ddc:	4628      	mov	r0, r5
 8001dde:	47b8      	blx	r7
 8001de0:	3001      	adds	r0, #1
 8001de2:	f43f af42 	beq.w	8001c6a <_printf_float+0xb6>
 8001de6:	f04f 0900 	mov.w	r9, #0
 8001dea:	f108 38ff 	add.w	r8, r8, #4294967295
 8001dee:	f104 0a1a 	add.w	sl, r4, #26
 8001df2:	45c8      	cmp	r8, r9
 8001df4:	dc09      	bgt.n	8001e0a <_printf_float+0x256>
 8001df6:	6823      	ldr	r3, [r4, #0]
 8001df8:	079b      	lsls	r3, r3, #30
 8001dfa:	f100 8102 	bmi.w	8002002 <_printf_float+0x44e>
 8001dfe:	68e0      	ldr	r0, [r4, #12]
 8001e00:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8001e02:	4298      	cmp	r0, r3
 8001e04:	bfb8      	it	lt
 8001e06:	4618      	movlt	r0, r3
 8001e08:	e731      	b.n	8001c6e <_printf_float+0xba>
 8001e0a:	2301      	movs	r3, #1
 8001e0c:	4652      	mov	r2, sl
 8001e0e:	4631      	mov	r1, r6
 8001e10:	4628      	mov	r0, r5
 8001e12:	47b8      	blx	r7
 8001e14:	3001      	adds	r0, #1
 8001e16:	f43f af28 	beq.w	8001c6a <_printf_float+0xb6>
 8001e1a:	f109 0901 	add.w	r9, r9, #1
 8001e1e:	e7e8      	b.n	8001df2 <_printf_float+0x23e>
 8001e20:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001e22:	2b00      	cmp	r3, #0
 8001e24:	dc38      	bgt.n	8001e98 <_printf_float+0x2e4>
 8001e26:	2301      	movs	r3, #1
 8001e28:	4631      	mov	r1, r6
 8001e2a:	4628      	mov	r0, r5
 8001e2c:	4a19      	ldr	r2, [pc, #100]	@ (8001e94 <_printf_float+0x2e0>)
 8001e2e:	47b8      	blx	r7
 8001e30:	3001      	adds	r0, #1
 8001e32:	f43f af1a 	beq.w	8001c6a <_printf_float+0xb6>
 8001e36:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 8001e3a:	ea59 0303 	orrs.w	r3, r9, r3
 8001e3e:	d102      	bne.n	8001e46 <_printf_float+0x292>
 8001e40:	6823      	ldr	r3, [r4, #0]
 8001e42:	07d9      	lsls	r1, r3, #31
 8001e44:	d5d7      	bpl.n	8001df6 <_printf_float+0x242>
 8001e46:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001e4a:	4631      	mov	r1, r6
 8001e4c:	4628      	mov	r0, r5
 8001e4e:	47b8      	blx	r7
 8001e50:	3001      	adds	r0, #1
 8001e52:	f43f af0a 	beq.w	8001c6a <_printf_float+0xb6>
 8001e56:	f04f 0a00 	mov.w	sl, #0
 8001e5a:	f104 0b1a 	add.w	fp, r4, #26
 8001e5e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001e60:	425b      	negs	r3, r3
 8001e62:	4553      	cmp	r3, sl
 8001e64:	dc01      	bgt.n	8001e6a <_printf_float+0x2b6>
 8001e66:	464b      	mov	r3, r9
 8001e68:	e793      	b.n	8001d92 <_printf_float+0x1de>
 8001e6a:	2301      	movs	r3, #1
 8001e6c:	465a      	mov	r2, fp
 8001e6e:	4631      	mov	r1, r6
 8001e70:	4628      	mov	r0, r5
 8001e72:	47b8      	blx	r7
 8001e74:	3001      	adds	r0, #1
 8001e76:	f43f aef8 	beq.w	8001c6a <_printf_float+0xb6>
 8001e7a:	f10a 0a01 	add.w	sl, sl, #1
 8001e7e:	e7ee      	b.n	8001e5e <_printf_float+0x2aa>
 8001e80:	7fefffff 	.word	0x7fefffff
 8001e84:	08004812 	.word	0x08004812
 8001e88:	08004816 	.word	0x08004816
 8001e8c:	0800481a 	.word	0x0800481a
 8001e90:	0800481e 	.word	0x0800481e
 8001e94:	08004822 	.word	0x08004822
 8001e98:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001e9a:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8001e9e:	4553      	cmp	r3, sl
 8001ea0:	bfa8      	it	ge
 8001ea2:	4653      	movge	r3, sl
 8001ea4:	2b00      	cmp	r3, #0
 8001ea6:	4699      	mov	r9, r3
 8001ea8:	dc36      	bgt.n	8001f18 <_printf_float+0x364>
 8001eaa:	f04f 0b00 	mov.w	fp, #0
 8001eae:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001eb2:	f104 021a 	add.w	r2, r4, #26
 8001eb6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001eb8:	930a      	str	r3, [sp, #40]	@ 0x28
 8001eba:	eba3 0309 	sub.w	r3, r3, r9
 8001ebe:	455b      	cmp	r3, fp
 8001ec0:	dc31      	bgt.n	8001f26 <_printf_float+0x372>
 8001ec2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001ec4:	459a      	cmp	sl, r3
 8001ec6:	dc3a      	bgt.n	8001f3e <_printf_float+0x38a>
 8001ec8:	6823      	ldr	r3, [r4, #0]
 8001eca:	07da      	lsls	r2, r3, #31
 8001ecc:	d437      	bmi.n	8001f3e <_printf_float+0x38a>
 8001ece:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001ed0:	ebaa 0903 	sub.w	r9, sl, r3
 8001ed4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001ed6:	ebaa 0303 	sub.w	r3, sl, r3
 8001eda:	4599      	cmp	r9, r3
 8001edc:	bfa8      	it	ge
 8001ede:	4699      	movge	r9, r3
 8001ee0:	f1b9 0f00 	cmp.w	r9, #0
 8001ee4:	dc33      	bgt.n	8001f4e <_printf_float+0x39a>
 8001ee6:	f04f 0800 	mov.w	r8, #0
 8001eea:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001eee:	f104 0b1a 	add.w	fp, r4, #26
 8001ef2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001ef4:	ebaa 0303 	sub.w	r3, sl, r3
 8001ef8:	eba3 0309 	sub.w	r3, r3, r9
 8001efc:	4543      	cmp	r3, r8
 8001efe:	f77f af7a 	ble.w	8001df6 <_printf_float+0x242>
 8001f02:	2301      	movs	r3, #1
 8001f04:	465a      	mov	r2, fp
 8001f06:	4631      	mov	r1, r6
 8001f08:	4628      	mov	r0, r5
 8001f0a:	47b8      	blx	r7
 8001f0c:	3001      	adds	r0, #1
 8001f0e:	f43f aeac 	beq.w	8001c6a <_printf_float+0xb6>
 8001f12:	f108 0801 	add.w	r8, r8, #1
 8001f16:	e7ec      	b.n	8001ef2 <_printf_float+0x33e>
 8001f18:	4642      	mov	r2, r8
 8001f1a:	4631      	mov	r1, r6
 8001f1c:	4628      	mov	r0, r5
 8001f1e:	47b8      	blx	r7
 8001f20:	3001      	adds	r0, #1
 8001f22:	d1c2      	bne.n	8001eaa <_printf_float+0x2f6>
 8001f24:	e6a1      	b.n	8001c6a <_printf_float+0xb6>
 8001f26:	2301      	movs	r3, #1
 8001f28:	4631      	mov	r1, r6
 8001f2a:	4628      	mov	r0, r5
 8001f2c:	920a      	str	r2, [sp, #40]	@ 0x28
 8001f2e:	47b8      	blx	r7
 8001f30:	3001      	adds	r0, #1
 8001f32:	f43f ae9a 	beq.w	8001c6a <_printf_float+0xb6>
 8001f36:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001f38:	f10b 0b01 	add.w	fp, fp, #1
 8001f3c:	e7bb      	b.n	8001eb6 <_printf_float+0x302>
 8001f3e:	4631      	mov	r1, r6
 8001f40:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001f44:	4628      	mov	r0, r5
 8001f46:	47b8      	blx	r7
 8001f48:	3001      	adds	r0, #1
 8001f4a:	d1c0      	bne.n	8001ece <_printf_float+0x31a>
 8001f4c:	e68d      	b.n	8001c6a <_printf_float+0xb6>
 8001f4e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001f50:	464b      	mov	r3, r9
 8001f52:	4631      	mov	r1, r6
 8001f54:	4628      	mov	r0, r5
 8001f56:	4442      	add	r2, r8
 8001f58:	47b8      	blx	r7
 8001f5a:	3001      	adds	r0, #1
 8001f5c:	d1c3      	bne.n	8001ee6 <_printf_float+0x332>
 8001f5e:	e684      	b.n	8001c6a <_printf_float+0xb6>
 8001f60:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8001f64:	f1ba 0f01 	cmp.w	sl, #1
 8001f68:	dc01      	bgt.n	8001f6e <_printf_float+0x3ba>
 8001f6a:	07db      	lsls	r3, r3, #31
 8001f6c:	d536      	bpl.n	8001fdc <_printf_float+0x428>
 8001f6e:	2301      	movs	r3, #1
 8001f70:	4642      	mov	r2, r8
 8001f72:	4631      	mov	r1, r6
 8001f74:	4628      	mov	r0, r5
 8001f76:	47b8      	blx	r7
 8001f78:	3001      	adds	r0, #1
 8001f7a:	f43f ae76 	beq.w	8001c6a <_printf_float+0xb6>
 8001f7e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8001f82:	4631      	mov	r1, r6
 8001f84:	4628      	mov	r0, r5
 8001f86:	47b8      	blx	r7
 8001f88:	3001      	adds	r0, #1
 8001f8a:	f43f ae6e 	beq.w	8001c6a <_printf_float+0xb6>
 8001f8e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001f92:	2200      	movs	r2, #0
 8001f94:	2300      	movs	r3, #0
 8001f96:	f10a 3aff 	add.w	sl, sl, #4294967295
 8001f9a:	f7fe fdb9 	bl	8000b10 <__aeabi_dcmpeq>
 8001f9e:	b9c0      	cbnz	r0, 8001fd2 <_printf_float+0x41e>
 8001fa0:	4653      	mov	r3, sl
 8001fa2:	f108 0201 	add.w	r2, r8, #1
 8001fa6:	4631      	mov	r1, r6
 8001fa8:	4628      	mov	r0, r5
 8001faa:	47b8      	blx	r7
 8001fac:	3001      	adds	r0, #1
 8001fae:	d10c      	bne.n	8001fca <_printf_float+0x416>
 8001fb0:	e65b      	b.n	8001c6a <_printf_float+0xb6>
 8001fb2:	2301      	movs	r3, #1
 8001fb4:	465a      	mov	r2, fp
 8001fb6:	4631      	mov	r1, r6
 8001fb8:	4628      	mov	r0, r5
 8001fba:	47b8      	blx	r7
 8001fbc:	3001      	adds	r0, #1
 8001fbe:	f43f ae54 	beq.w	8001c6a <_printf_float+0xb6>
 8001fc2:	f108 0801 	add.w	r8, r8, #1
 8001fc6:	45d0      	cmp	r8, sl
 8001fc8:	dbf3      	blt.n	8001fb2 <_printf_float+0x3fe>
 8001fca:	464b      	mov	r3, r9
 8001fcc:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8001fd0:	e6e0      	b.n	8001d94 <_printf_float+0x1e0>
 8001fd2:	f04f 0800 	mov.w	r8, #0
 8001fd6:	f104 0b1a 	add.w	fp, r4, #26
 8001fda:	e7f4      	b.n	8001fc6 <_printf_float+0x412>
 8001fdc:	2301      	movs	r3, #1
 8001fde:	4642      	mov	r2, r8
 8001fe0:	e7e1      	b.n	8001fa6 <_printf_float+0x3f2>
 8001fe2:	2301      	movs	r3, #1
 8001fe4:	464a      	mov	r2, r9
 8001fe6:	4631      	mov	r1, r6
 8001fe8:	4628      	mov	r0, r5
 8001fea:	47b8      	blx	r7
 8001fec:	3001      	adds	r0, #1
 8001fee:	f43f ae3c 	beq.w	8001c6a <_printf_float+0xb6>
 8001ff2:	f108 0801 	add.w	r8, r8, #1
 8001ff6:	68e3      	ldr	r3, [r4, #12]
 8001ff8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8001ffa:	1a5b      	subs	r3, r3, r1
 8001ffc:	4543      	cmp	r3, r8
 8001ffe:	dcf0      	bgt.n	8001fe2 <_printf_float+0x42e>
 8002000:	e6fd      	b.n	8001dfe <_printf_float+0x24a>
 8002002:	f04f 0800 	mov.w	r8, #0
 8002006:	f104 0919 	add.w	r9, r4, #25
 800200a:	e7f4      	b.n	8001ff6 <_printf_float+0x442>

0800200c <_printf_common>:
 800200c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002010:	4616      	mov	r6, r2
 8002012:	4698      	mov	r8, r3
 8002014:	688a      	ldr	r2, [r1, #8]
 8002016:	690b      	ldr	r3, [r1, #16]
 8002018:	4607      	mov	r7, r0
 800201a:	4293      	cmp	r3, r2
 800201c:	bfb8      	it	lt
 800201e:	4613      	movlt	r3, r2
 8002020:	6033      	str	r3, [r6, #0]
 8002022:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8002026:	460c      	mov	r4, r1
 8002028:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800202c:	b10a      	cbz	r2, 8002032 <_printf_common+0x26>
 800202e:	3301      	adds	r3, #1
 8002030:	6033      	str	r3, [r6, #0]
 8002032:	6823      	ldr	r3, [r4, #0]
 8002034:	0699      	lsls	r1, r3, #26
 8002036:	bf42      	ittt	mi
 8002038:	6833      	ldrmi	r3, [r6, #0]
 800203a:	3302      	addmi	r3, #2
 800203c:	6033      	strmi	r3, [r6, #0]
 800203e:	6825      	ldr	r5, [r4, #0]
 8002040:	f015 0506 	ands.w	r5, r5, #6
 8002044:	d106      	bne.n	8002054 <_printf_common+0x48>
 8002046:	f104 0a19 	add.w	sl, r4, #25
 800204a:	68e3      	ldr	r3, [r4, #12]
 800204c:	6832      	ldr	r2, [r6, #0]
 800204e:	1a9b      	subs	r3, r3, r2
 8002050:	42ab      	cmp	r3, r5
 8002052:	dc2b      	bgt.n	80020ac <_printf_common+0xa0>
 8002054:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8002058:	6822      	ldr	r2, [r4, #0]
 800205a:	3b00      	subs	r3, #0
 800205c:	bf18      	it	ne
 800205e:	2301      	movne	r3, #1
 8002060:	0692      	lsls	r2, r2, #26
 8002062:	d430      	bmi.n	80020c6 <_printf_common+0xba>
 8002064:	4641      	mov	r1, r8
 8002066:	4638      	mov	r0, r7
 8002068:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800206c:	47c8      	blx	r9
 800206e:	3001      	adds	r0, #1
 8002070:	d023      	beq.n	80020ba <_printf_common+0xae>
 8002072:	6823      	ldr	r3, [r4, #0]
 8002074:	6922      	ldr	r2, [r4, #16]
 8002076:	f003 0306 	and.w	r3, r3, #6
 800207a:	2b04      	cmp	r3, #4
 800207c:	bf14      	ite	ne
 800207e:	2500      	movne	r5, #0
 8002080:	6833      	ldreq	r3, [r6, #0]
 8002082:	f04f 0600 	mov.w	r6, #0
 8002086:	bf08      	it	eq
 8002088:	68e5      	ldreq	r5, [r4, #12]
 800208a:	f104 041a 	add.w	r4, r4, #26
 800208e:	bf08      	it	eq
 8002090:	1aed      	subeq	r5, r5, r3
 8002092:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8002096:	bf08      	it	eq
 8002098:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800209c:	4293      	cmp	r3, r2
 800209e:	bfc4      	itt	gt
 80020a0:	1a9b      	subgt	r3, r3, r2
 80020a2:	18ed      	addgt	r5, r5, r3
 80020a4:	42b5      	cmp	r5, r6
 80020a6:	d11a      	bne.n	80020de <_printf_common+0xd2>
 80020a8:	2000      	movs	r0, #0
 80020aa:	e008      	b.n	80020be <_printf_common+0xb2>
 80020ac:	2301      	movs	r3, #1
 80020ae:	4652      	mov	r2, sl
 80020b0:	4641      	mov	r1, r8
 80020b2:	4638      	mov	r0, r7
 80020b4:	47c8      	blx	r9
 80020b6:	3001      	adds	r0, #1
 80020b8:	d103      	bne.n	80020c2 <_printf_common+0xb6>
 80020ba:	f04f 30ff 	mov.w	r0, #4294967295
 80020be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80020c2:	3501      	adds	r5, #1
 80020c4:	e7c1      	b.n	800204a <_printf_common+0x3e>
 80020c6:	2030      	movs	r0, #48	@ 0x30
 80020c8:	18e1      	adds	r1, r4, r3
 80020ca:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80020ce:	1c5a      	adds	r2, r3, #1
 80020d0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80020d4:	4422      	add	r2, r4
 80020d6:	3302      	adds	r3, #2
 80020d8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80020dc:	e7c2      	b.n	8002064 <_printf_common+0x58>
 80020de:	2301      	movs	r3, #1
 80020e0:	4622      	mov	r2, r4
 80020e2:	4641      	mov	r1, r8
 80020e4:	4638      	mov	r0, r7
 80020e6:	47c8      	blx	r9
 80020e8:	3001      	adds	r0, #1
 80020ea:	d0e6      	beq.n	80020ba <_printf_common+0xae>
 80020ec:	3601      	adds	r6, #1
 80020ee:	e7d9      	b.n	80020a4 <_printf_common+0x98>

080020f0 <_printf_i>:
 80020f0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80020f4:	7e0f      	ldrb	r7, [r1, #24]
 80020f6:	4691      	mov	r9, r2
 80020f8:	2f78      	cmp	r7, #120	@ 0x78
 80020fa:	4680      	mov	r8, r0
 80020fc:	460c      	mov	r4, r1
 80020fe:	469a      	mov	sl, r3
 8002100:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8002102:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8002106:	d807      	bhi.n	8002118 <_printf_i+0x28>
 8002108:	2f62      	cmp	r7, #98	@ 0x62
 800210a:	d80a      	bhi.n	8002122 <_printf_i+0x32>
 800210c:	2f00      	cmp	r7, #0
 800210e:	f000 80d3 	beq.w	80022b8 <_printf_i+0x1c8>
 8002112:	2f58      	cmp	r7, #88	@ 0x58
 8002114:	f000 80ba 	beq.w	800228c <_printf_i+0x19c>
 8002118:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800211c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8002120:	e03a      	b.n	8002198 <_printf_i+0xa8>
 8002122:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8002126:	2b15      	cmp	r3, #21
 8002128:	d8f6      	bhi.n	8002118 <_printf_i+0x28>
 800212a:	a101      	add	r1, pc, #4	@ (adr r1, 8002130 <_printf_i+0x40>)
 800212c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002130:	08002189 	.word	0x08002189
 8002134:	0800219d 	.word	0x0800219d
 8002138:	08002119 	.word	0x08002119
 800213c:	08002119 	.word	0x08002119
 8002140:	08002119 	.word	0x08002119
 8002144:	08002119 	.word	0x08002119
 8002148:	0800219d 	.word	0x0800219d
 800214c:	08002119 	.word	0x08002119
 8002150:	08002119 	.word	0x08002119
 8002154:	08002119 	.word	0x08002119
 8002158:	08002119 	.word	0x08002119
 800215c:	0800229f 	.word	0x0800229f
 8002160:	080021c7 	.word	0x080021c7
 8002164:	08002259 	.word	0x08002259
 8002168:	08002119 	.word	0x08002119
 800216c:	08002119 	.word	0x08002119
 8002170:	080022c1 	.word	0x080022c1
 8002174:	08002119 	.word	0x08002119
 8002178:	080021c7 	.word	0x080021c7
 800217c:	08002119 	.word	0x08002119
 8002180:	08002119 	.word	0x08002119
 8002184:	08002261 	.word	0x08002261
 8002188:	6833      	ldr	r3, [r6, #0]
 800218a:	1d1a      	adds	r2, r3, #4
 800218c:	681b      	ldr	r3, [r3, #0]
 800218e:	6032      	str	r2, [r6, #0]
 8002190:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002194:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8002198:	2301      	movs	r3, #1
 800219a:	e09e      	b.n	80022da <_printf_i+0x1ea>
 800219c:	6833      	ldr	r3, [r6, #0]
 800219e:	6820      	ldr	r0, [r4, #0]
 80021a0:	1d19      	adds	r1, r3, #4
 80021a2:	6031      	str	r1, [r6, #0]
 80021a4:	0606      	lsls	r6, r0, #24
 80021a6:	d501      	bpl.n	80021ac <_printf_i+0xbc>
 80021a8:	681d      	ldr	r5, [r3, #0]
 80021aa:	e003      	b.n	80021b4 <_printf_i+0xc4>
 80021ac:	0645      	lsls	r5, r0, #25
 80021ae:	d5fb      	bpl.n	80021a8 <_printf_i+0xb8>
 80021b0:	f9b3 5000 	ldrsh.w	r5, [r3]
 80021b4:	2d00      	cmp	r5, #0
 80021b6:	da03      	bge.n	80021c0 <_printf_i+0xd0>
 80021b8:	232d      	movs	r3, #45	@ 0x2d
 80021ba:	426d      	negs	r5, r5
 80021bc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80021c0:	230a      	movs	r3, #10
 80021c2:	4859      	ldr	r0, [pc, #356]	@ (8002328 <_printf_i+0x238>)
 80021c4:	e011      	b.n	80021ea <_printf_i+0xfa>
 80021c6:	6821      	ldr	r1, [r4, #0]
 80021c8:	6833      	ldr	r3, [r6, #0]
 80021ca:	0608      	lsls	r0, r1, #24
 80021cc:	f853 5b04 	ldr.w	r5, [r3], #4
 80021d0:	d402      	bmi.n	80021d8 <_printf_i+0xe8>
 80021d2:	0649      	lsls	r1, r1, #25
 80021d4:	bf48      	it	mi
 80021d6:	b2ad      	uxthmi	r5, r5
 80021d8:	2f6f      	cmp	r7, #111	@ 0x6f
 80021da:	6033      	str	r3, [r6, #0]
 80021dc:	bf14      	ite	ne
 80021de:	230a      	movne	r3, #10
 80021e0:	2308      	moveq	r3, #8
 80021e2:	4851      	ldr	r0, [pc, #324]	@ (8002328 <_printf_i+0x238>)
 80021e4:	2100      	movs	r1, #0
 80021e6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80021ea:	6866      	ldr	r6, [r4, #4]
 80021ec:	2e00      	cmp	r6, #0
 80021ee:	bfa8      	it	ge
 80021f0:	6821      	ldrge	r1, [r4, #0]
 80021f2:	60a6      	str	r6, [r4, #8]
 80021f4:	bfa4      	itt	ge
 80021f6:	f021 0104 	bicge.w	r1, r1, #4
 80021fa:	6021      	strge	r1, [r4, #0]
 80021fc:	b90d      	cbnz	r5, 8002202 <_printf_i+0x112>
 80021fe:	2e00      	cmp	r6, #0
 8002200:	d04b      	beq.n	800229a <_printf_i+0x1aa>
 8002202:	4616      	mov	r6, r2
 8002204:	fbb5 f1f3 	udiv	r1, r5, r3
 8002208:	fb03 5711 	mls	r7, r3, r1, r5
 800220c:	5dc7      	ldrb	r7, [r0, r7]
 800220e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8002212:	462f      	mov	r7, r5
 8002214:	42bb      	cmp	r3, r7
 8002216:	460d      	mov	r5, r1
 8002218:	d9f4      	bls.n	8002204 <_printf_i+0x114>
 800221a:	2b08      	cmp	r3, #8
 800221c:	d10b      	bne.n	8002236 <_printf_i+0x146>
 800221e:	6823      	ldr	r3, [r4, #0]
 8002220:	07df      	lsls	r7, r3, #31
 8002222:	d508      	bpl.n	8002236 <_printf_i+0x146>
 8002224:	6923      	ldr	r3, [r4, #16]
 8002226:	6861      	ldr	r1, [r4, #4]
 8002228:	4299      	cmp	r1, r3
 800222a:	bfde      	ittt	le
 800222c:	2330      	movle	r3, #48	@ 0x30
 800222e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002232:	f106 36ff 	addle.w	r6, r6, #4294967295
 8002236:	1b92      	subs	r2, r2, r6
 8002238:	6122      	str	r2, [r4, #16]
 800223a:	464b      	mov	r3, r9
 800223c:	4621      	mov	r1, r4
 800223e:	4640      	mov	r0, r8
 8002240:	f8cd a000 	str.w	sl, [sp]
 8002244:	aa03      	add	r2, sp, #12
 8002246:	f7ff fee1 	bl	800200c <_printf_common>
 800224a:	3001      	adds	r0, #1
 800224c:	d14a      	bne.n	80022e4 <_printf_i+0x1f4>
 800224e:	f04f 30ff 	mov.w	r0, #4294967295
 8002252:	b004      	add	sp, #16
 8002254:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002258:	6823      	ldr	r3, [r4, #0]
 800225a:	f043 0320 	orr.w	r3, r3, #32
 800225e:	6023      	str	r3, [r4, #0]
 8002260:	2778      	movs	r7, #120	@ 0x78
 8002262:	4832      	ldr	r0, [pc, #200]	@ (800232c <_printf_i+0x23c>)
 8002264:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8002268:	6823      	ldr	r3, [r4, #0]
 800226a:	6831      	ldr	r1, [r6, #0]
 800226c:	061f      	lsls	r7, r3, #24
 800226e:	f851 5b04 	ldr.w	r5, [r1], #4
 8002272:	d402      	bmi.n	800227a <_printf_i+0x18a>
 8002274:	065f      	lsls	r7, r3, #25
 8002276:	bf48      	it	mi
 8002278:	b2ad      	uxthmi	r5, r5
 800227a:	6031      	str	r1, [r6, #0]
 800227c:	07d9      	lsls	r1, r3, #31
 800227e:	bf44      	itt	mi
 8002280:	f043 0320 	orrmi.w	r3, r3, #32
 8002284:	6023      	strmi	r3, [r4, #0]
 8002286:	b11d      	cbz	r5, 8002290 <_printf_i+0x1a0>
 8002288:	2310      	movs	r3, #16
 800228a:	e7ab      	b.n	80021e4 <_printf_i+0xf4>
 800228c:	4826      	ldr	r0, [pc, #152]	@ (8002328 <_printf_i+0x238>)
 800228e:	e7e9      	b.n	8002264 <_printf_i+0x174>
 8002290:	6823      	ldr	r3, [r4, #0]
 8002292:	f023 0320 	bic.w	r3, r3, #32
 8002296:	6023      	str	r3, [r4, #0]
 8002298:	e7f6      	b.n	8002288 <_printf_i+0x198>
 800229a:	4616      	mov	r6, r2
 800229c:	e7bd      	b.n	800221a <_printf_i+0x12a>
 800229e:	6833      	ldr	r3, [r6, #0]
 80022a0:	6825      	ldr	r5, [r4, #0]
 80022a2:	1d18      	adds	r0, r3, #4
 80022a4:	6961      	ldr	r1, [r4, #20]
 80022a6:	6030      	str	r0, [r6, #0]
 80022a8:	062e      	lsls	r6, r5, #24
 80022aa:	681b      	ldr	r3, [r3, #0]
 80022ac:	d501      	bpl.n	80022b2 <_printf_i+0x1c2>
 80022ae:	6019      	str	r1, [r3, #0]
 80022b0:	e002      	b.n	80022b8 <_printf_i+0x1c8>
 80022b2:	0668      	lsls	r0, r5, #25
 80022b4:	d5fb      	bpl.n	80022ae <_printf_i+0x1be>
 80022b6:	8019      	strh	r1, [r3, #0]
 80022b8:	2300      	movs	r3, #0
 80022ba:	4616      	mov	r6, r2
 80022bc:	6123      	str	r3, [r4, #16]
 80022be:	e7bc      	b.n	800223a <_printf_i+0x14a>
 80022c0:	6833      	ldr	r3, [r6, #0]
 80022c2:	2100      	movs	r1, #0
 80022c4:	1d1a      	adds	r2, r3, #4
 80022c6:	6032      	str	r2, [r6, #0]
 80022c8:	681e      	ldr	r6, [r3, #0]
 80022ca:	6862      	ldr	r2, [r4, #4]
 80022cc:	4630      	mov	r0, r6
 80022ce:	f000 f9d4 	bl	800267a <memchr>
 80022d2:	b108      	cbz	r0, 80022d8 <_printf_i+0x1e8>
 80022d4:	1b80      	subs	r0, r0, r6
 80022d6:	6060      	str	r0, [r4, #4]
 80022d8:	6863      	ldr	r3, [r4, #4]
 80022da:	6123      	str	r3, [r4, #16]
 80022dc:	2300      	movs	r3, #0
 80022de:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80022e2:	e7aa      	b.n	800223a <_printf_i+0x14a>
 80022e4:	4632      	mov	r2, r6
 80022e6:	4649      	mov	r1, r9
 80022e8:	4640      	mov	r0, r8
 80022ea:	6923      	ldr	r3, [r4, #16]
 80022ec:	47d0      	blx	sl
 80022ee:	3001      	adds	r0, #1
 80022f0:	d0ad      	beq.n	800224e <_printf_i+0x15e>
 80022f2:	6823      	ldr	r3, [r4, #0]
 80022f4:	079b      	lsls	r3, r3, #30
 80022f6:	d413      	bmi.n	8002320 <_printf_i+0x230>
 80022f8:	68e0      	ldr	r0, [r4, #12]
 80022fa:	9b03      	ldr	r3, [sp, #12]
 80022fc:	4298      	cmp	r0, r3
 80022fe:	bfb8      	it	lt
 8002300:	4618      	movlt	r0, r3
 8002302:	e7a6      	b.n	8002252 <_printf_i+0x162>
 8002304:	2301      	movs	r3, #1
 8002306:	4632      	mov	r2, r6
 8002308:	4649      	mov	r1, r9
 800230a:	4640      	mov	r0, r8
 800230c:	47d0      	blx	sl
 800230e:	3001      	adds	r0, #1
 8002310:	d09d      	beq.n	800224e <_printf_i+0x15e>
 8002312:	3501      	adds	r5, #1
 8002314:	68e3      	ldr	r3, [r4, #12]
 8002316:	9903      	ldr	r1, [sp, #12]
 8002318:	1a5b      	subs	r3, r3, r1
 800231a:	42ab      	cmp	r3, r5
 800231c:	dcf2      	bgt.n	8002304 <_printf_i+0x214>
 800231e:	e7eb      	b.n	80022f8 <_printf_i+0x208>
 8002320:	2500      	movs	r5, #0
 8002322:	f104 0619 	add.w	r6, r4, #25
 8002326:	e7f5      	b.n	8002314 <_printf_i+0x224>
 8002328:	08004824 	.word	0x08004824
 800232c:	08004835 	.word	0x08004835

08002330 <std>:
 8002330:	2300      	movs	r3, #0
 8002332:	b510      	push	{r4, lr}
 8002334:	4604      	mov	r4, r0
 8002336:	e9c0 3300 	strd	r3, r3, [r0]
 800233a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800233e:	6083      	str	r3, [r0, #8]
 8002340:	8181      	strh	r1, [r0, #12]
 8002342:	6643      	str	r3, [r0, #100]	@ 0x64
 8002344:	81c2      	strh	r2, [r0, #14]
 8002346:	6183      	str	r3, [r0, #24]
 8002348:	4619      	mov	r1, r3
 800234a:	2208      	movs	r2, #8
 800234c:	305c      	adds	r0, #92	@ 0x5c
 800234e:	f000 f914 	bl	800257a <memset>
 8002352:	4b0d      	ldr	r3, [pc, #52]	@ (8002388 <std+0x58>)
 8002354:	6224      	str	r4, [r4, #32]
 8002356:	6263      	str	r3, [r4, #36]	@ 0x24
 8002358:	4b0c      	ldr	r3, [pc, #48]	@ (800238c <std+0x5c>)
 800235a:	62a3      	str	r3, [r4, #40]	@ 0x28
 800235c:	4b0c      	ldr	r3, [pc, #48]	@ (8002390 <std+0x60>)
 800235e:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002360:	4b0c      	ldr	r3, [pc, #48]	@ (8002394 <std+0x64>)
 8002362:	6323      	str	r3, [r4, #48]	@ 0x30
 8002364:	4b0c      	ldr	r3, [pc, #48]	@ (8002398 <std+0x68>)
 8002366:	429c      	cmp	r4, r3
 8002368:	d006      	beq.n	8002378 <std+0x48>
 800236a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800236e:	4294      	cmp	r4, r2
 8002370:	d002      	beq.n	8002378 <std+0x48>
 8002372:	33d0      	adds	r3, #208	@ 0xd0
 8002374:	429c      	cmp	r4, r3
 8002376:	d105      	bne.n	8002384 <std+0x54>
 8002378:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800237c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002380:	f000 b978 	b.w	8002674 <__retarget_lock_init_recursive>
 8002384:	bd10      	pop	{r4, pc}
 8002386:	bf00      	nop
 8002388:	080024f5 	.word	0x080024f5
 800238c:	08002517 	.word	0x08002517
 8002390:	0800254f 	.word	0x0800254f
 8002394:	08002573 	.word	0x08002573
 8002398:	200001f4 	.word	0x200001f4

0800239c <stdio_exit_handler>:
 800239c:	4a02      	ldr	r2, [pc, #8]	@ (80023a8 <stdio_exit_handler+0xc>)
 800239e:	4903      	ldr	r1, [pc, #12]	@ (80023ac <stdio_exit_handler+0x10>)
 80023a0:	4803      	ldr	r0, [pc, #12]	@ (80023b0 <stdio_exit_handler+0x14>)
 80023a2:	f000 b869 	b.w	8002478 <_fwalk_sglue>
 80023a6:	bf00      	nop
 80023a8:	20000004 	.word	0x20000004
 80023ac:	08003fe5 	.word	0x08003fe5
 80023b0:	20000014 	.word	0x20000014

080023b4 <cleanup_stdio>:
 80023b4:	6841      	ldr	r1, [r0, #4]
 80023b6:	4b0c      	ldr	r3, [pc, #48]	@ (80023e8 <cleanup_stdio+0x34>)
 80023b8:	b510      	push	{r4, lr}
 80023ba:	4299      	cmp	r1, r3
 80023bc:	4604      	mov	r4, r0
 80023be:	d001      	beq.n	80023c4 <cleanup_stdio+0x10>
 80023c0:	f001 fe10 	bl	8003fe4 <_fflush_r>
 80023c4:	68a1      	ldr	r1, [r4, #8]
 80023c6:	4b09      	ldr	r3, [pc, #36]	@ (80023ec <cleanup_stdio+0x38>)
 80023c8:	4299      	cmp	r1, r3
 80023ca:	d002      	beq.n	80023d2 <cleanup_stdio+0x1e>
 80023cc:	4620      	mov	r0, r4
 80023ce:	f001 fe09 	bl	8003fe4 <_fflush_r>
 80023d2:	68e1      	ldr	r1, [r4, #12]
 80023d4:	4b06      	ldr	r3, [pc, #24]	@ (80023f0 <cleanup_stdio+0x3c>)
 80023d6:	4299      	cmp	r1, r3
 80023d8:	d004      	beq.n	80023e4 <cleanup_stdio+0x30>
 80023da:	4620      	mov	r0, r4
 80023dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80023e0:	f001 be00 	b.w	8003fe4 <_fflush_r>
 80023e4:	bd10      	pop	{r4, pc}
 80023e6:	bf00      	nop
 80023e8:	200001f4 	.word	0x200001f4
 80023ec:	2000025c 	.word	0x2000025c
 80023f0:	200002c4 	.word	0x200002c4

080023f4 <global_stdio_init.part.0>:
 80023f4:	b510      	push	{r4, lr}
 80023f6:	4b0b      	ldr	r3, [pc, #44]	@ (8002424 <global_stdio_init.part.0+0x30>)
 80023f8:	4c0b      	ldr	r4, [pc, #44]	@ (8002428 <global_stdio_init.part.0+0x34>)
 80023fa:	4a0c      	ldr	r2, [pc, #48]	@ (800242c <global_stdio_init.part.0+0x38>)
 80023fc:	4620      	mov	r0, r4
 80023fe:	601a      	str	r2, [r3, #0]
 8002400:	2104      	movs	r1, #4
 8002402:	2200      	movs	r2, #0
 8002404:	f7ff ff94 	bl	8002330 <std>
 8002408:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800240c:	2201      	movs	r2, #1
 800240e:	2109      	movs	r1, #9
 8002410:	f7ff ff8e 	bl	8002330 <std>
 8002414:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8002418:	2202      	movs	r2, #2
 800241a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800241e:	2112      	movs	r1, #18
 8002420:	f7ff bf86 	b.w	8002330 <std>
 8002424:	2000032c 	.word	0x2000032c
 8002428:	200001f4 	.word	0x200001f4
 800242c:	0800239d 	.word	0x0800239d

08002430 <__sfp_lock_acquire>:
 8002430:	4801      	ldr	r0, [pc, #4]	@ (8002438 <__sfp_lock_acquire+0x8>)
 8002432:	f000 b920 	b.w	8002676 <__retarget_lock_acquire_recursive>
 8002436:	bf00      	nop
 8002438:	20000335 	.word	0x20000335

0800243c <__sfp_lock_release>:
 800243c:	4801      	ldr	r0, [pc, #4]	@ (8002444 <__sfp_lock_release+0x8>)
 800243e:	f000 b91b 	b.w	8002678 <__retarget_lock_release_recursive>
 8002442:	bf00      	nop
 8002444:	20000335 	.word	0x20000335

08002448 <__sinit>:
 8002448:	b510      	push	{r4, lr}
 800244a:	4604      	mov	r4, r0
 800244c:	f7ff fff0 	bl	8002430 <__sfp_lock_acquire>
 8002450:	6a23      	ldr	r3, [r4, #32]
 8002452:	b11b      	cbz	r3, 800245c <__sinit+0x14>
 8002454:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002458:	f7ff bff0 	b.w	800243c <__sfp_lock_release>
 800245c:	4b04      	ldr	r3, [pc, #16]	@ (8002470 <__sinit+0x28>)
 800245e:	6223      	str	r3, [r4, #32]
 8002460:	4b04      	ldr	r3, [pc, #16]	@ (8002474 <__sinit+0x2c>)
 8002462:	681b      	ldr	r3, [r3, #0]
 8002464:	2b00      	cmp	r3, #0
 8002466:	d1f5      	bne.n	8002454 <__sinit+0xc>
 8002468:	f7ff ffc4 	bl	80023f4 <global_stdio_init.part.0>
 800246c:	e7f2      	b.n	8002454 <__sinit+0xc>
 800246e:	bf00      	nop
 8002470:	080023b5 	.word	0x080023b5
 8002474:	2000032c 	.word	0x2000032c

08002478 <_fwalk_sglue>:
 8002478:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800247c:	4607      	mov	r7, r0
 800247e:	4688      	mov	r8, r1
 8002480:	4614      	mov	r4, r2
 8002482:	2600      	movs	r6, #0
 8002484:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002488:	f1b9 0901 	subs.w	r9, r9, #1
 800248c:	d505      	bpl.n	800249a <_fwalk_sglue+0x22>
 800248e:	6824      	ldr	r4, [r4, #0]
 8002490:	2c00      	cmp	r4, #0
 8002492:	d1f7      	bne.n	8002484 <_fwalk_sglue+0xc>
 8002494:	4630      	mov	r0, r6
 8002496:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800249a:	89ab      	ldrh	r3, [r5, #12]
 800249c:	2b01      	cmp	r3, #1
 800249e:	d907      	bls.n	80024b0 <_fwalk_sglue+0x38>
 80024a0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80024a4:	3301      	adds	r3, #1
 80024a6:	d003      	beq.n	80024b0 <_fwalk_sglue+0x38>
 80024a8:	4629      	mov	r1, r5
 80024aa:	4638      	mov	r0, r7
 80024ac:	47c0      	blx	r8
 80024ae:	4306      	orrs	r6, r0
 80024b0:	3568      	adds	r5, #104	@ 0x68
 80024b2:	e7e9      	b.n	8002488 <_fwalk_sglue+0x10>

080024b4 <siprintf>:
 80024b4:	b40e      	push	{r1, r2, r3}
 80024b6:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 80024ba:	b500      	push	{lr}
 80024bc:	b09c      	sub	sp, #112	@ 0x70
 80024be:	ab1d      	add	r3, sp, #116	@ 0x74
 80024c0:	9002      	str	r0, [sp, #8]
 80024c2:	9006      	str	r0, [sp, #24]
 80024c4:	9107      	str	r1, [sp, #28]
 80024c6:	9104      	str	r1, [sp, #16]
 80024c8:	4808      	ldr	r0, [pc, #32]	@ (80024ec <siprintf+0x38>)
 80024ca:	4909      	ldr	r1, [pc, #36]	@ (80024f0 <siprintf+0x3c>)
 80024cc:	f853 2b04 	ldr.w	r2, [r3], #4
 80024d0:	9105      	str	r1, [sp, #20]
 80024d2:	6800      	ldr	r0, [r0, #0]
 80024d4:	a902      	add	r1, sp, #8
 80024d6:	9301      	str	r3, [sp, #4]
 80024d8:	f001 fc08 	bl	8003cec <_svfiprintf_r>
 80024dc:	2200      	movs	r2, #0
 80024de:	9b02      	ldr	r3, [sp, #8]
 80024e0:	701a      	strb	r2, [r3, #0]
 80024e2:	b01c      	add	sp, #112	@ 0x70
 80024e4:	f85d eb04 	ldr.w	lr, [sp], #4
 80024e8:	b003      	add	sp, #12
 80024ea:	4770      	bx	lr
 80024ec:	20000010 	.word	0x20000010
 80024f0:	ffff0208 	.word	0xffff0208

080024f4 <__sread>:
 80024f4:	b510      	push	{r4, lr}
 80024f6:	460c      	mov	r4, r1
 80024f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80024fc:	f000 f86c 	bl	80025d8 <_read_r>
 8002500:	2800      	cmp	r0, #0
 8002502:	bfab      	itete	ge
 8002504:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8002506:	89a3      	ldrhlt	r3, [r4, #12]
 8002508:	181b      	addge	r3, r3, r0
 800250a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800250e:	bfac      	ite	ge
 8002510:	6563      	strge	r3, [r4, #84]	@ 0x54
 8002512:	81a3      	strhlt	r3, [r4, #12]
 8002514:	bd10      	pop	{r4, pc}

08002516 <__swrite>:
 8002516:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800251a:	461f      	mov	r7, r3
 800251c:	898b      	ldrh	r3, [r1, #12]
 800251e:	4605      	mov	r5, r0
 8002520:	05db      	lsls	r3, r3, #23
 8002522:	460c      	mov	r4, r1
 8002524:	4616      	mov	r6, r2
 8002526:	d505      	bpl.n	8002534 <__swrite+0x1e>
 8002528:	2302      	movs	r3, #2
 800252a:	2200      	movs	r2, #0
 800252c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002530:	f000 f840 	bl	80025b4 <_lseek_r>
 8002534:	89a3      	ldrh	r3, [r4, #12]
 8002536:	4632      	mov	r2, r6
 8002538:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800253c:	81a3      	strh	r3, [r4, #12]
 800253e:	4628      	mov	r0, r5
 8002540:	463b      	mov	r3, r7
 8002542:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002546:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800254a:	f000 b857 	b.w	80025fc <_write_r>

0800254e <__sseek>:
 800254e:	b510      	push	{r4, lr}
 8002550:	460c      	mov	r4, r1
 8002552:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002556:	f000 f82d 	bl	80025b4 <_lseek_r>
 800255a:	1c43      	adds	r3, r0, #1
 800255c:	89a3      	ldrh	r3, [r4, #12]
 800255e:	bf15      	itete	ne
 8002560:	6560      	strne	r0, [r4, #84]	@ 0x54
 8002562:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8002566:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800256a:	81a3      	strheq	r3, [r4, #12]
 800256c:	bf18      	it	ne
 800256e:	81a3      	strhne	r3, [r4, #12]
 8002570:	bd10      	pop	{r4, pc}

08002572 <__sclose>:
 8002572:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002576:	f000 b80d 	b.w	8002594 <_close_r>

0800257a <memset>:
 800257a:	4603      	mov	r3, r0
 800257c:	4402      	add	r2, r0
 800257e:	4293      	cmp	r3, r2
 8002580:	d100      	bne.n	8002584 <memset+0xa>
 8002582:	4770      	bx	lr
 8002584:	f803 1b01 	strb.w	r1, [r3], #1
 8002588:	e7f9      	b.n	800257e <memset+0x4>
	...

0800258c <_localeconv_r>:
 800258c:	4800      	ldr	r0, [pc, #0]	@ (8002590 <_localeconv_r+0x4>)
 800258e:	4770      	bx	lr
 8002590:	20000150 	.word	0x20000150

08002594 <_close_r>:
 8002594:	b538      	push	{r3, r4, r5, lr}
 8002596:	2300      	movs	r3, #0
 8002598:	4d05      	ldr	r5, [pc, #20]	@ (80025b0 <_close_r+0x1c>)
 800259a:	4604      	mov	r4, r0
 800259c:	4608      	mov	r0, r1
 800259e:	602b      	str	r3, [r5, #0]
 80025a0:	f7ff f9c5 	bl	800192e <_close>
 80025a4:	1c43      	adds	r3, r0, #1
 80025a6:	d102      	bne.n	80025ae <_close_r+0x1a>
 80025a8:	682b      	ldr	r3, [r5, #0]
 80025aa:	b103      	cbz	r3, 80025ae <_close_r+0x1a>
 80025ac:	6023      	str	r3, [r4, #0]
 80025ae:	bd38      	pop	{r3, r4, r5, pc}
 80025b0:	20000330 	.word	0x20000330

080025b4 <_lseek_r>:
 80025b4:	b538      	push	{r3, r4, r5, lr}
 80025b6:	4604      	mov	r4, r0
 80025b8:	4608      	mov	r0, r1
 80025ba:	4611      	mov	r1, r2
 80025bc:	2200      	movs	r2, #0
 80025be:	4d05      	ldr	r5, [pc, #20]	@ (80025d4 <_lseek_r+0x20>)
 80025c0:	602a      	str	r2, [r5, #0]
 80025c2:	461a      	mov	r2, r3
 80025c4:	f7ff f9d7 	bl	8001976 <_lseek>
 80025c8:	1c43      	adds	r3, r0, #1
 80025ca:	d102      	bne.n	80025d2 <_lseek_r+0x1e>
 80025cc:	682b      	ldr	r3, [r5, #0]
 80025ce:	b103      	cbz	r3, 80025d2 <_lseek_r+0x1e>
 80025d0:	6023      	str	r3, [r4, #0]
 80025d2:	bd38      	pop	{r3, r4, r5, pc}
 80025d4:	20000330 	.word	0x20000330

080025d8 <_read_r>:
 80025d8:	b538      	push	{r3, r4, r5, lr}
 80025da:	4604      	mov	r4, r0
 80025dc:	4608      	mov	r0, r1
 80025de:	4611      	mov	r1, r2
 80025e0:	2200      	movs	r2, #0
 80025e2:	4d05      	ldr	r5, [pc, #20]	@ (80025f8 <_read_r+0x20>)
 80025e4:	602a      	str	r2, [r5, #0]
 80025e6:	461a      	mov	r2, r3
 80025e8:	f7ff f968 	bl	80018bc <_read>
 80025ec:	1c43      	adds	r3, r0, #1
 80025ee:	d102      	bne.n	80025f6 <_read_r+0x1e>
 80025f0:	682b      	ldr	r3, [r5, #0]
 80025f2:	b103      	cbz	r3, 80025f6 <_read_r+0x1e>
 80025f4:	6023      	str	r3, [r4, #0]
 80025f6:	bd38      	pop	{r3, r4, r5, pc}
 80025f8:	20000330 	.word	0x20000330

080025fc <_write_r>:
 80025fc:	b538      	push	{r3, r4, r5, lr}
 80025fe:	4604      	mov	r4, r0
 8002600:	4608      	mov	r0, r1
 8002602:	4611      	mov	r1, r2
 8002604:	2200      	movs	r2, #0
 8002606:	4d05      	ldr	r5, [pc, #20]	@ (800261c <_write_r+0x20>)
 8002608:	602a      	str	r2, [r5, #0]
 800260a:	461a      	mov	r2, r3
 800260c:	f7ff f973 	bl	80018f6 <_write>
 8002610:	1c43      	adds	r3, r0, #1
 8002612:	d102      	bne.n	800261a <_write_r+0x1e>
 8002614:	682b      	ldr	r3, [r5, #0]
 8002616:	b103      	cbz	r3, 800261a <_write_r+0x1e>
 8002618:	6023      	str	r3, [r4, #0]
 800261a:	bd38      	pop	{r3, r4, r5, pc}
 800261c:	20000330 	.word	0x20000330

08002620 <__errno>:
 8002620:	4b01      	ldr	r3, [pc, #4]	@ (8002628 <__errno+0x8>)
 8002622:	6818      	ldr	r0, [r3, #0]
 8002624:	4770      	bx	lr
 8002626:	bf00      	nop
 8002628:	20000010 	.word	0x20000010

0800262c <__libc_init_array>:
 800262c:	b570      	push	{r4, r5, r6, lr}
 800262e:	2600      	movs	r6, #0
 8002630:	4d0c      	ldr	r5, [pc, #48]	@ (8002664 <__libc_init_array+0x38>)
 8002632:	4c0d      	ldr	r4, [pc, #52]	@ (8002668 <__libc_init_array+0x3c>)
 8002634:	1b64      	subs	r4, r4, r5
 8002636:	10a4      	asrs	r4, r4, #2
 8002638:	42a6      	cmp	r6, r4
 800263a:	d109      	bne.n	8002650 <__libc_init_array+0x24>
 800263c:	f002 f86e 	bl	800471c <_init>
 8002640:	2600      	movs	r6, #0
 8002642:	4d0a      	ldr	r5, [pc, #40]	@ (800266c <__libc_init_array+0x40>)
 8002644:	4c0a      	ldr	r4, [pc, #40]	@ (8002670 <__libc_init_array+0x44>)
 8002646:	1b64      	subs	r4, r4, r5
 8002648:	10a4      	asrs	r4, r4, #2
 800264a:	42a6      	cmp	r6, r4
 800264c:	d105      	bne.n	800265a <__libc_init_array+0x2e>
 800264e:	bd70      	pop	{r4, r5, r6, pc}
 8002650:	f855 3b04 	ldr.w	r3, [r5], #4
 8002654:	4798      	blx	r3
 8002656:	3601      	adds	r6, #1
 8002658:	e7ee      	b.n	8002638 <__libc_init_array+0xc>
 800265a:	f855 3b04 	ldr.w	r3, [r5], #4
 800265e:	4798      	blx	r3
 8002660:	3601      	adds	r6, #1
 8002662:	e7f2      	b.n	800264a <__libc_init_array+0x1e>
 8002664:	08004b88 	.word	0x08004b88
 8002668:	08004b88 	.word	0x08004b88
 800266c:	08004b88 	.word	0x08004b88
 8002670:	08004b8c 	.word	0x08004b8c

08002674 <__retarget_lock_init_recursive>:
 8002674:	4770      	bx	lr

08002676 <__retarget_lock_acquire_recursive>:
 8002676:	4770      	bx	lr

08002678 <__retarget_lock_release_recursive>:
 8002678:	4770      	bx	lr

0800267a <memchr>:
 800267a:	4603      	mov	r3, r0
 800267c:	b510      	push	{r4, lr}
 800267e:	b2c9      	uxtb	r1, r1
 8002680:	4402      	add	r2, r0
 8002682:	4293      	cmp	r3, r2
 8002684:	4618      	mov	r0, r3
 8002686:	d101      	bne.n	800268c <memchr+0x12>
 8002688:	2000      	movs	r0, #0
 800268a:	e003      	b.n	8002694 <memchr+0x1a>
 800268c:	7804      	ldrb	r4, [r0, #0]
 800268e:	3301      	adds	r3, #1
 8002690:	428c      	cmp	r4, r1
 8002692:	d1f6      	bne.n	8002682 <memchr+0x8>
 8002694:	bd10      	pop	{r4, pc}

08002696 <quorem>:
 8002696:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800269a:	6903      	ldr	r3, [r0, #16]
 800269c:	690c      	ldr	r4, [r1, #16]
 800269e:	4607      	mov	r7, r0
 80026a0:	42a3      	cmp	r3, r4
 80026a2:	db7e      	blt.n	80027a2 <quorem+0x10c>
 80026a4:	3c01      	subs	r4, #1
 80026a6:	00a3      	lsls	r3, r4, #2
 80026a8:	f100 0514 	add.w	r5, r0, #20
 80026ac:	f101 0814 	add.w	r8, r1, #20
 80026b0:	9300      	str	r3, [sp, #0]
 80026b2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80026b6:	9301      	str	r3, [sp, #4]
 80026b8:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80026bc:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80026c0:	3301      	adds	r3, #1
 80026c2:	429a      	cmp	r2, r3
 80026c4:	fbb2 f6f3 	udiv	r6, r2, r3
 80026c8:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80026cc:	d32e      	bcc.n	800272c <quorem+0x96>
 80026ce:	f04f 0a00 	mov.w	sl, #0
 80026d2:	46c4      	mov	ip, r8
 80026d4:	46ae      	mov	lr, r5
 80026d6:	46d3      	mov	fp, sl
 80026d8:	f85c 3b04 	ldr.w	r3, [ip], #4
 80026dc:	b298      	uxth	r0, r3
 80026de:	fb06 a000 	mla	r0, r6, r0, sl
 80026e2:	0c1b      	lsrs	r3, r3, #16
 80026e4:	0c02      	lsrs	r2, r0, #16
 80026e6:	fb06 2303 	mla	r3, r6, r3, r2
 80026ea:	f8de 2000 	ldr.w	r2, [lr]
 80026ee:	b280      	uxth	r0, r0
 80026f0:	b292      	uxth	r2, r2
 80026f2:	1a12      	subs	r2, r2, r0
 80026f4:	445a      	add	r2, fp
 80026f6:	f8de 0000 	ldr.w	r0, [lr]
 80026fa:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80026fe:	b29b      	uxth	r3, r3
 8002700:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002704:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8002708:	b292      	uxth	r2, r2
 800270a:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800270e:	45e1      	cmp	r9, ip
 8002710:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8002714:	f84e 2b04 	str.w	r2, [lr], #4
 8002718:	d2de      	bcs.n	80026d8 <quorem+0x42>
 800271a:	9b00      	ldr	r3, [sp, #0]
 800271c:	58eb      	ldr	r3, [r5, r3]
 800271e:	b92b      	cbnz	r3, 800272c <quorem+0x96>
 8002720:	9b01      	ldr	r3, [sp, #4]
 8002722:	3b04      	subs	r3, #4
 8002724:	429d      	cmp	r5, r3
 8002726:	461a      	mov	r2, r3
 8002728:	d32f      	bcc.n	800278a <quorem+0xf4>
 800272a:	613c      	str	r4, [r7, #16]
 800272c:	4638      	mov	r0, r7
 800272e:	f001 f979 	bl	8003a24 <__mcmp>
 8002732:	2800      	cmp	r0, #0
 8002734:	db25      	blt.n	8002782 <quorem+0xec>
 8002736:	4629      	mov	r1, r5
 8002738:	2000      	movs	r0, #0
 800273a:	f858 2b04 	ldr.w	r2, [r8], #4
 800273e:	f8d1 c000 	ldr.w	ip, [r1]
 8002742:	fa1f fe82 	uxth.w	lr, r2
 8002746:	fa1f f38c 	uxth.w	r3, ip
 800274a:	eba3 030e 	sub.w	r3, r3, lr
 800274e:	4403      	add	r3, r0
 8002750:	0c12      	lsrs	r2, r2, #16
 8002752:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8002756:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 800275a:	b29b      	uxth	r3, r3
 800275c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002760:	45c1      	cmp	r9, r8
 8002762:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002766:	f841 3b04 	str.w	r3, [r1], #4
 800276a:	d2e6      	bcs.n	800273a <quorem+0xa4>
 800276c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002770:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002774:	b922      	cbnz	r2, 8002780 <quorem+0xea>
 8002776:	3b04      	subs	r3, #4
 8002778:	429d      	cmp	r5, r3
 800277a:	461a      	mov	r2, r3
 800277c:	d30b      	bcc.n	8002796 <quorem+0x100>
 800277e:	613c      	str	r4, [r7, #16]
 8002780:	3601      	adds	r6, #1
 8002782:	4630      	mov	r0, r6
 8002784:	b003      	add	sp, #12
 8002786:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800278a:	6812      	ldr	r2, [r2, #0]
 800278c:	3b04      	subs	r3, #4
 800278e:	2a00      	cmp	r2, #0
 8002790:	d1cb      	bne.n	800272a <quorem+0x94>
 8002792:	3c01      	subs	r4, #1
 8002794:	e7c6      	b.n	8002724 <quorem+0x8e>
 8002796:	6812      	ldr	r2, [r2, #0]
 8002798:	3b04      	subs	r3, #4
 800279a:	2a00      	cmp	r2, #0
 800279c:	d1ef      	bne.n	800277e <quorem+0xe8>
 800279e:	3c01      	subs	r4, #1
 80027a0:	e7ea      	b.n	8002778 <quorem+0xe2>
 80027a2:	2000      	movs	r0, #0
 80027a4:	e7ee      	b.n	8002784 <quorem+0xee>
	...

080027a8 <_dtoa_r>:
 80027a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80027ac:	4614      	mov	r4, r2
 80027ae:	461d      	mov	r5, r3
 80027b0:	69c7      	ldr	r7, [r0, #28]
 80027b2:	b097      	sub	sp, #92	@ 0x5c
 80027b4:	4683      	mov	fp, r0
 80027b6:	e9cd 4502 	strd	r4, r5, [sp, #8]
 80027ba:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 80027bc:	b97f      	cbnz	r7, 80027de <_dtoa_r+0x36>
 80027be:	2010      	movs	r0, #16
 80027c0:	f000 fe02 	bl	80033c8 <malloc>
 80027c4:	4602      	mov	r2, r0
 80027c6:	f8cb 001c 	str.w	r0, [fp, #28]
 80027ca:	b920      	cbnz	r0, 80027d6 <_dtoa_r+0x2e>
 80027cc:	21ef      	movs	r1, #239	@ 0xef
 80027ce:	4ba8      	ldr	r3, [pc, #672]	@ (8002a70 <_dtoa_r+0x2c8>)
 80027d0:	48a8      	ldr	r0, [pc, #672]	@ (8002a74 <_dtoa_r+0x2cc>)
 80027d2:	f001 fc67 	bl	80040a4 <__assert_func>
 80027d6:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80027da:	6007      	str	r7, [r0, #0]
 80027dc:	60c7      	str	r7, [r0, #12]
 80027de:	f8db 301c 	ldr.w	r3, [fp, #28]
 80027e2:	6819      	ldr	r1, [r3, #0]
 80027e4:	b159      	cbz	r1, 80027fe <_dtoa_r+0x56>
 80027e6:	685a      	ldr	r2, [r3, #4]
 80027e8:	2301      	movs	r3, #1
 80027ea:	4093      	lsls	r3, r2
 80027ec:	604a      	str	r2, [r1, #4]
 80027ee:	608b      	str	r3, [r1, #8]
 80027f0:	4658      	mov	r0, fp
 80027f2:	f000 fedf 	bl	80035b4 <_Bfree>
 80027f6:	2200      	movs	r2, #0
 80027f8:	f8db 301c 	ldr.w	r3, [fp, #28]
 80027fc:	601a      	str	r2, [r3, #0]
 80027fe:	1e2b      	subs	r3, r5, #0
 8002800:	bfaf      	iteee	ge
 8002802:	2300      	movge	r3, #0
 8002804:	2201      	movlt	r2, #1
 8002806:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800280a:	9303      	strlt	r3, [sp, #12]
 800280c:	bfa8      	it	ge
 800280e:	6033      	strge	r3, [r6, #0]
 8002810:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8002814:	4b98      	ldr	r3, [pc, #608]	@ (8002a78 <_dtoa_r+0x2d0>)
 8002816:	bfb8      	it	lt
 8002818:	6032      	strlt	r2, [r6, #0]
 800281a:	ea33 0308 	bics.w	r3, r3, r8
 800281e:	d112      	bne.n	8002846 <_dtoa_r+0x9e>
 8002820:	f242 730f 	movw	r3, #9999	@ 0x270f
 8002824:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8002826:	6013      	str	r3, [r2, #0]
 8002828:	f3c8 0313 	ubfx	r3, r8, #0, #20
 800282c:	4323      	orrs	r3, r4
 800282e:	f000 8550 	beq.w	80032d2 <_dtoa_r+0xb2a>
 8002832:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002834:	f8df a244 	ldr.w	sl, [pc, #580]	@ 8002a7c <_dtoa_r+0x2d4>
 8002838:	2b00      	cmp	r3, #0
 800283a:	f000 8552 	beq.w	80032e2 <_dtoa_r+0xb3a>
 800283e:	f10a 0303 	add.w	r3, sl, #3
 8002842:	f000 bd4c 	b.w	80032de <_dtoa_r+0xb36>
 8002846:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800284a:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800284e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002852:	2200      	movs	r2, #0
 8002854:	2300      	movs	r3, #0
 8002856:	f7fe f95b 	bl	8000b10 <__aeabi_dcmpeq>
 800285a:	4607      	mov	r7, r0
 800285c:	b158      	cbz	r0, 8002876 <_dtoa_r+0xce>
 800285e:	2301      	movs	r3, #1
 8002860:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8002862:	6013      	str	r3, [r2, #0]
 8002864:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002866:	b113      	cbz	r3, 800286e <_dtoa_r+0xc6>
 8002868:	4b85      	ldr	r3, [pc, #532]	@ (8002a80 <_dtoa_r+0x2d8>)
 800286a:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 800286c:	6013      	str	r3, [r2, #0]
 800286e:	f8df a214 	ldr.w	sl, [pc, #532]	@ 8002a84 <_dtoa_r+0x2dc>
 8002872:	f000 bd36 	b.w	80032e2 <_dtoa_r+0xb3a>
 8002876:	ab14      	add	r3, sp, #80	@ 0x50
 8002878:	9301      	str	r3, [sp, #4]
 800287a:	ab15      	add	r3, sp, #84	@ 0x54
 800287c:	9300      	str	r3, [sp, #0]
 800287e:	4658      	mov	r0, fp
 8002880:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8002884:	f001 f97e 	bl	8003b84 <__d2b>
 8002888:	f3c8 560a 	ubfx	r6, r8, #20, #11
 800288c:	4681      	mov	r9, r0
 800288e:	2e00      	cmp	r6, #0
 8002890:	d077      	beq.n	8002982 <_dtoa_r+0x1da>
 8002892:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002896:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002898:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 800289c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80028a0:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 80028a4:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 80028a8:	9712      	str	r7, [sp, #72]	@ 0x48
 80028aa:	4619      	mov	r1, r3
 80028ac:	2200      	movs	r2, #0
 80028ae:	4b76      	ldr	r3, [pc, #472]	@ (8002a88 <_dtoa_r+0x2e0>)
 80028b0:	f7fd fd0e 	bl	80002d0 <__aeabi_dsub>
 80028b4:	a368      	add	r3, pc, #416	@ (adr r3, 8002a58 <_dtoa_r+0x2b0>)
 80028b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028ba:	f7fd fec1 	bl	8000640 <__aeabi_dmul>
 80028be:	a368      	add	r3, pc, #416	@ (adr r3, 8002a60 <_dtoa_r+0x2b8>)
 80028c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028c4:	f7fd fd06 	bl	80002d4 <__adddf3>
 80028c8:	4604      	mov	r4, r0
 80028ca:	4630      	mov	r0, r6
 80028cc:	460d      	mov	r5, r1
 80028ce:	f7fd fe4d 	bl	800056c <__aeabi_i2d>
 80028d2:	a365      	add	r3, pc, #404	@ (adr r3, 8002a68 <_dtoa_r+0x2c0>)
 80028d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028d8:	f7fd feb2 	bl	8000640 <__aeabi_dmul>
 80028dc:	4602      	mov	r2, r0
 80028de:	460b      	mov	r3, r1
 80028e0:	4620      	mov	r0, r4
 80028e2:	4629      	mov	r1, r5
 80028e4:	f7fd fcf6 	bl	80002d4 <__adddf3>
 80028e8:	4604      	mov	r4, r0
 80028ea:	460d      	mov	r5, r1
 80028ec:	f7fe f958 	bl	8000ba0 <__aeabi_d2iz>
 80028f0:	2200      	movs	r2, #0
 80028f2:	4607      	mov	r7, r0
 80028f4:	2300      	movs	r3, #0
 80028f6:	4620      	mov	r0, r4
 80028f8:	4629      	mov	r1, r5
 80028fa:	f7fe f913 	bl	8000b24 <__aeabi_dcmplt>
 80028fe:	b140      	cbz	r0, 8002912 <_dtoa_r+0x16a>
 8002900:	4638      	mov	r0, r7
 8002902:	f7fd fe33 	bl	800056c <__aeabi_i2d>
 8002906:	4622      	mov	r2, r4
 8002908:	462b      	mov	r3, r5
 800290a:	f7fe f901 	bl	8000b10 <__aeabi_dcmpeq>
 800290e:	b900      	cbnz	r0, 8002912 <_dtoa_r+0x16a>
 8002910:	3f01      	subs	r7, #1
 8002912:	2f16      	cmp	r7, #22
 8002914:	d853      	bhi.n	80029be <_dtoa_r+0x216>
 8002916:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800291a:	4b5c      	ldr	r3, [pc, #368]	@ (8002a8c <_dtoa_r+0x2e4>)
 800291c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002920:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002924:	f7fe f8fe 	bl	8000b24 <__aeabi_dcmplt>
 8002928:	2800      	cmp	r0, #0
 800292a:	d04a      	beq.n	80029c2 <_dtoa_r+0x21a>
 800292c:	2300      	movs	r3, #0
 800292e:	3f01      	subs	r7, #1
 8002930:	930f      	str	r3, [sp, #60]	@ 0x3c
 8002932:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002934:	1b9b      	subs	r3, r3, r6
 8002936:	1e5a      	subs	r2, r3, #1
 8002938:	bf46      	itte	mi
 800293a:	f1c3 0801 	rsbmi	r8, r3, #1
 800293e:	2300      	movmi	r3, #0
 8002940:	f04f 0800 	movpl.w	r8, #0
 8002944:	9209      	str	r2, [sp, #36]	@ 0x24
 8002946:	bf48      	it	mi
 8002948:	9309      	strmi	r3, [sp, #36]	@ 0x24
 800294a:	2f00      	cmp	r7, #0
 800294c:	db3b      	blt.n	80029c6 <_dtoa_r+0x21e>
 800294e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002950:	970e      	str	r7, [sp, #56]	@ 0x38
 8002952:	443b      	add	r3, r7
 8002954:	9309      	str	r3, [sp, #36]	@ 0x24
 8002956:	2300      	movs	r3, #0
 8002958:	930a      	str	r3, [sp, #40]	@ 0x28
 800295a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800295c:	2b09      	cmp	r3, #9
 800295e:	d866      	bhi.n	8002a2e <_dtoa_r+0x286>
 8002960:	2b05      	cmp	r3, #5
 8002962:	bfc4      	itt	gt
 8002964:	3b04      	subgt	r3, #4
 8002966:	9320      	strgt	r3, [sp, #128]	@ 0x80
 8002968:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800296a:	bfc8      	it	gt
 800296c:	2400      	movgt	r4, #0
 800296e:	f1a3 0302 	sub.w	r3, r3, #2
 8002972:	bfd8      	it	le
 8002974:	2401      	movle	r4, #1
 8002976:	2b03      	cmp	r3, #3
 8002978:	d864      	bhi.n	8002a44 <_dtoa_r+0x29c>
 800297a:	e8df f003 	tbb	[pc, r3]
 800297e:	382b      	.short	0x382b
 8002980:	5636      	.short	0x5636
 8002982:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8002986:	441e      	add	r6, r3
 8002988:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 800298c:	2b20      	cmp	r3, #32
 800298e:	bfc1      	itttt	gt
 8002990:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8002994:	fa08 f803 	lslgt.w	r8, r8, r3
 8002998:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 800299c:	fa24 f303 	lsrgt.w	r3, r4, r3
 80029a0:	bfd6      	itet	le
 80029a2:	f1c3 0320 	rsble	r3, r3, #32
 80029a6:	ea48 0003 	orrgt.w	r0, r8, r3
 80029aa:	fa04 f003 	lslle.w	r0, r4, r3
 80029ae:	f7fd fdcd 	bl	800054c <__aeabi_ui2d>
 80029b2:	2201      	movs	r2, #1
 80029b4:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 80029b8:	3e01      	subs	r6, #1
 80029ba:	9212      	str	r2, [sp, #72]	@ 0x48
 80029bc:	e775      	b.n	80028aa <_dtoa_r+0x102>
 80029be:	2301      	movs	r3, #1
 80029c0:	e7b6      	b.n	8002930 <_dtoa_r+0x188>
 80029c2:	900f      	str	r0, [sp, #60]	@ 0x3c
 80029c4:	e7b5      	b.n	8002932 <_dtoa_r+0x18a>
 80029c6:	427b      	negs	r3, r7
 80029c8:	930a      	str	r3, [sp, #40]	@ 0x28
 80029ca:	2300      	movs	r3, #0
 80029cc:	eba8 0807 	sub.w	r8, r8, r7
 80029d0:	930e      	str	r3, [sp, #56]	@ 0x38
 80029d2:	e7c2      	b.n	800295a <_dtoa_r+0x1b2>
 80029d4:	2300      	movs	r3, #0
 80029d6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80029d8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80029da:	2b00      	cmp	r3, #0
 80029dc:	dc35      	bgt.n	8002a4a <_dtoa_r+0x2a2>
 80029de:	2301      	movs	r3, #1
 80029e0:	461a      	mov	r2, r3
 80029e2:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80029e6:	9221      	str	r2, [sp, #132]	@ 0x84
 80029e8:	e00b      	b.n	8002a02 <_dtoa_r+0x25a>
 80029ea:	2301      	movs	r3, #1
 80029ec:	e7f3      	b.n	80029d6 <_dtoa_r+0x22e>
 80029ee:	2300      	movs	r3, #0
 80029f0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80029f2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80029f4:	18fb      	adds	r3, r7, r3
 80029f6:	9308      	str	r3, [sp, #32]
 80029f8:	3301      	adds	r3, #1
 80029fa:	2b01      	cmp	r3, #1
 80029fc:	9307      	str	r3, [sp, #28]
 80029fe:	bfb8      	it	lt
 8002a00:	2301      	movlt	r3, #1
 8002a02:	2100      	movs	r1, #0
 8002a04:	2204      	movs	r2, #4
 8002a06:	f8db 001c 	ldr.w	r0, [fp, #28]
 8002a0a:	f102 0514 	add.w	r5, r2, #20
 8002a0e:	429d      	cmp	r5, r3
 8002a10:	d91f      	bls.n	8002a52 <_dtoa_r+0x2aa>
 8002a12:	6041      	str	r1, [r0, #4]
 8002a14:	4658      	mov	r0, fp
 8002a16:	f000 fd8d 	bl	8003534 <_Balloc>
 8002a1a:	4682      	mov	sl, r0
 8002a1c:	2800      	cmp	r0, #0
 8002a1e:	d139      	bne.n	8002a94 <_dtoa_r+0x2ec>
 8002a20:	4602      	mov	r2, r0
 8002a22:	f240 11af 	movw	r1, #431	@ 0x1af
 8002a26:	4b1a      	ldr	r3, [pc, #104]	@ (8002a90 <_dtoa_r+0x2e8>)
 8002a28:	e6d2      	b.n	80027d0 <_dtoa_r+0x28>
 8002a2a:	2301      	movs	r3, #1
 8002a2c:	e7e0      	b.n	80029f0 <_dtoa_r+0x248>
 8002a2e:	2401      	movs	r4, #1
 8002a30:	2300      	movs	r3, #0
 8002a32:	940b      	str	r4, [sp, #44]	@ 0x2c
 8002a34:	9320      	str	r3, [sp, #128]	@ 0x80
 8002a36:	f04f 33ff 	mov.w	r3, #4294967295
 8002a3a:	2200      	movs	r2, #0
 8002a3c:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002a40:	2312      	movs	r3, #18
 8002a42:	e7d0      	b.n	80029e6 <_dtoa_r+0x23e>
 8002a44:	2301      	movs	r3, #1
 8002a46:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002a48:	e7f5      	b.n	8002a36 <_dtoa_r+0x28e>
 8002a4a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002a4c:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8002a50:	e7d7      	b.n	8002a02 <_dtoa_r+0x25a>
 8002a52:	3101      	adds	r1, #1
 8002a54:	0052      	lsls	r2, r2, #1
 8002a56:	e7d8      	b.n	8002a0a <_dtoa_r+0x262>
 8002a58:	636f4361 	.word	0x636f4361
 8002a5c:	3fd287a7 	.word	0x3fd287a7
 8002a60:	8b60c8b3 	.word	0x8b60c8b3
 8002a64:	3fc68a28 	.word	0x3fc68a28
 8002a68:	509f79fb 	.word	0x509f79fb
 8002a6c:	3fd34413 	.word	0x3fd34413
 8002a70:	08004853 	.word	0x08004853
 8002a74:	0800486a 	.word	0x0800486a
 8002a78:	7ff00000 	.word	0x7ff00000
 8002a7c:	0800484f 	.word	0x0800484f
 8002a80:	08004823 	.word	0x08004823
 8002a84:	08004822 	.word	0x08004822
 8002a88:	3ff80000 	.word	0x3ff80000
 8002a8c:	08004960 	.word	0x08004960
 8002a90:	080048c2 	.word	0x080048c2
 8002a94:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002a98:	6018      	str	r0, [r3, #0]
 8002a9a:	9b07      	ldr	r3, [sp, #28]
 8002a9c:	2b0e      	cmp	r3, #14
 8002a9e:	f200 80a4 	bhi.w	8002bea <_dtoa_r+0x442>
 8002aa2:	2c00      	cmp	r4, #0
 8002aa4:	f000 80a1 	beq.w	8002bea <_dtoa_r+0x442>
 8002aa8:	2f00      	cmp	r7, #0
 8002aaa:	dd33      	ble.n	8002b14 <_dtoa_r+0x36c>
 8002aac:	4b86      	ldr	r3, [pc, #536]	@ (8002cc8 <_dtoa_r+0x520>)
 8002aae:	f007 020f 	and.w	r2, r7, #15
 8002ab2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002ab6:	05f8      	lsls	r0, r7, #23
 8002ab8:	e9d3 3400 	ldrd	r3, r4, [r3]
 8002abc:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8002ac0:	ea4f 1427 	mov.w	r4, r7, asr #4
 8002ac4:	d516      	bpl.n	8002af4 <_dtoa_r+0x34c>
 8002ac6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002aca:	4b80      	ldr	r3, [pc, #512]	@ (8002ccc <_dtoa_r+0x524>)
 8002acc:	2603      	movs	r6, #3
 8002ace:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002ad2:	f7fd fedf 	bl	8000894 <__aeabi_ddiv>
 8002ad6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002ada:	f004 040f 	and.w	r4, r4, #15
 8002ade:	4d7b      	ldr	r5, [pc, #492]	@ (8002ccc <_dtoa_r+0x524>)
 8002ae0:	b954      	cbnz	r4, 8002af8 <_dtoa_r+0x350>
 8002ae2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002ae6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002aea:	f7fd fed3 	bl	8000894 <__aeabi_ddiv>
 8002aee:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002af2:	e028      	b.n	8002b46 <_dtoa_r+0x39e>
 8002af4:	2602      	movs	r6, #2
 8002af6:	e7f2      	b.n	8002ade <_dtoa_r+0x336>
 8002af8:	07e1      	lsls	r1, r4, #31
 8002afa:	d508      	bpl.n	8002b0e <_dtoa_r+0x366>
 8002afc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002b00:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002b04:	f7fd fd9c 	bl	8000640 <__aeabi_dmul>
 8002b08:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002b0c:	3601      	adds	r6, #1
 8002b0e:	1064      	asrs	r4, r4, #1
 8002b10:	3508      	adds	r5, #8
 8002b12:	e7e5      	b.n	8002ae0 <_dtoa_r+0x338>
 8002b14:	f000 80d2 	beq.w	8002cbc <_dtoa_r+0x514>
 8002b18:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002b1c:	427c      	negs	r4, r7
 8002b1e:	4b6a      	ldr	r3, [pc, #424]	@ (8002cc8 <_dtoa_r+0x520>)
 8002b20:	f004 020f 	and.w	r2, r4, #15
 8002b24:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002b28:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b2c:	f7fd fd88 	bl	8000640 <__aeabi_dmul>
 8002b30:	2602      	movs	r6, #2
 8002b32:	2300      	movs	r3, #0
 8002b34:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002b38:	4d64      	ldr	r5, [pc, #400]	@ (8002ccc <_dtoa_r+0x524>)
 8002b3a:	1124      	asrs	r4, r4, #4
 8002b3c:	2c00      	cmp	r4, #0
 8002b3e:	f040 80b2 	bne.w	8002ca6 <_dtoa_r+0x4fe>
 8002b42:	2b00      	cmp	r3, #0
 8002b44:	d1d3      	bne.n	8002aee <_dtoa_r+0x346>
 8002b46:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002b4a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002b4c:	2b00      	cmp	r3, #0
 8002b4e:	f000 80b7 	beq.w	8002cc0 <_dtoa_r+0x518>
 8002b52:	2200      	movs	r2, #0
 8002b54:	4620      	mov	r0, r4
 8002b56:	4629      	mov	r1, r5
 8002b58:	4b5d      	ldr	r3, [pc, #372]	@ (8002cd0 <_dtoa_r+0x528>)
 8002b5a:	f7fd ffe3 	bl	8000b24 <__aeabi_dcmplt>
 8002b5e:	2800      	cmp	r0, #0
 8002b60:	f000 80ae 	beq.w	8002cc0 <_dtoa_r+0x518>
 8002b64:	9b07      	ldr	r3, [sp, #28]
 8002b66:	2b00      	cmp	r3, #0
 8002b68:	f000 80aa 	beq.w	8002cc0 <_dtoa_r+0x518>
 8002b6c:	9b08      	ldr	r3, [sp, #32]
 8002b6e:	2b00      	cmp	r3, #0
 8002b70:	dd37      	ble.n	8002be2 <_dtoa_r+0x43a>
 8002b72:	1e7b      	subs	r3, r7, #1
 8002b74:	4620      	mov	r0, r4
 8002b76:	9304      	str	r3, [sp, #16]
 8002b78:	2200      	movs	r2, #0
 8002b7a:	4629      	mov	r1, r5
 8002b7c:	4b55      	ldr	r3, [pc, #340]	@ (8002cd4 <_dtoa_r+0x52c>)
 8002b7e:	f7fd fd5f 	bl	8000640 <__aeabi_dmul>
 8002b82:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002b86:	9c08      	ldr	r4, [sp, #32]
 8002b88:	3601      	adds	r6, #1
 8002b8a:	4630      	mov	r0, r6
 8002b8c:	f7fd fcee 	bl	800056c <__aeabi_i2d>
 8002b90:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002b94:	f7fd fd54 	bl	8000640 <__aeabi_dmul>
 8002b98:	2200      	movs	r2, #0
 8002b9a:	4b4f      	ldr	r3, [pc, #316]	@ (8002cd8 <_dtoa_r+0x530>)
 8002b9c:	f7fd fb9a 	bl	80002d4 <__adddf3>
 8002ba0:	4605      	mov	r5, r0
 8002ba2:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8002ba6:	2c00      	cmp	r4, #0
 8002ba8:	f040 809a 	bne.w	8002ce0 <_dtoa_r+0x538>
 8002bac:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002bb0:	2200      	movs	r2, #0
 8002bb2:	4b4a      	ldr	r3, [pc, #296]	@ (8002cdc <_dtoa_r+0x534>)
 8002bb4:	f7fd fb8c 	bl	80002d0 <__aeabi_dsub>
 8002bb8:	4602      	mov	r2, r0
 8002bba:	460b      	mov	r3, r1
 8002bbc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002bc0:	462a      	mov	r2, r5
 8002bc2:	4633      	mov	r3, r6
 8002bc4:	f7fd ffcc 	bl	8000b60 <__aeabi_dcmpgt>
 8002bc8:	2800      	cmp	r0, #0
 8002bca:	f040 828e 	bne.w	80030ea <_dtoa_r+0x942>
 8002bce:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002bd2:	462a      	mov	r2, r5
 8002bd4:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8002bd8:	f7fd ffa4 	bl	8000b24 <__aeabi_dcmplt>
 8002bdc:	2800      	cmp	r0, #0
 8002bde:	f040 8127 	bne.w	8002e30 <_dtoa_r+0x688>
 8002be2:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8002be6:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8002bea:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002bec:	2b00      	cmp	r3, #0
 8002bee:	f2c0 8163 	blt.w	8002eb8 <_dtoa_r+0x710>
 8002bf2:	2f0e      	cmp	r7, #14
 8002bf4:	f300 8160 	bgt.w	8002eb8 <_dtoa_r+0x710>
 8002bf8:	4b33      	ldr	r3, [pc, #204]	@ (8002cc8 <_dtoa_r+0x520>)
 8002bfa:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002bfe:	e9d3 3400 	ldrd	r3, r4, [r3]
 8002c02:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8002c06:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002c08:	2b00      	cmp	r3, #0
 8002c0a:	da03      	bge.n	8002c14 <_dtoa_r+0x46c>
 8002c0c:	9b07      	ldr	r3, [sp, #28]
 8002c0e:	2b00      	cmp	r3, #0
 8002c10:	f340 8100 	ble.w	8002e14 <_dtoa_r+0x66c>
 8002c14:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002c18:	4656      	mov	r6, sl
 8002c1a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002c1e:	4620      	mov	r0, r4
 8002c20:	4629      	mov	r1, r5
 8002c22:	f7fd fe37 	bl	8000894 <__aeabi_ddiv>
 8002c26:	f7fd ffbb 	bl	8000ba0 <__aeabi_d2iz>
 8002c2a:	4680      	mov	r8, r0
 8002c2c:	f7fd fc9e 	bl	800056c <__aeabi_i2d>
 8002c30:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002c34:	f7fd fd04 	bl	8000640 <__aeabi_dmul>
 8002c38:	4602      	mov	r2, r0
 8002c3a:	460b      	mov	r3, r1
 8002c3c:	4620      	mov	r0, r4
 8002c3e:	4629      	mov	r1, r5
 8002c40:	f7fd fb46 	bl	80002d0 <__aeabi_dsub>
 8002c44:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8002c48:	9d07      	ldr	r5, [sp, #28]
 8002c4a:	f806 4b01 	strb.w	r4, [r6], #1
 8002c4e:	eba6 040a 	sub.w	r4, r6, sl
 8002c52:	42a5      	cmp	r5, r4
 8002c54:	4602      	mov	r2, r0
 8002c56:	460b      	mov	r3, r1
 8002c58:	f040 8116 	bne.w	8002e88 <_dtoa_r+0x6e0>
 8002c5c:	f7fd fb3a 	bl	80002d4 <__adddf3>
 8002c60:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002c64:	4604      	mov	r4, r0
 8002c66:	460d      	mov	r5, r1
 8002c68:	f7fd ff7a 	bl	8000b60 <__aeabi_dcmpgt>
 8002c6c:	2800      	cmp	r0, #0
 8002c6e:	f040 80f8 	bne.w	8002e62 <_dtoa_r+0x6ba>
 8002c72:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002c76:	4620      	mov	r0, r4
 8002c78:	4629      	mov	r1, r5
 8002c7a:	f7fd ff49 	bl	8000b10 <__aeabi_dcmpeq>
 8002c7e:	b118      	cbz	r0, 8002c88 <_dtoa_r+0x4e0>
 8002c80:	f018 0f01 	tst.w	r8, #1
 8002c84:	f040 80ed 	bne.w	8002e62 <_dtoa_r+0x6ba>
 8002c88:	4649      	mov	r1, r9
 8002c8a:	4658      	mov	r0, fp
 8002c8c:	f000 fc92 	bl	80035b4 <_Bfree>
 8002c90:	2300      	movs	r3, #0
 8002c92:	7033      	strb	r3, [r6, #0]
 8002c94:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8002c96:	3701      	adds	r7, #1
 8002c98:	601f      	str	r7, [r3, #0]
 8002c9a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002c9c:	2b00      	cmp	r3, #0
 8002c9e:	f000 8320 	beq.w	80032e2 <_dtoa_r+0xb3a>
 8002ca2:	601e      	str	r6, [r3, #0]
 8002ca4:	e31d      	b.n	80032e2 <_dtoa_r+0xb3a>
 8002ca6:	07e2      	lsls	r2, r4, #31
 8002ca8:	d505      	bpl.n	8002cb6 <_dtoa_r+0x50e>
 8002caa:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002cae:	f7fd fcc7 	bl	8000640 <__aeabi_dmul>
 8002cb2:	2301      	movs	r3, #1
 8002cb4:	3601      	adds	r6, #1
 8002cb6:	1064      	asrs	r4, r4, #1
 8002cb8:	3508      	adds	r5, #8
 8002cba:	e73f      	b.n	8002b3c <_dtoa_r+0x394>
 8002cbc:	2602      	movs	r6, #2
 8002cbe:	e742      	b.n	8002b46 <_dtoa_r+0x39e>
 8002cc0:	9c07      	ldr	r4, [sp, #28]
 8002cc2:	9704      	str	r7, [sp, #16]
 8002cc4:	e761      	b.n	8002b8a <_dtoa_r+0x3e2>
 8002cc6:	bf00      	nop
 8002cc8:	08004960 	.word	0x08004960
 8002ccc:	08004938 	.word	0x08004938
 8002cd0:	3ff00000 	.word	0x3ff00000
 8002cd4:	40240000 	.word	0x40240000
 8002cd8:	401c0000 	.word	0x401c0000
 8002cdc:	40140000 	.word	0x40140000
 8002ce0:	4b70      	ldr	r3, [pc, #448]	@ (8002ea4 <_dtoa_r+0x6fc>)
 8002ce2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8002ce4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002ce8:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002cec:	4454      	add	r4, sl
 8002cee:	2900      	cmp	r1, #0
 8002cf0:	d045      	beq.n	8002d7e <_dtoa_r+0x5d6>
 8002cf2:	2000      	movs	r0, #0
 8002cf4:	496c      	ldr	r1, [pc, #432]	@ (8002ea8 <_dtoa_r+0x700>)
 8002cf6:	f7fd fdcd 	bl	8000894 <__aeabi_ddiv>
 8002cfa:	4633      	mov	r3, r6
 8002cfc:	462a      	mov	r2, r5
 8002cfe:	f7fd fae7 	bl	80002d0 <__aeabi_dsub>
 8002d02:	4656      	mov	r6, sl
 8002d04:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002d08:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d0c:	f7fd ff48 	bl	8000ba0 <__aeabi_d2iz>
 8002d10:	4605      	mov	r5, r0
 8002d12:	f7fd fc2b 	bl	800056c <__aeabi_i2d>
 8002d16:	4602      	mov	r2, r0
 8002d18:	460b      	mov	r3, r1
 8002d1a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d1e:	f7fd fad7 	bl	80002d0 <__aeabi_dsub>
 8002d22:	4602      	mov	r2, r0
 8002d24:	460b      	mov	r3, r1
 8002d26:	3530      	adds	r5, #48	@ 0x30
 8002d28:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002d2c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002d30:	f806 5b01 	strb.w	r5, [r6], #1
 8002d34:	f7fd fef6 	bl	8000b24 <__aeabi_dcmplt>
 8002d38:	2800      	cmp	r0, #0
 8002d3a:	d163      	bne.n	8002e04 <_dtoa_r+0x65c>
 8002d3c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002d40:	2000      	movs	r0, #0
 8002d42:	495a      	ldr	r1, [pc, #360]	@ (8002eac <_dtoa_r+0x704>)
 8002d44:	f7fd fac4 	bl	80002d0 <__aeabi_dsub>
 8002d48:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002d4c:	f7fd feea 	bl	8000b24 <__aeabi_dcmplt>
 8002d50:	2800      	cmp	r0, #0
 8002d52:	f040 8087 	bne.w	8002e64 <_dtoa_r+0x6bc>
 8002d56:	42a6      	cmp	r6, r4
 8002d58:	f43f af43 	beq.w	8002be2 <_dtoa_r+0x43a>
 8002d5c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002d60:	2200      	movs	r2, #0
 8002d62:	4b53      	ldr	r3, [pc, #332]	@ (8002eb0 <_dtoa_r+0x708>)
 8002d64:	f7fd fc6c 	bl	8000640 <__aeabi_dmul>
 8002d68:	2200      	movs	r2, #0
 8002d6a:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002d6e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d72:	4b4f      	ldr	r3, [pc, #316]	@ (8002eb0 <_dtoa_r+0x708>)
 8002d74:	f7fd fc64 	bl	8000640 <__aeabi_dmul>
 8002d78:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002d7c:	e7c4      	b.n	8002d08 <_dtoa_r+0x560>
 8002d7e:	4631      	mov	r1, r6
 8002d80:	4628      	mov	r0, r5
 8002d82:	f7fd fc5d 	bl	8000640 <__aeabi_dmul>
 8002d86:	4656      	mov	r6, sl
 8002d88:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002d8c:	9413      	str	r4, [sp, #76]	@ 0x4c
 8002d8e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002d92:	f7fd ff05 	bl	8000ba0 <__aeabi_d2iz>
 8002d96:	4605      	mov	r5, r0
 8002d98:	f7fd fbe8 	bl	800056c <__aeabi_i2d>
 8002d9c:	4602      	mov	r2, r0
 8002d9e:	460b      	mov	r3, r1
 8002da0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002da4:	f7fd fa94 	bl	80002d0 <__aeabi_dsub>
 8002da8:	4602      	mov	r2, r0
 8002daa:	460b      	mov	r3, r1
 8002dac:	3530      	adds	r5, #48	@ 0x30
 8002dae:	f806 5b01 	strb.w	r5, [r6], #1
 8002db2:	42a6      	cmp	r6, r4
 8002db4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002db8:	f04f 0200 	mov.w	r2, #0
 8002dbc:	d124      	bne.n	8002e08 <_dtoa_r+0x660>
 8002dbe:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002dc2:	4b39      	ldr	r3, [pc, #228]	@ (8002ea8 <_dtoa_r+0x700>)
 8002dc4:	f7fd fa86 	bl	80002d4 <__adddf3>
 8002dc8:	4602      	mov	r2, r0
 8002dca:	460b      	mov	r3, r1
 8002dcc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002dd0:	f7fd fec6 	bl	8000b60 <__aeabi_dcmpgt>
 8002dd4:	2800      	cmp	r0, #0
 8002dd6:	d145      	bne.n	8002e64 <_dtoa_r+0x6bc>
 8002dd8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002ddc:	2000      	movs	r0, #0
 8002dde:	4932      	ldr	r1, [pc, #200]	@ (8002ea8 <_dtoa_r+0x700>)
 8002de0:	f7fd fa76 	bl	80002d0 <__aeabi_dsub>
 8002de4:	4602      	mov	r2, r0
 8002de6:	460b      	mov	r3, r1
 8002de8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002dec:	f7fd fe9a 	bl	8000b24 <__aeabi_dcmplt>
 8002df0:	2800      	cmp	r0, #0
 8002df2:	f43f aef6 	beq.w	8002be2 <_dtoa_r+0x43a>
 8002df6:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8002df8:	1e73      	subs	r3, r6, #1
 8002dfa:	9313      	str	r3, [sp, #76]	@ 0x4c
 8002dfc:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8002e00:	2b30      	cmp	r3, #48	@ 0x30
 8002e02:	d0f8      	beq.n	8002df6 <_dtoa_r+0x64e>
 8002e04:	9f04      	ldr	r7, [sp, #16]
 8002e06:	e73f      	b.n	8002c88 <_dtoa_r+0x4e0>
 8002e08:	4b29      	ldr	r3, [pc, #164]	@ (8002eb0 <_dtoa_r+0x708>)
 8002e0a:	f7fd fc19 	bl	8000640 <__aeabi_dmul>
 8002e0e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002e12:	e7bc      	b.n	8002d8e <_dtoa_r+0x5e6>
 8002e14:	d10c      	bne.n	8002e30 <_dtoa_r+0x688>
 8002e16:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002e1a:	2200      	movs	r2, #0
 8002e1c:	4b25      	ldr	r3, [pc, #148]	@ (8002eb4 <_dtoa_r+0x70c>)
 8002e1e:	f7fd fc0f 	bl	8000640 <__aeabi_dmul>
 8002e22:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002e26:	f7fd fe91 	bl	8000b4c <__aeabi_dcmpge>
 8002e2a:	2800      	cmp	r0, #0
 8002e2c:	f000 815b 	beq.w	80030e6 <_dtoa_r+0x93e>
 8002e30:	2400      	movs	r4, #0
 8002e32:	4625      	mov	r5, r4
 8002e34:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002e36:	4656      	mov	r6, sl
 8002e38:	43db      	mvns	r3, r3
 8002e3a:	9304      	str	r3, [sp, #16]
 8002e3c:	2700      	movs	r7, #0
 8002e3e:	4621      	mov	r1, r4
 8002e40:	4658      	mov	r0, fp
 8002e42:	f000 fbb7 	bl	80035b4 <_Bfree>
 8002e46:	2d00      	cmp	r5, #0
 8002e48:	d0dc      	beq.n	8002e04 <_dtoa_r+0x65c>
 8002e4a:	b12f      	cbz	r7, 8002e58 <_dtoa_r+0x6b0>
 8002e4c:	42af      	cmp	r7, r5
 8002e4e:	d003      	beq.n	8002e58 <_dtoa_r+0x6b0>
 8002e50:	4639      	mov	r1, r7
 8002e52:	4658      	mov	r0, fp
 8002e54:	f000 fbae 	bl	80035b4 <_Bfree>
 8002e58:	4629      	mov	r1, r5
 8002e5a:	4658      	mov	r0, fp
 8002e5c:	f000 fbaa 	bl	80035b4 <_Bfree>
 8002e60:	e7d0      	b.n	8002e04 <_dtoa_r+0x65c>
 8002e62:	9704      	str	r7, [sp, #16]
 8002e64:	4633      	mov	r3, r6
 8002e66:	461e      	mov	r6, r3
 8002e68:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002e6c:	2a39      	cmp	r2, #57	@ 0x39
 8002e6e:	d107      	bne.n	8002e80 <_dtoa_r+0x6d8>
 8002e70:	459a      	cmp	sl, r3
 8002e72:	d1f8      	bne.n	8002e66 <_dtoa_r+0x6be>
 8002e74:	9a04      	ldr	r2, [sp, #16]
 8002e76:	3201      	adds	r2, #1
 8002e78:	9204      	str	r2, [sp, #16]
 8002e7a:	2230      	movs	r2, #48	@ 0x30
 8002e7c:	f88a 2000 	strb.w	r2, [sl]
 8002e80:	781a      	ldrb	r2, [r3, #0]
 8002e82:	3201      	adds	r2, #1
 8002e84:	701a      	strb	r2, [r3, #0]
 8002e86:	e7bd      	b.n	8002e04 <_dtoa_r+0x65c>
 8002e88:	2200      	movs	r2, #0
 8002e8a:	4b09      	ldr	r3, [pc, #36]	@ (8002eb0 <_dtoa_r+0x708>)
 8002e8c:	f7fd fbd8 	bl	8000640 <__aeabi_dmul>
 8002e90:	2200      	movs	r2, #0
 8002e92:	2300      	movs	r3, #0
 8002e94:	4604      	mov	r4, r0
 8002e96:	460d      	mov	r5, r1
 8002e98:	f7fd fe3a 	bl	8000b10 <__aeabi_dcmpeq>
 8002e9c:	2800      	cmp	r0, #0
 8002e9e:	f43f aebc 	beq.w	8002c1a <_dtoa_r+0x472>
 8002ea2:	e6f1      	b.n	8002c88 <_dtoa_r+0x4e0>
 8002ea4:	08004960 	.word	0x08004960
 8002ea8:	3fe00000 	.word	0x3fe00000
 8002eac:	3ff00000 	.word	0x3ff00000
 8002eb0:	40240000 	.word	0x40240000
 8002eb4:	40140000 	.word	0x40140000
 8002eb8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8002eba:	2a00      	cmp	r2, #0
 8002ebc:	f000 80db 	beq.w	8003076 <_dtoa_r+0x8ce>
 8002ec0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8002ec2:	2a01      	cmp	r2, #1
 8002ec4:	f300 80bf 	bgt.w	8003046 <_dtoa_r+0x89e>
 8002ec8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8002eca:	2a00      	cmp	r2, #0
 8002ecc:	f000 80b7 	beq.w	800303e <_dtoa_r+0x896>
 8002ed0:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8002ed4:	4646      	mov	r6, r8
 8002ed6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002ed8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002eda:	2101      	movs	r1, #1
 8002edc:	441a      	add	r2, r3
 8002ede:	4658      	mov	r0, fp
 8002ee0:	4498      	add	r8, r3
 8002ee2:	9209      	str	r2, [sp, #36]	@ 0x24
 8002ee4:	f000 fc1a 	bl	800371c <__i2b>
 8002ee8:	4605      	mov	r5, r0
 8002eea:	b15e      	cbz	r6, 8002f04 <_dtoa_r+0x75c>
 8002eec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002eee:	2b00      	cmp	r3, #0
 8002ef0:	dd08      	ble.n	8002f04 <_dtoa_r+0x75c>
 8002ef2:	42b3      	cmp	r3, r6
 8002ef4:	bfa8      	it	ge
 8002ef6:	4633      	movge	r3, r6
 8002ef8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002efa:	eba8 0803 	sub.w	r8, r8, r3
 8002efe:	1af6      	subs	r6, r6, r3
 8002f00:	1ad3      	subs	r3, r2, r3
 8002f02:	9309      	str	r3, [sp, #36]	@ 0x24
 8002f04:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002f06:	b1f3      	cbz	r3, 8002f46 <_dtoa_r+0x79e>
 8002f08:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002f0a:	2b00      	cmp	r3, #0
 8002f0c:	f000 80b7 	beq.w	800307e <_dtoa_r+0x8d6>
 8002f10:	b18c      	cbz	r4, 8002f36 <_dtoa_r+0x78e>
 8002f12:	4629      	mov	r1, r5
 8002f14:	4622      	mov	r2, r4
 8002f16:	4658      	mov	r0, fp
 8002f18:	f000 fcbe 	bl	8003898 <__pow5mult>
 8002f1c:	464a      	mov	r2, r9
 8002f1e:	4601      	mov	r1, r0
 8002f20:	4605      	mov	r5, r0
 8002f22:	4658      	mov	r0, fp
 8002f24:	f000 fc10 	bl	8003748 <__multiply>
 8002f28:	4649      	mov	r1, r9
 8002f2a:	9004      	str	r0, [sp, #16]
 8002f2c:	4658      	mov	r0, fp
 8002f2e:	f000 fb41 	bl	80035b4 <_Bfree>
 8002f32:	9b04      	ldr	r3, [sp, #16]
 8002f34:	4699      	mov	r9, r3
 8002f36:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002f38:	1b1a      	subs	r2, r3, r4
 8002f3a:	d004      	beq.n	8002f46 <_dtoa_r+0x79e>
 8002f3c:	4649      	mov	r1, r9
 8002f3e:	4658      	mov	r0, fp
 8002f40:	f000 fcaa 	bl	8003898 <__pow5mult>
 8002f44:	4681      	mov	r9, r0
 8002f46:	2101      	movs	r1, #1
 8002f48:	4658      	mov	r0, fp
 8002f4a:	f000 fbe7 	bl	800371c <__i2b>
 8002f4e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002f50:	4604      	mov	r4, r0
 8002f52:	2b00      	cmp	r3, #0
 8002f54:	f000 81c9 	beq.w	80032ea <_dtoa_r+0xb42>
 8002f58:	461a      	mov	r2, r3
 8002f5a:	4601      	mov	r1, r0
 8002f5c:	4658      	mov	r0, fp
 8002f5e:	f000 fc9b 	bl	8003898 <__pow5mult>
 8002f62:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002f64:	4604      	mov	r4, r0
 8002f66:	2b01      	cmp	r3, #1
 8002f68:	f300 808f 	bgt.w	800308a <_dtoa_r+0x8e2>
 8002f6c:	9b02      	ldr	r3, [sp, #8]
 8002f6e:	2b00      	cmp	r3, #0
 8002f70:	f040 8087 	bne.w	8003082 <_dtoa_r+0x8da>
 8002f74:	9b03      	ldr	r3, [sp, #12]
 8002f76:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002f7a:	2b00      	cmp	r3, #0
 8002f7c:	f040 8083 	bne.w	8003086 <_dtoa_r+0x8de>
 8002f80:	9b03      	ldr	r3, [sp, #12]
 8002f82:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002f86:	0d1b      	lsrs	r3, r3, #20
 8002f88:	051b      	lsls	r3, r3, #20
 8002f8a:	b12b      	cbz	r3, 8002f98 <_dtoa_r+0x7f0>
 8002f8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002f8e:	f108 0801 	add.w	r8, r8, #1
 8002f92:	3301      	adds	r3, #1
 8002f94:	9309      	str	r3, [sp, #36]	@ 0x24
 8002f96:	2301      	movs	r3, #1
 8002f98:	930a      	str	r3, [sp, #40]	@ 0x28
 8002f9a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002f9c:	2b00      	cmp	r3, #0
 8002f9e:	f000 81aa 	beq.w	80032f6 <_dtoa_r+0xb4e>
 8002fa2:	6923      	ldr	r3, [r4, #16]
 8002fa4:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002fa8:	6918      	ldr	r0, [r3, #16]
 8002faa:	f000 fb6b 	bl	8003684 <__hi0bits>
 8002fae:	f1c0 0020 	rsb	r0, r0, #32
 8002fb2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002fb4:	4418      	add	r0, r3
 8002fb6:	f010 001f 	ands.w	r0, r0, #31
 8002fba:	d071      	beq.n	80030a0 <_dtoa_r+0x8f8>
 8002fbc:	f1c0 0320 	rsb	r3, r0, #32
 8002fc0:	2b04      	cmp	r3, #4
 8002fc2:	dd65      	ble.n	8003090 <_dtoa_r+0x8e8>
 8002fc4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002fc6:	f1c0 001c 	rsb	r0, r0, #28
 8002fca:	4403      	add	r3, r0
 8002fcc:	4480      	add	r8, r0
 8002fce:	4406      	add	r6, r0
 8002fd0:	9309      	str	r3, [sp, #36]	@ 0x24
 8002fd2:	f1b8 0f00 	cmp.w	r8, #0
 8002fd6:	dd05      	ble.n	8002fe4 <_dtoa_r+0x83c>
 8002fd8:	4649      	mov	r1, r9
 8002fda:	4642      	mov	r2, r8
 8002fdc:	4658      	mov	r0, fp
 8002fde:	f000 fcb5 	bl	800394c <__lshift>
 8002fe2:	4681      	mov	r9, r0
 8002fe4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002fe6:	2b00      	cmp	r3, #0
 8002fe8:	dd05      	ble.n	8002ff6 <_dtoa_r+0x84e>
 8002fea:	4621      	mov	r1, r4
 8002fec:	461a      	mov	r2, r3
 8002fee:	4658      	mov	r0, fp
 8002ff0:	f000 fcac 	bl	800394c <__lshift>
 8002ff4:	4604      	mov	r4, r0
 8002ff6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002ff8:	2b00      	cmp	r3, #0
 8002ffa:	d053      	beq.n	80030a4 <_dtoa_r+0x8fc>
 8002ffc:	4621      	mov	r1, r4
 8002ffe:	4648      	mov	r0, r9
 8003000:	f000 fd10 	bl	8003a24 <__mcmp>
 8003004:	2800      	cmp	r0, #0
 8003006:	da4d      	bge.n	80030a4 <_dtoa_r+0x8fc>
 8003008:	1e7b      	subs	r3, r7, #1
 800300a:	4649      	mov	r1, r9
 800300c:	9304      	str	r3, [sp, #16]
 800300e:	220a      	movs	r2, #10
 8003010:	2300      	movs	r3, #0
 8003012:	4658      	mov	r0, fp
 8003014:	f000 faf0 	bl	80035f8 <__multadd>
 8003018:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800301a:	4681      	mov	r9, r0
 800301c:	2b00      	cmp	r3, #0
 800301e:	f000 816c 	beq.w	80032fa <_dtoa_r+0xb52>
 8003022:	2300      	movs	r3, #0
 8003024:	4629      	mov	r1, r5
 8003026:	220a      	movs	r2, #10
 8003028:	4658      	mov	r0, fp
 800302a:	f000 fae5 	bl	80035f8 <__multadd>
 800302e:	9b08      	ldr	r3, [sp, #32]
 8003030:	4605      	mov	r5, r0
 8003032:	2b00      	cmp	r3, #0
 8003034:	dc61      	bgt.n	80030fa <_dtoa_r+0x952>
 8003036:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003038:	2b02      	cmp	r3, #2
 800303a:	dc3b      	bgt.n	80030b4 <_dtoa_r+0x90c>
 800303c:	e05d      	b.n	80030fa <_dtoa_r+0x952>
 800303e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8003040:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8003044:	e746      	b.n	8002ed4 <_dtoa_r+0x72c>
 8003046:	9b07      	ldr	r3, [sp, #28]
 8003048:	1e5c      	subs	r4, r3, #1
 800304a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800304c:	42a3      	cmp	r3, r4
 800304e:	bfbf      	itttt	lt
 8003050:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8003052:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 8003054:	1ae3      	sublt	r3, r4, r3
 8003056:	18d2      	addlt	r2, r2, r3
 8003058:	bfa8      	it	ge
 800305a:	1b1c      	subge	r4, r3, r4
 800305c:	9b07      	ldr	r3, [sp, #28]
 800305e:	bfbe      	ittt	lt
 8003060:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8003062:	920e      	strlt	r2, [sp, #56]	@ 0x38
 8003064:	2400      	movlt	r4, #0
 8003066:	2b00      	cmp	r3, #0
 8003068:	bfb5      	itete	lt
 800306a:	eba8 0603 	sublt.w	r6, r8, r3
 800306e:	4646      	movge	r6, r8
 8003070:	2300      	movlt	r3, #0
 8003072:	9b07      	ldrge	r3, [sp, #28]
 8003074:	e730      	b.n	8002ed8 <_dtoa_r+0x730>
 8003076:	4646      	mov	r6, r8
 8003078:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800307a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 800307c:	e735      	b.n	8002eea <_dtoa_r+0x742>
 800307e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003080:	e75c      	b.n	8002f3c <_dtoa_r+0x794>
 8003082:	2300      	movs	r3, #0
 8003084:	e788      	b.n	8002f98 <_dtoa_r+0x7f0>
 8003086:	9b02      	ldr	r3, [sp, #8]
 8003088:	e786      	b.n	8002f98 <_dtoa_r+0x7f0>
 800308a:	2300      	movs	r3, #0
 800308c:	930a      	str	r3, [sp, #40]	@ 0x28
 800308e:	e788      	b.n	8002fa2 <_dtoa_r+0x7fa>
 8003090:	d09f      	beq.n	8002fd2 <_dtoa_r+0x82a>
 8003092:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003094:	331c      	adds	r3, #28
 8003096:	441a      	add	r2, r3
 8003098:	4498      	add	r8, r3
 800309a:	441e      	add	r6, r3
 800309c:	9209      	str	r2, [sp, #36]	@ 0x24
 800309e:	e798      	b.n	8002fd2 <_dtoa_r+0x82a>
 80030a0:	4603      	mov	r3, r0
 80030a2:	e7f6      	b.n	8003092 <_dtoa_r+0x8ea>
 80030a4:	9b07      	ldr	r3, [sp, #28]
 80030a6:	9704      	str	r7, [sp, #16]
 80030a8:	2b00      	cmp	r3, #0
 80030aa:	dc20      	bgt.n	80030ee <_dtoa_r+0x946>
 80030ac:	9308      	str	r3, [sp, #32]
 80030ae:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80030b0:	2b02      	cmp	r3, #2
 80030b2:	dd1e      	ble.n	80030f2 <_dtoa_r+0x94a>
 80030b4:	9b08      	ldr	r3, [sp, #32]
 80030b6:	2b00      	cmp	r3, #0
 80030b8:	f47f aebc 	bne.w	8002e34 <_dtoa_r+0x68c>
 80030bc:	4621      	mov	r1, r4
 80030be:	2205      	movs	r2, #5
 80030c0:	4658      	mov	r0, fp
 80030c2:	f000 fa99 	bl	80035f8 <__multadd>
 80030c6:	4601      	mov	r1, r0
 80030c8:	4604      	mov	r4, r0
 80030ca:	4648      	mov	r0, r9
 80030cc:	f000 fcaa 	bl	8003a24 <__mcmp>
 80030d0:	2800      	cmp	r0, #0
 80030d2:	f77f aeaf 	ble.w	8002e34 <_dtoa_r+0x68c>
 80030d6:	2331      	movs	r3, #49	@ 0x31
 80030d8:	4656      	mov	r6, sl
 80030da:	f806 3b01 	strb.w	r3, [r6], #1
 80030de:	9b04      	ldr	r3, [sp, #16]
 80030e0:	3301      	adds	r3, #1
 80030e2:	9304      	str	r3, [sp, #16]
 80030e4:	e6aa      	b.n	8002e3c <_dtoa_r+0x694>
 80030e6:	9c07      	ldr	r4, [sp, #28]
 80030e8:	9704      	str	r7, [sp, #16]
 80030ea:	4625      	mov	r5, r4
 80030ec:	e7f3      	b.n	80030d6 <_dtoa_r+0x92e>
 80030ee:	9b07      	ldr	r3, [sp, #28]
 80030f0:	9308      	str	r3, [sp, #32]
 80030f2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80030f4:	2b00      	cmp	r3, #0
 80030f6:	f000 8104 	beq.w	8003302 <_dtoa_r+0xb5a>
 80030fa:	2e00      	cmp	r6, #0
 80030fc:	dd05      	ble.n	800310a <_dtoa_r+0x962>
 80030fe:	4629      	mov	r1, r5
 8003100:	4632      	mov	r2, r6
 8003102:	4658      	mov	r0, fp
 8003104:	f000 fc22 	bl	800394c <__lshift>
 8003108:	4605      	mov	r5, r0
 800310a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800310c:	2b00      	cmp	r3, #0
 800310e:	d05a      	beq.n	80031c6 <_dtoa_r+0xa1e>
 8003110:	4658      	mov	r0, fp
 8003112:	6869      	ldr	r1, [r5, #4]
 8003114:	f000 fa0e 	bl	8003534 <_Balloc>
 8003118:	4606      	mov	r6, r0
 800311a:	b928      	cbnz	r0, 8003128 <_dtoa_r+0x980>
 800311c:	4602      	mov	r2, r0
 800311e:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8003122:	4b83      	ldr	r3, [pc, #524]	@ (8003330 <_dtoa_r+0xb88>)
 8003124:	f7ff bb54 	b.w	80027d0 <_dtoa_r+0x28>
 8003128:	692a      	ldr	r2, [r5, #16]
 800312a:	f105 010c 	add.w	r1, r5, #12
 800312e:	3202      	adds	r2, #2
 8003130:	0092      	lsls	r2, r2, #2
 8003132:	300c      	adds	r0, #12
 8003134:	f000 ffa8 	bl	8004088 <memcpy>
 8003138:	2201      	movs	r2, #1
 800313a:	4631      	mov	r1, r6
 800313c:	4658      	mov	r0, fp
 800313e:	f000 fc05 	bl	800394c <__lshift>
 8003142:	462f      	mov	r7, r5
 8003144:	4605      	mov	r5, r0
 8003146:	f10a 0301 	add.w	r3, sl, #1
 800314a:	9307      	str	r3, [sp, #28]
 800314c:	9b08      	ldr	r3, [sp, #32]
 800314e:	4453      	add	r3, sl
 8003150:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003152:	9b02      	ldr	r3, [sp, #8]
 8003154:	f003 0301 	and.w	r3, r3, #1
 8003158:	930a      	str	r3, [sp, #40]	@ 0x28
 800315a:	9b07      	ldr	r3, [sp, #28]
 800315c:	4621      	mov	r1, r4
 800315e:	3b01      	subs	r3, #1
 8003160:	4648      	mov	r0, r9
 8003162:	9302      	str	r3, [sp, #8]
 8003164:	f7ff fa97 	bl	8002696 <quorem>
 8003168:	4639      	mov	r1, r7
 800316a:	9008      	str	r0, [sp, #32]
 800316c:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8003170:	4648      	mov	r0, r9
 8003172:	f000 fc57 	bl	8003a24 <__mcmp>
 8003176:	462a      	mov	r2, r5
 8003178:	9009      	str	r0, [sp, #36]	@ 0x24
 800317a:	4621      	mov	r1, r4
 800317c:	4658      	mov	r0, fp
 800317e:	f000 fc6d 	bl	8003a5c <__mdiff>
 8003182:	68c2      	ldr	r2, [r0, #12]
 8003184:	4606      	mov	r6, r0
 8003186:	bb02      	cbnz	r2, 80031ca <_dtoa_r+0xa22>
 8003188:	4601      	mov	r1, r0
 800318a:	4648      	mov	r0, r9
 800318c:	f000 fc4a 	bl	8003a24 <__mcmp>
 8003190:	4602      	mov	r2, r0
 8003192:	4631      	mov	r1, r6
 8003194:	4658      	mov	r0, fp
 8003196:	920c      	str	r2, [sp, #48]	@ 0x30
 8003198:	f000 fa0c 	bl	80035b4 <_Bfree>
 800319c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800319e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80031a0:	9e07      	ldr	r6, [sp, #28]
 80031a2:	ea43 0102 	orr.w	r1, r3, r2
 80031a6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80031a8:	4319      	orrs	r1, r3
 80031aa:	d110      	bne.n	80031ce <_dtoa_r+0xa26>
 80031ac:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80031b0:	d029      	beq.n	8003206 <_dtoa_r+0xa5e>
 80031b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80031b4:	2b00      	cmp	r3, #0
 80031b6:	dd02      	ble.n	80031be <_dtoa_r+0xa16>
 80031b8:	9b08      	ldr	r3, [sp, #32]
 80031ba:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 80031be:	9b02      	ldr	r3, [sp, #8]
 80031c0:	f883 8000 	strb.w	r8, [r3]
 80031c4:	e63b      	b.n	8002e3e <_dtoa_r+0x696>
 80031c6:	4628      	mov	r0, r5
 80031c8:	e7bb      	b.n	8003142 <_dtoa_r+0x99a>
 80031ca:	2201      	movs	r2, #1
 80031cc:	e7e1      	b.n	8003192 <_dtoa_r+0x9ea>
 80031ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80031d0:	2b00      	cmp	r3, #0
 80031d2:	db04      	blt.n	80031de <_dtoa_r+0xa36>
 80031d4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80031d6:	430b      	orrs	r3, r1
 80031d8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80031da:	430b      	orrs	r3, r1
 80031dc:	d120      	bne.n	8003220 <_dtoa_r+0xa78>
 80031de:	2a00      	cmp	r2, #0
 80031e0:	dded      	ble.n	80031be <_dtoa_r+0xa16>
 80031e2:	4649      	mov	r1, r9
 80031e4:	2201      	movs	r2, #1
 80031e6:	4658      	mov	r0, fp
 80031e8:	f000 fbb0 	bl	800394c <__lshift>
 80031ec:	4621      	mov	r1, r4
 80031ee:	4681      	mov	r9, r0
 80031f0:	f000 fc18 	bl	8003a24 <__mcmp>
 80031f4:	2800      	cmp	r0, #0
 80031f6:	dc03      	bgt.n	8003200 <_dtoa_r+0xa58>
 80031f8:	d1e1      	bne.n	80031be <_dtoa_r+0xa16>
 80031fa:	f018 0f01 	tst.w	r8, #1
 80031fe:	d0de      	beq.n	80031be <_dtoa_r+0xa16>
 8003200:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003204:	d1d8      	bne.n	80031b8 <_dtoa_r+0xa10>
 8003206:	2339      	movs	r3, #57	@ 0x39
 8003208:	9a02      	ldr	r2, [sp, #8]
 800320a:	7013      	strb	r3, [r2, #0]
 800320c:	4633      	mov	r3, r6
 800320e:	461e      	mov	r6, r3
 8003210:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8003214:	3b01      	subs	r3, #1
 8003216:	2a39      	cmp	r2, #57	@ 0x39
 8003218:	d052      	beq.n	80032c0 <_dtoa_r+0xb18>
 800321a:	3201      	adds	r2, #1
 800321c:	701a      	strb	r2, [r3, #0]
 800321e:	e60e      	b.n	8002e3e <_dtoa_r+0x696>
 8003220:	2a00      	cmp	r2, #0
 8003222:	dd07      	ble.n	8003234 <_dtoa_r+0xa8c>
 8003224:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003228:	d0ed      	beq.n	8003206 <_dtoa_r+0xa5e>
 800322a:	9a02      	ldr	r2, [sp, #8]
 800322c:	f108 0301 	add.w	r3, r8, #1
 8003230:	7013      	strb	r3, [r2, #0]
 8003232:	e604      	b.n	8002e3e <_dtoa_r+0x696>
 8003234:	9b07      	ldr	r3, [sp, #28]
 8003236:	9a07      	ldr	r2, [sp, #28]
 8003238:	f803 8c01 	strb.w	r8, [r3, #-1]
 800323c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800323e:	4293      	cmp	r3, r2
 8003240:	d028      	beq.n	8003294 <_dtoa_r+0xaec>
 8003242:	4649      	mov	r1, r9
 8003244:	2300      	movs	r3, #0
 8003246:	220a      	movs	r2, #10
 8003248:	4658      	mov	r0, fp
 800324a:	f000 f9d5 	bl	80035f8 <__multadd>
 800324e:	42af      	cmp	r7, r5
 8003250:	4681      	mov	r9, r0
 8003252:	f04f 0300 	mov.w	r3, #0
 8003256:	f04f 020a 	mov.w	r2, #10
 800325a:	4639      	mov	r1, r7
 800325c:	4658      	mov	r0, fp
 800325e:	d107      	bne.n	8003270 <_dtoa_r+0xac8>
 8003260:	f000 f9ca 	bl	80035f8 <__multadd>
 8003264:	4607      	mov	r7, r0
 8003266:	4605      	mov	r5, r0
 8003268:	9b07      	ldr	r3, [sp, #28]
 800326a:	3301      	adds	r3, #1
 800326c:	9307      	str	r3, [sp, #28]
 800326e:	e774      	b.n	800315a <_dtoa_r+0x9b2>
 8003270:	f000 f9c2 	bl	80035f8 <__multadd>
 8003274:	4629      	mov	r1, r5
 8003276:	4607      	mov	r7, r0
 8003278:	2300      	movs	r3, #0
 800327a:	220a      	movs	r2, #10
 800327c:	4658      	mov	r0, fp
 800327e:	f000 f9bb 	bl	80035f8 <__multadd>
 8003282:	4605      	mov	r5, r0
 8003284:	e7f0      	b.n	8003268 <_dtoa_r+0xac0>
 8003286:	9b08      	ldr	r3, [sp, #32]
 8003288:	2700      	movs	r7, #0
 800328a:	2b00      	cmp	r3, #0
 800328c:	bfcc      	ite	gt
 800328e:	461e      	movgt	r6, r3
 8003290:	2601      	movle	r6, #1
 8003292:	4456      	add	r6, sl
 8003294:	4649      	mov	r1, r9
 8003296:	2201      	movs	r2, #1
 8003298:	4658      	mov	r0, fp
 800329a:	f000 fb57 	bl	800394c <__lshift>
 800329e:	4621      	mov	r1, r4
 80032a0:	4681      	mov	r9, r0
 80032a2:	f000 fbbf 	bl	8003a24 <__mcmp>
 80032a6:	2800      	cmp	r0, #0
 80032a8:	dcb0      	bgt.n	800320c <_dtoa_r+0xa64>
 80032aa:	d102      	bne.n	80032b2 <_dtoa_r+0xb0a>
 80032ac:	f018 0f01 	tst.w	r8, #1
 80032b0:	d1ac      	bne.n	800320c <_dtoa_r+0xa64>
 80032b2:	4633      	mov	r3, r6
 80032b4:	461e      	mov	r6, r3
 80032b6:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80032ba:	2a30      	cmp	r2, #48	@ 0x30
 80032bc:	d0fa      	beq.n	80032b4 <_dtoa_r+0xb0c>
 80032be:	e5be      	b.n	8002e3e <_dtoa_r+0x696>
 80032c0:	459a      	cmp	sl, r3
 80032c2:	d1a4      	bne.n	800320e <_dtoa_r+0xa66>
 80032c4:	9b04      	ldr	r3, [sp, #16]
 80032c6:	3301      	adds	r3, #1
 80032c8:	9304      	str	r3, [sp, #16]
 80032ca:	2331      	movs	r3, #49	@ 0x31
 80032cc:	f88a 3000 	strb.w	r3, [sl]
 80032d0:	e5b5      	b.n	8002e3e <_dtoa_r+0x696>
 80032d2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80032d4:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8003334 <_dtoa_r+0xb8c>
 80032d8:	b11b      	cbz	r3, 80032e2 <_dtoa_r+0xb3a>
 80032da:	f10a 0308 	add.w	r3, sl, #8
 80032de:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80032e0:	6013      	str	r3, [r2, #0]
 80032e2:	4650      	mov	r0, sl
 80032e4:	b017      	add	sp, #92	@ 0x5c
 80032e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032ea:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80032ec:	2b01      	cmp	r3, #1
 80032ee:	f77f ae3d 	ble.w	8002f6c <_dtoa_r+0x7c4>
 80032f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80032f4:	930a      	str	r3, [sp, #40]	@ 0x28
 80032f6:	2001      	movs	r0, #1
 80032f8:	e65b      	b.n	8002fb2 <_dtoa_r+0x80a>
 80032fa:	9b08      	ldr	r3, [sp, #32]
 80032fc:	2b00      	cmp	r3, #0
 80032fe:	f77f aed6 	ble.w	80030ae <_dtoa_r+0x906>
 8003302:	4656      	mov	r6, sl
 8003304:	4621      	mov	r1, r4
 8003306:	4648      	mov	r0, r9
 8003308:	f7ff f9c5 	bl	8002696 <quorem>
 800330c:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8003310:	9b08      	ldr	r3, [sp, #32]
 8003312:	f806 8b01 	strb.w	r8, [r6], #1
 8003316:	eba6 020a 	sub.w	r2, r6, sl
 800331a:	4293      	cmp	r3, r2
 800331c:	ddb3      	ble.n	8003286 <_dtoa_r+0xade>
 800331e:	4649      	mov	r1, r9
 8003320:	2300      	movs	r3, #0
 8003322:	220a      	movs	r2, #10
 8003324:	4658      	mov	r0, fp
 8003326:	f000 f967 	bl	80035f8 <__multadd>
 800332a:	4681      	mov	r9, r0
 800332c:	e7ea      	b.n	8003304 <_dtoa_r+0xb5c>
 800332e:	bf00      	nop
 8003330:	080048c2 	.word	0x080048c2
 8003334:	08004846 	.word	0x08004846

08003338 <_free_r>:
 8003338:	b538      	push	{r3, r4, r5, lr}
 800333a:	4605      	mov	r5, r0
 800333c:	2900      	cmp	r1, #0
 800333e:	d040      	beq.n	80033c2 <_free_r+0x8a>
 8003340:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003344:	1f0c      	subs	r4, r1, #4
 8003346:	2b00      	cmp	r3, #0
 8003348:	bfb8      	it	lt
 800334a:	18e4      	addlt	r4, r4, r3
 800334c:	f000 f8e6 	bl	800351c <__malloc_lock>
 8003350:	4a1c      	ldr	r2, [pc, #112]	@ (80033c4 <_free_r+0x8c>)
 8003352:	6813      	ldr	r3, [r2, #0]
 8003354:	b933      	cbnz	r3, 8003364 <_free_r+0x2c>
 8003356:	6063      	str	r3, [r4, #4]
 8003358:	6014      	str	r4, [r2, #0]
 800335a:	4628      	mov	r0, r5
 800335c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003360:	f000 b8e2 	b.w	8003528 <__malloc_unlock>
 8003364:	42a3      	cmp	r3, r4
 8003366:	d908      	bls.n	800337a <_free_r+0x42>
 8003368:	6820      	ldr	r0, [r4, #0]
 800336a:	1821      	adds	r1, r4, r0
 800336c:	428b      	cmp	r3, r1
 800336e:	bf01      	itttt	eq
 8003370:	6819      	ldreq	r1, [r3, #0]
 8003372:	685b      	ldreq	r3, [r3, #4]
 8003374:	1809      	addeq	r1, r1, r0
 8003376:	6021      	streq	r1, [r4, #0]
 8003378:	e7ed      	b.n	8003356 <_free_r+0x1e>
 800337a:	461a      	mov	r2, r3
 800337c:	685b      	ldr	r3, [r3, #4]
 800337e:	b10b      	cbz	r3, 8003384 <_free_r+0x4c>
 8003380:	42a3      	cmp	r3, r4
 8003382:	d9fa      	bls.n	800337a <_free_r+0x42>
 8003384:	6811      	ldr	r1, [r2, #0]
 8003386:	1850      	adds	r0, r2, r1
 8003388:	42a0      	cmp	r0, r4
 800338a:	d10b      	bne.n	80033a4 <_free_r+0x6c>
 800338c:	6820      	ldr	r0, [r4, #0]
 800338e:	4401      	add	r1, r0
 8003390:	1850      	adds	r0, r2, r1
 8003392:	4283      	cmp	r3, r0
 8003394:	6011      	str	r1, [r2, #0]
 8003396:	d1e0      	bne.n	800335a <_free_r+0x22>
 8003398:	6818      	ldr	r0, [r3, #0]
 800339a:	685b      	ldr	r3, [r3, #4]
 800339c:	4408      	add	r0, r1
 800339e:	6010      	str	r0, [r2, #0]
 80033a0:	6053      	str	r3, [r2, #4]
 80033a2:	e7da      	b.n	800335a <_free_r+0x22>
 80033a4:	d902      	bls.n	80033ac <_free_r+0x74>
 80033a6:	230c      	movs	r3, #12
 80033a8:	602b      	str	r3, [r5, #0]
 80033aa:	e7d6      	b.n	800335a <_free_r+0x22>
 80033ac:	6820      	ldr	r0, [r4, #0]
 80033ae:	1821      	adds	r1, r4, r0
 80033b0:	428b      	cmp	r3, r1
 80033b2:	bf01      	itttt	eq
 80033b4:	6819      	ldreq	r1, [r3, #0]
 80033b6:	685b      	ldreq	r3, [r3, #4]
 80033b8:	1809      	addeq	r1, r1, r0
 80033ba:	6021      	streq	r1, [r4, #0]
 80033bc:	6063      	str	r3, [r4, #4]
 80033be:	6054      	str	r4, [r2, #4]
 80033c0:	e7cb      	b.n	800335a <_free_r+0x22>
 80033c2:	bd38      	pop	{r3, r4, r5, pc}
 80033c4:	2000033c 	.word	0x2000033c

080033c8 <malloc>:
 80033c8:	4b02      	ldr	r3, [pc, #8]	@ (80033d4 <malloc+0xc>)
 80033ca:	4601      	mov	r1, r0
 80033cc:	6818      	ldr	r0, [r3, #0]
 80033ce:	f000 b825 	b.w	800341c <_malloc_r>
 80033d2:	bf00      	nop
 80033d4:	20000010 	.word	0x20000010

080033d8 <sbrk_aligned>:
 80033d8:	b570      	push	{r4, r5, r6, lr}
 80033da:	4e0f      	ldr	r6, [pc, #60]	@ (8003418 <sbrk_aligned+0x40>)
 80033dc:	460c      	mov	r4, r1
 80033de:	6831      	ldr	r1, [r6, #0]
 80033e0:	4605      	mov	r5, r0
 80033e2:	b911      	cbnz	r1, 80033ea <sbrk_aligned+0x12>
 80033e4:	f000 fe40 	bl	8004068 <_sbrk_r>
 80033e8:	6030      	str	r0, [r6, #0]
 80033ea:	4621      	mov	r1, r4
 80033ec:	4628      	mov	r0, r5
 80033ee:	f000 fe3b 	bl	8004068 <_sbrk_r>
 80033f2:	1c43      	adds	r3, r0, #1
 80033f4:	d103      	bne.n	80033fe <sbrk_aligned+0x26>
 80033f6:	f04f 34ff 	mov.w	r4, #4294967295
 80033fa:	4620      	mov	r0, r4
 80033fc:	bd70      	pop	{r4, r5, r6, pc}
 80033fe:	1cc4      	adds	r4, r0, #3
 8003400:	f024 0403 	bic.w	r4, r4, #3
 8003404:	42a0      	cmp	r0, r4
 8003406:	d0f8      	beq.n	80033fa <sbrk_aligned+0x22>
 8003408:	1a21      	subs	r1, r4, r0
 800340a:	4628      	mov	r0, r5
 800340c:	f000 fe2c 	bl	8004068 <_sbrk_r>
 8003410:	3001      	adds	r0, #1
 8003412:	d1f2      	bne.n	80033fa <sbrk_aligned+0x22>
 8003414:	e7ef      	b.n	80033f6 <sbrk_aligned+0x1e>
 8003416:	bf00      	nop
 8003418:	20000338 	.word	0x20000338

0800341c <_malloc_r>:
 800341c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003420:	1ccd      	adds	r5, r1, #3
 8003422:	f025 0503 	bic.w	r5, r5, #3
 8003426:	3508      	adds	r5, #8
 8003428:	2d0c      	cmp	r5, #12
 800342a:	bf38      	it	cc
 800342c:	250c      	movcc	r5, #12
 800342e:	2d00      	cmp	r5, #0
 8003430:	4606      	mov	r6, r0
 8003432:	db01      	blt.n	8003438 <_malloc_r+0x1c>
 8003434:	42a9      	cmp	r1, r5
 8003436:	d904      	bls.n	8003442 <_malloc_r+0x26>
 8003438:	230c      	movs	r3, #12
 800343a:	6033      	str	r3, [r6, #0]
 800343c:	2000      	movs	r0, #0
 800343e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003442:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8003518 <_malloc_r+0xfc>
 8003446:	f000 f869 	bl	800351c <__malloc_lock>
 800344a:	f8d8 3000 	ldr.w	r3, [r8]
 800344e:	461c      	mov	r4, r3
 8003450:	bb44      	cbnz	r4, 80034a4 <_malloc_r+0x88>
 8003452:	4629      	mov	r1, r5
 8003454:	4630      	mov	r0, r6
 8003456:	f7ff ffbf 	bl	80033d8 <sbrk_aligned>
 800345a:	1c43      	adds	r3, r0, #1
 800345c:	4604      	mov	r4, r0
 800345e:	d158      	bne.n	8003512 <_malloc_r+0xf6>
 8003460:	f8d8 4000 	ldr.w	r4, [r8]
 8003464:	4627      	mov	r7, r4
 8003466:	2f00      	cmp	r7, #0
 8003468:	d143      	bne.n	80034f2 <_malloc_r+0xd6>
 800346a:	2c00      	cmp	r4, #0
 800346c:	d04b      	beq.n	8003506 <_malloc_r+0xea>
 800346e:	6823      	ldr	r3, [r4, #0]
 8003470:	4639      	mov	r1, r7
 8003472:	4630      	mov	r0, r6
 8003474:	eb04 0903 	add.w	r9, r4, r3
 8003478:	f000 fdf6 	bl	8004068 <_sbrk_r>
 800347c:	4581      	cmp	r9, r0
 800347e:	d142      	bne.n	8003506 <_malloc_r+0xea>
 8003480:	6821      	ldr	r1, [r4, #0]
 8003482:	4630      	mov	r0, r6
 8003484:	1a6d      	subs	r5, r5, r1
 8003486:	4629      	mov	r1, r5
 8003488:	f7ff ffa6 	bl	80033d8 <sbrk_aligned>
 800348c:	3001      	adds	r0, #1
 800348e:	d03a      	beq.n	8003506 <_malloc_r+0xea>
 8003490:	6823      	ldr	r3, [r4, #0]
 8003492:	442b      	add	r3, r5
 8003494:	6023      	str	r3, [r4, #0]
 8003496:	f8d8 3000 	ldr.w	r3, [r8]
 800349a:	685a      	ldr	r2, [r3, #4]
 800349c:	bb62      	cbnz	r2, 80034f8 <_malloc_r+0xdc>
 800349e:	f8c8 7000 	str.w	r7, [r8]
 80034a2:	e00f      	b.n	80034c4 <_malloc_r+0xa8>
 80034a4:	6822      	ldr	r2, [r4, #0]
 80034a6:	1b52      	subs	r2, r2, r5
 80034a8:	d420      	bmi.n	80034ec <_malloc_r+0xd0>
 80034aa:	2a0b      	cmp	r2, #11
 80034ac:	d917      	bls.n	80034de <_malloc_r+0xc2>
 80034ae:	1961      	adds	r1, r4, r5
 80034b0:	42a3      	cmp	r3, r4
 80034b2:	6025      	str	r5, [r4, #0]
 80034b4:	bf18      	it	ne
 80034b6:	6059      	strne	r1, [r3, #4]
 80034b8:	6863      	ldr	r3, [r4, #4]
 80034ba:	bf08      	it	eq
 80034bc:	f8c8 1000 	streq.w	r1, [r8]
 80034c0:	5162      	str	r2, [r4, r5]
 80034c2:	604b      	str	r3, [r1, #4]
 80034c4:	4630      	mov	r0, r6
 80034c6:	f000 f82f 	bl	8003528 <__malloc_unlock>
 80034ca:	f104 000b 	add.w	r0, r4, #11
 80034ce:	1d23      	adds	r3, r4, #4
 80034d0:	f020 0007 	bic.w	r0, r0, #7
 80034d4:	1ac2      	subs	r2, r0, r3
 80034d6:	bf1c      	itt	ne
 80034d8:	1a1b      	subne	r3, r3, r0
 80034da:	50a3      	strne	r3, [r4, r2]
 80034dc:	e7af      	b.n	800343e <_malloc_r+0x22>
 80034de:	6862      	ldr	r2, [r4, #4]
 80034e0:	42a3      	cmp	r3, r4
 80034e2:	bf0c      	ite	eq
 80034e4:	f8c8 2000 	streq.w	r2, [r8]
 80034e8:	605a      	strne	r2, [r3, #4]
 80034ea:	e7eb      	b.n	80034c4 <_malloc_r+0xa8>
 80034ec:	4623      	mov	r3, r4
 80034ee:	6864      	ldr	r4, [r4, #4]
 80034f0:	e7ae      	b.n	8003450 <_malloc_r+0x34>
 80034f2:	463c      	mov	r4, r7
 80034f4:	687f      	ldr	r7, [r7, #4]
 80034f6:	e7b6      	b.n	8003466 <_malloc_r+0x4a>
 80034f8:	461a      	mov	r2, r3
 80034fa:	685b      	ldr	r3, [r3, #4]
 80034fc:	42a3      	cmp	r3, r4
 80034fe:	d1fb      	bne.n	80034f8 <_malloc_r+0xdc>
 8003500:	2300      	movs	r3, #0
 8003502:	6053      	str	r3, [r2, #4]
 8003504:	e7de      	b.n	80034c4 <_malloc_r+0xa8>
 8003506:	230c      	movs	r3, #12
 8003508:	4630      	mov	r0, r6
 800350a:	6033      	str	r3, [r6, #0]
 800350c:	f000 f80c 	bl	8003528 <__malloc_unlock>
 8003510:	e794      	b.n	800343c <_malloc_r+0x20>
 8003512:	6005      	str	r5, [r0, #0]
 8003514:	e7d6      	b.n	80034c4 <_malloc_r+0xa8>
 8003516:	bf00      	nop
 8003518:	2000033c 	.word	0x2000033c

0800351c <__malloc_lock>:
 800351c:	4801      	ldr	r0, [pc, #4]	@ (8003524 <__malloc_lock+0x8>)
 800351e:	f7ff b8aa 	b.w	8002676 <__retarget_lock_acquire_recursive>
 8003522:	bf00      	nop
 8003524:	20000334 	.word	0x20000334

08003528 <__malloc_unlock>:
 8003528:	4801      	ldr	r0, [pc, #4]	@ (8003530 <__malloc_unlock+0x8>)
 800352a:	f7ff b8a5 	b.w	8002678 <__retarget_lock_release_recursive>
 800352e:	bf00      	nop
 8003530:	20000334 	.word	0x20000334

08003534 <_Balloc>:
 8003534:	b570      	push	{r4, r5, r6, lr}
 8003536:	69c6      	ldr	r6, [r0, #28]
 8003538:	4604      	mov	r4, r0
 800353a:	460d      	mov	r5, r1
 800353c:	b976      	cbnz	r6, 800355c <_Balloc+0x28>
 800353e:	2010      	movs	r0, #16
 8003540:	f7ff ff42 	bl	80033c8 <malloc>
 8003544:	4602      	mov	r2, r0
 8003546:	61e0      	str	r0, [r4, #28]
 8003548:	b920      	cbnz	r0, 8003554 <_Balloc+0x20>
 800354a:	216b      	movs	r1, #107	@ 0x6b
 800354c:	4b17      	ldr	r3, [pc, #92]	@ (80035ac <_Balloc+0x78>)
 800354e:	4818      	ldr	r0, [pc, #96]	@ (80035b0 <_Balloc+0x7c>)
 8003550:	f000 fda8 	bl	80040a4 <__assert_func>
 8003554:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003558:	6006      	str	r6, [r0, #0]
 800355a:	60c6      	str	r6, [r0, #12]
 800355c:	69e6      	ldr	r6, [r4, #28]
 800355e:	68f3      	ldr	r3, [r6, #12]
 8003560:	b183      	cbz	r3, 8003584 <_Balloc+0x50>
 8003562:	69e3      	ldr	r3, [r4, #28]
 8003564:	68db      	ldr	r3, [r3, #12]
 8003566:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800356a:	b9b8      	cbnz	r0, 800359c <_Balloc+0x68>
 800356c:	2101      	movs	r1, #1
 800356e:	fa01 f605 	lsl.w	r6, r1, r5
 8003572:	1d72      	adds	r2, r6, #5
 8003574:	4620      	mov	r0, r4
 8003576:	0092      	lsls	r2, r2, #2
 8003578:	f000 fdb2 	bl	80040e0 <_calloc_r>
 800357c:	b160      	cbz	r0, 8003598 <_Balloc+0x64>
 800357e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003582:	e00e      	b.n	80035a2 <_Balloc+0x6e>
 8003584:	2221      	movs	r2, #33	@ 0x21
 8003586:	2104      	movs	r1, #4
 8003588:	4620      	mov	r0, r4
 800358a:	f000 fda9 	bl	80040e0 <_calloc_r>
 800358e:	69e3      	ldr	r3, [r4, #28]
 8003590:	60f0      	str	r0, [r6, #12]
 8003592:	68db      	ldr	r3, [r3, #12]
 8003594:	2b00      	cmp	r3, #0
 8003596:	d1e4      	bne.n	8003562 <_Balloc+0x2e>
 8003598:	2000      	movs	r0, #0
 800359a:	bd70      	pop	{r4, r5, r6, pc}
 800359c:	6802      	ldr	r2, [r0, #0]
 800359e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80035a2:	2300      	movs	r3, #0
 80035a4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80035a8:	e7f7      	b.n	800359a <_Balloc+0x66>
 80035aa:	bf00      	nop
 80035ac:	08004853 	.word	0x08004853
 80035b0:	080048d3 	.word	0x080048d3

080035b4 <_Bfree>:
 80035b4:	b570      	push	{r4, r5, r6, lr}
 80035b6:	69c6      	ldr	r6, [r0, #28]
 80035b8:	4605      	mov	r5, r0
 80035ba:	460c      	mov	r4, r1
 80035bc:	b976      	cbnz	r6, 80035dc <_Bfree+0x28>
 80035be:	2010      	movs	r0, #16
 80035c0:	f7ff ff02 	bl	80033c8 <malloc>
 80035c4:	4602      	mov	r2, r0
 80035c6:	61e8      	str	r0, [r5, #28]
 80035c8:	b920      	cbnz	r0, 80035d4 <_Bfree+0x20>
 80035ca:	218f      	movs	r1, #143	@ 0x8f
 80035cc:	4b08      	ldr	r3, [pc, #32]	@ (80035f0 <_Bfree+0x3c>)
 80035ce:	4809      	ldr	r0, [pc, #36]	@ (80035f4 <_Bfree+0x40>)
 80035d0:	f000 fd68 	bl	80040a4 <__assert_func>
 80035d4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80035d8:	6006      	str	r6, [r0, #0]
 80035da:	60c6      	str	r6, [r0, #12]
 80035dc:	b13c      	cbz	r4, 80035ee <_Bfree+0x3a>
 80035de:	69eb      	ldr	r3, [r5, #28]
 80035e0:	6862      	ldr	r2, [r4, #4]
 80035e2:	68db      	ldr	r3, [r3, #12]
 80035e4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80035e8:	6021      	str	r1, [r4, #0]
 80035ea:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80035ee:	bd70      	pop	{r4, r5, r6, pc}
 80035f0:	08004853 	.word	0x08004853
 80035f4:	080048d3 	.word	0x080048d3

080035f8 <__multadd>:
 80035f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80035fc:	4607      	mov	r7, r0
 80035fe:	460c      	mov	r4, r1
 8003600:	461e      	mov	r6, r3
 8003602:	2000      	movs	r0, #0
 8003604:	690d      	ldr	r5, [r1, #16]
 8003606:	f101 0c14 	add.w	ip, r1, #20
 800360a:	f8dc 3000 	ldr.w	r3, [ip]
 800360e:	3001      	adds	r0, #1
 8003610:	b299      	uxth	r1, r3
 8003612:	fb02 6101 	mla	r1, r2, r1, r6
 8003616:	0c1e      	lsrs	r6, r3, #16
 8003618:	0c0b      	lsrs	r3, r1, #16
 800361a:	fb02 3306 	mla	r3, r2, r6, r3
 800361e:	b289      	uxth	r1, r1
 8003620:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003624:	4285      	cmp	r5, r0
 8003626:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800362a:	f84c 1b04 	str.w	r1, [ip], #4
 800362e:	dcec      	bgt.n	800360a <__multadd+0x12>
 8003630:	b30e      	cbz	r6, 8003676 <__multadd+0x7e>
 8003632:	68a3      	ldr	r3, [r4, #8]
 8003634:	42ab      	cmp	r3, r5
 8003636:	dc19      	bgt.n	800366c <__multadd+0x74>
 8003638:	6861      	ldr	r1, [r4, #4]
 800363a:	4638      	mov	r0, r7
 800363c:	3101      	adds	r1, #1
 800363e:	f7ff ff79 	bl	8003534 <_Balloc>
 8003642:	4680      	mov	r8, r0
 8003644:	b928      	cbnz	r0, 8003652 <__multadd+0x5a>
 8003646:	4602      	mov	r2, r0
 8003648:	21ba      	movs	r1, #186	@ 0xba
 800364a:	4b0c      	ldr	r3, [pc, #48]	@ (800367c <__multadd+0x84>)
 800364c:	480c      	ldr	r0, [pc, #48]	@ (8003680 <__multadd+0x88>)
 800364e:	f000 fd29 	bl	80040a4 <__assert_func>
 8003652:	6922      	ldr	r2, [r4, #16]
 8003654:	f104 010c 	add.w	r1, r4, #12
 8003658:	3202      	adds	r2, #2
 800365a:	0092      	lsls	r2, r2, #2
 800365c:	300c      	adds	r0, #12
 800365e:	f000 fd13 	bl	8004088 <memcpy>
 8003662:	4621      	mov	r1, r4
 8003664:	4638      	mov	r0, r7
 8003666:	f7ff ffa5 	bl	80035b4 <_Bfree>
 800366a:	4644      	mov	r4, r8
 800366c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003670:	3501      	adds	r5, #1
 8003672:	615e      	str	r6, [r3, #20]
 8003674:	6125      	str	r5, [r4, #16]
 8003676:	4620      	mov	r0, r4
 8003678:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800367c:	080048c2 	.word	0x080048c2
 8003680:	080048d3 	.word	0x080048d3

08003684 <__hi0bits>:
 8003684:	4603      	mov	r3, r0
 8003686:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800368a:	bf3a      	itte	cc
 800368c:	0403      	lslcc	r3, r0, #16
 800368e:	2010      	movcc	r0, #16
 8003690:	2000      	movcs	r0, #0
 8003692:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003696:	bf3c      	itt	cc
 8003698:	021b      	lslcc	r3, r3, #8
 800369a:	3008      	addcc	r0, #8
 800369c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80036a0:	bf3c      	itt	cc
 80036a2:	011b      	lslcc	r3, r3, #4
 80036a4:	3004      	addcc	r0, #4
 80036a6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80036aa:	bf3c      	itt	cc
 80036ac:	009b      	lslcc	r3, r3, #2
 80036ae:	3002      	addcc	r0, #2
 80036b0:	2b00      	cmp	r3, #0
 80036b2:	db05      	blt.n	80036c0 <__hi0bits+0x3c>
 80036b4:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 80036b8:	f100 0001 	add.w	r0, r0, #1
 80036bc:	bf08      	it	eq
 80036be:	2020      	moveq	r0, #32
 80036c0:	4770      	bx	lr

080036c2 <__lo0bits>:
 80036c2:	6803      	ldr	r3, [r0, #0]
 80036c4:	4602      	mov	r2, r0
 80036c6:	f013 0007 	ands.w	r0, r3, #7
 80036ca:	d00b      	beq.n	80036e4 <__lo0bits+0x22>
 80036cc:	07d9      	lsls	r1, r3, #31
 80036ce:	d421      	bmi.n	8003714 <__lo0bits+0x52>
 80036d0:	0798      	lsls	r0, r3, #30
 80036d2:	bf49      	itett	mi
 80036d4:	085b      	lsrmi	r3, r3, #1
 80036d6:	089b      	lsrpl	r3, r3, #2
 80036d8:	2001      	movmi	r0, #1
 80036da:	6013      	strmi	r3, [r2, #0]
 80036dc:	bf5c      	itt	pl
 80036de:	2002      	movpl	r0, #2
 80036e0:	6013      	strpl	r3, [r2, #0]
 80036e2:	4770      	bx	lr
 80036e4:	b299      	uxth	r1, r3
 80036e6:	b909      	cbnz	r1, 80036ec <__lo0bits+0x2a>
 80036e8:	2010      	movs	r0, #16
 80036ea:	0c1b      	lsrs	r3, r3, #16
 80036ec:	b2d9      	uxtb	r1, r3
 80036ee:	b909      	cbnz	r1, 80036f4 <__lo0bits+0x32>
 80036f0:	3008      	adds	r0, #8
 80036f2:	0a1b      	lsrs	r3, r3, #8
 80036f4:	0719      	lsls	r1, r3, #28
 80036f6:	bf04      	itt	eq
 80036f8:	091b      	lsreq	r3, r3, #4
 80036fa:	3004      	addeq	r0, #4
 80036fc:	0799      	lsls	r1, r3, #30
 80036fe:	bf04      	itt	eq
 8003700:	089b      	lsreq	r3, r3, #2
 8003702:	3002      	addeq	r0, #2
 8003704:	07d9      	lsls	r1, r3, #31
 8003706:	d403      	bmi.n	8003710 <__lo0bits+0x4e>
 8003708:	085b      	lsrs	r3, r3, #1
 800370a:	f100 0001 	add.w	r0, r0, #1
 800370e:	d003      	beq.n	8003718 <__lo0bits+0x56>
 8003710:	6013      	str	r3, [r2, #0]
 8003712:	4770      	bx	lr
 8003714:	2000      	movs	r0, #0
 8003716:	4770      	bx	lr
 8003718:	2020      	movs	r0, #32
 800371a:	4770      	bx	lr

0800371c <__i2b>:
 800371c:	b510      	push	{r4, lr}
 800371e:	460c      	mov	r4, r1
 8003720:	2101      	movs	r1, #1
 8003722:	f7ff ff07 	bl	8003534 <_Balloc>
 8003726:	4602      	mov	r2, r0
 8003728:	b928      	cbnz	r0, 8003736 <__i2b+0x1a>
 800372a:	f240 1145 	movw	r1, #325	@ 0x145
 800372e:	4b04      	ldr	r3, [pc, #16]	@ (8003740 <__i2b+0x24>)
 8003730:	4804      	ldr	r0, [pc, #16]	@ (8003744 <__i2b+0x28>)
 8003732:	f000 fcb7 	bl	80040a4 <__assert_func>
 8003736:	2301      	movs	r3, #1
 8003738:	6144      	str	r4, [r0, #20]
 800373a:	6103      	str	r3, [r0, #16]
 800373c:	bd10      	pop	{r4, pc}
 800373e:	bf00      	nop
 8003740:	080048c2 	.word	0x080048c2
 8003744:	080048d3 	.word	0x080048d3

08003748 <__multiply>:
 8003748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800374c:	4614      	mov	r4, r2
 800374e:	690a      	ldr	r2, [r1, #16]
 8003750:	6923      	ldr	r3, [r4, #16]
 8003752:	460f      	mov	r7, r1
 8003754:	429a      	cmp	r2, r3
 8003756:	bfa2      	ittt	ge
 8003758:	4623      	movge	r3, r4
 800375a:	460c      	movge	r4, r1
 800375c:	461f      	movge	r7, r3
 800375e:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8003762:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8003766:	68a3      	ldr	r3, [r4, #8]
 8003768:	6861      	ldr	r1, [r4, #4]
 800376a:	eb0a 0609 	add.w	r6, sl, r9
 800376e:	42b3      	cmp	r3, r6
 8003770:	b085      	sub	sp, #20
 8003772:	bfb8      	it	lt
 8003774:	3101      	addlt	r1, #1
 8003776:	f7ff fedd 	bl	8003534 <_Balloc>
 800377a:	b930      	cbnz	r0, 800378a <__multiply+0x42>
 800377c:	4602      	mov	r2, r0
 800377e:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8003782:	4b43      	ldr	r3, [pc, #268]	@ (8003890 <__multiply+0x148>)
 8003784:	4843      	ldr	r0, [pc, #268]	@ (8003894 <__multiply+0x14c>)
 8003786:	f000 fc8d 	bl	80040a4 <__assert_func>
 800378a:	f100 0514 	add.w	r5, r0, #20
 800378e:	462b      	mov	r3, r5
 8003790:	2200      	movs	r2, #0
 8003792:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003796:	4543      	cmp	r3, r8
 8003798:	d321      	bcc.n	80037de <__multiply+0x96>
 800379a:	f107 0114 	add.w	r1, r7, #20
 800379e:	f104 0214 	add.w	r2, r4, #20
 80037a2:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 80037a6:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 80037aa:	9302      	str	r3, [sp, #8]
 80037ac:	1b13      	subs	r3, r2, r4
 80037ae:	3b15      	subs	r3, #21
 80037b0:	f023 0303 	bic.w	r3, r3, #3
 80037b4:	3304      	adds	r3, #4
 80037b6:	f104 0715 	add.w	r7, r4, #21
 80037ba:	42ba      	cmp	r2, r7
 80037bc:	bf38      	it	cc
 80037be:	2304      	movcc	r3, #4
 80037c0:	9301      	str	r3, [sp, #4]
 80037c2:	9b02      	ldr	r3, [sp, #8]
 80037c4:	9103      	str	r1, [sp, #12]
 80037c6:	428b      	cmp	r3, r1
 80037c8:	d80c      	bhi.n	80037e4 <__multiply+0x9c>
 80037ca:	2e00      	cmp	r6, #0
 80037cc:	dd03      	ble.n	80037d6 <__multiply+0x8e>
 80037ce:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80037d2:	2b00      	cmp	r3, #0
 80037d4:	d05a      	beq.n	800388c <__multiply+0x144>
 80037d6:	6106      	str	r6, [r0, #16]
 80037d8:	b005      	add	sp, #20
 80037da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80037de:	f843 2b04 	str.w	r2, [r3], #4
 80037e2:	e7d8      	b.n	8003796 <__multiply+0x4e>
 80037e4:	f8b1 a000 	ldrh.w	sl, [r1]
 80037e8:	f1ba 0f00 	cmp.w	sl, #0
 80037ec:	d023      	beq.n	8003836 <__multiply+0xee>
 80037ee:	46a9      	mov	r9, r5
 80037f0:	f04f 0c00 	mov.w	ip, #0
 80037f4:	f104 0e14 	add.w	lr, r4, #20
 80037f8:	f85e 7b04 	ldr.w	r7, [lr], #4
 80037fc:	f8d9 3000 	ldr.w	r3, [r9]
 8003800:	fa1f fb87 	uxth.w	fp, r7
 8003804:	b29b      	uxth	r3, r3
 8003806:	fb0a 330b 	mla	r3, sl, fp, r3
 800380a:	4463      	add	r3, ip
 800380c:	f8d9 c000 	ldr.w	ip, [r9]
 8003810:	0c3f      	lsrs	r7, r7, #16
 8003812:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8003816:	fb0a c707 	mla	r7, sl, r7, ip
 800381a:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 800381e:	b29b      	uxth	r3, r3
 8003820:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003824:	4572      	cmp	r2, lr
 8003826:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800382a:	f849 3b04 	str.w	r3, [r9], #4
 800382e:	d8e3      	bhi.n	80037f8 <__multiply+0xb0>
 8003830:	9b01      	ldr	r3, [sp, #4]
 8003832:	f845 c003 	str.w	ip, [r5, r3]
 8003836:	9b03      	ldr	r3, [sp, #12]
 8003838:	3104      	adds	r1, #4
 800383a:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800383e:	f1b9 0f00 	cmp.w	r9, #0
 8003842:	d021      	beq.n	8003888 <__multiply+0x140>
 8003844:	46ae      	mov	lr, r5
 8003846:	f04f 0a00 	mov.w	sl, #0
 800384a:	682b      	ldr	r3, [r5, #0]
 800384c:	f104 0c14 	add.w	ip, r4, #20
 8003850:	f8bc b000 	ldrh.w	fp, [ip]
 8003854:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8003858:	b29b      	uxth	r3, r3
 800385a:	fb09 770b 	mla	r7, r9, fp, r7
 800385e:	4457      	add	r7, sl
 8003860:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003864:	f84e 3b04 	str.w	r3, [lr], #4
 8003868:	f85c 3b04 	ldr.w	r3, [ip], #4
 800386c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003870:	f8be 3000 	ldrh.w	r3, [lr]
 8003874:	4562      	cmp	r2, ip
 8003876:	fb09 330a 	mla	r3, r9, sl, r3
 800387a:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800387e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003882:	d8e5      	bhi.n	8003850 <__multiply+0x108>
 8003884:	9f01      	ldr	r7, [sp, #4]
 8003886:	51eb      	str	r3, [r5, r7]
 8003888:	3504      	adds	r5, #4
 800388a:	e79a      	b.n	80037c2 <__multiply+0x7a>
 800388c:	3e01      	subs	r6, #1
 800388e:	e79c      	b.n	80037ca <__multiply+0x82>
 8003890:	080048c2 	.word	0x080048c2
 8003894:	080048d3 	.word	0x080048d3

08003898 <__pow5mult>:
 8003898:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800389c:	4615      	mov	r5, r2
 800389e:	f012 0203 	ands.w	r2, r2, #3
 80038a2:	4607      	mov	r7, r0
 80038a4:	460e      	mov	r6, r1
 80038a6:	d007      	beq.n	80038b8 <__pow5mult+0x20>
 80038a8:	4c25      	ldr	r4, [pc, #148]	@ (8003940 <__pow5mult+0xa8>)
 80038aa:	3a01      	subs	r2, #1
 80038ac:	2300      	movs	r3, #0
 80038ae:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80038b2:	f7ff fea1 	bl	80035f8 <__multadd>
 80038b6:	4606      	mov	r6, r0
 80038b8:	10ad      	asrs	r5, r5, #2
 80038ba:	d03d      	beq.n	8003938 <__pow5mult+0xa0>
 80038bc:	69fc      	ldr	r4, [r7, #28]
 80038be:	b97c      	cbnz	r4, 80038e0 <__pow5mult+0x48>
 80038c0:	2010      	movs	r0, #16
 80038c2:	f7ff fd81 	bl	80033c8 <malloc>
 80038c6:	4602      	mov	r2, r0
 80038c8:	61f8      	str	r0, [r7, #28]
 80038ca:	b928      	cbnz	r0, 80038d8 <__pow5mult+0x40>
 80038cc:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80038d0:	4b1c      	ldr	r3, [pc, #112]	@ (8003944 <__pow5mult+0xac>)
 80038d2:	481d      	ldr	r0, [pc, #116]	@ (8003948 <__pow5mult+0xb0>)
 80038d4:	f000 fbe6 	bl	80040a4 <__assert_func>
 80038d8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80038dc:	6004      	str	r4, [r0, #0]
 80038de:	60c4      	str	r4, [r0, #12]
 80038e0:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80038e4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80038e8:	b94c      	cbnz	r4, 80038fe <__pow5mult+0x66>
 80038ea:	f240 2171 	movw	r1, #625	@ 0x271
 80038ee:	4638      	mov	r0, r7
 80038f0:	f7ff ff14 	bl	800371c <__i2b>
 80038f4:	2300      	movs	r3, #0
 80038f6:	4604      	mov	r4, r0
 80038f8:	f8c8 0008 	str.w	r0, [r8, #8]
 80038fc:	6003      	str	r3, [r0, #0]
 80038fe:	f04f 0900 	mov.w	r9, #0
 8003902:	07eb      	lsls	r3, r5, #31
 8003904:	d50a      	bpl.n	800391c <__pow5mult+0x84>
 8003906:	4631      	mov	r1, r6
 8003908:	4622      	mov	r2, r4
 800390a:	4638      	mov	r0, r7
 800390c:	f7ff ff1c 	bl	8003748 <__multiply>
 8003910:	4680      	mov	r8, r0
 8003912:	4631      	mov	r1, r6
 8003914:	4638      	mov	r0, r7
 8003916:	f7ff fe4d 	bl	80035b4 <_Bfree>
 800391a:	4646      	mov	r6, r8
 800391c:	106d      	asrs	r5, r5, #1
 800391e:	d00b      	beq.n	8003938 <__pow5mult+0xa0>
 8003920:	6820      	ldr	r0, [r4, #0]
 8003922:	b938      	cbnz	r0, 8003934 <__pow5mult+0x9c>
 8003924:	4622      	mov	r2, r4
 8003926:	4621      	mov	r1, r4
 8003928:	4638      	mov	r0, r7
 800392a:	f7ff ff0d 	bl	8003748 <__multiply>
 800392e:	6020      	str	r0, [r4, #0]
 8003930:	f8c0 9000 	str.w	r9, [r0]
 8003934:	4604      	mov	r4, r0
 8003936:	e7e4      	b.n	8003902 <__pow5mult+0x6a>
 8003938:	4630      	mov	r0, r6
 800393a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800393e:	bf00      	nop
 8003940:	0800492c 	.word	0x0800492c
 8003944:	08004853 	.word	0x08004853
 8003948:	080048d3 	.word	0x080048d3

0800394c <__lshift>:
 800394c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003950:	460c      	mov	r4, r1
 8003952:	4607      	mov	r7, r0
 8003954:	4691      	mov	r9, r2
 8003956:	6923      	ldr	r3, [r4, #16]
 8003958:	6849      	ldr	r1, [r1, #4]
 800395a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800395e:	68a3      	ldr	r3, [r4, #8]
 8003960:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003964:	f108 0601 	add.w	r6, r8, #1
 8003968:	42b3      	cmp	r3, r6
 800396a:	db0b      	blt.n	8003984 <__lshift+0x38>
 800396c:	4638      	mov	r0, r7
 800396e:	f7ff fde1 	bl	8003534 <_Balloc>
 8003972:	4605      	mov	r5, r0
 8003974:	b948      	cbnz	r0, 800398a <__lshift+0x3e>
 8003976:	4602      	mov	r2, r0
 8003978:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 800397c:	4b27      	ldr	r3, [pc, #156]	@ (8003a1c <__lshift+0xd0>)
 800397e:	4828      	ldr	r0, [pc, #160]	@ (8003a20 <__lshift+0xd4>)
 8003980:	f000 fb90 	bl	80040a4 <__assert_func>
 8003984:	3101      	adds	r1, #1
 8003986:	005b      	lsls	r3, r3, #1
 8003988:	e7ee      	b.n	8003968 <__lshift+0x1c>
 800398a:	2300      	movs	r3, #0
 800398c:	f100 0114 	add.w	r1, r0, #20
 8003990:	f100 0210 	add.w	r2, r0, #16
 8003994:	4618      	mov	r0, r3
 8003996:	4553      	cmp	r3, sl
 8003998:	db33      	blt.n	8003a02 <__lshift+0xb6>
 800399a:	6920      	ldr	r0, [r4, #16]
 800399c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80039a0:	f104 0314 	add.w	r3, r4, #20
 80039a4:	f019 091f 	ands.w	r9, r9, #31
 80039a8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80039ac:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80039b0:	d02b      	beq.n	8003a0a <__lshift+0xbe>
 80039b2:	468a      	mov	sl, r1
 80039b4:	2200      	movs	r2, #0
 80039b6:	f1c9 0e20 	rsb	lr, r9, #32
 80039ba:	6818      	ldr	r0, [r3, #0]
 80039bc:	fa00 f009 	lsl.w	r0, r0, r9
 80039c0:	4310      	orrs	r0, r2
 80039c2:	f84a 0b04 	str.w	r0, [sl], #4
 80039c6:	f853 2b04 	ldr.w	r2, [r3], #4
 80039ca:	459c      	cmp	ip, r3
 80039cc:	fa22 f20e 	lsr.w	r2, r2, lr
 80039d0:	d8f3      	bhi.n	80039ba <__lshift+0x6e>
 80039d2:	ebac 0304 	sub.w	r3, ip, r4
 80039d6:	3b15      	subs	r3, #21
 80039d8:	f023 0303 	bic.w	r3, r3, #3
 80039dc:	3304      	adds	r3, #4
 80039de:	f104 0015 	add.w	r0, r4, #21
 80039e2:	4584      	cmp	ip, r0
 80039e4:	bf38      	it	cc
 80039e6:	2304      	movcc	r3, #4
 80039e8:	50ca      	str	r2, [r1, r3]
 80039ea:	b10a      	cbz	r2, 80039f0 <__lshift+0xa4>
 80039ec:	f108 0602 	add.w	r6, r8, #2
 80039f0:	3e01      	subs	r6, #1
 80039f2:	4638      	mov	r0, r7
 80039f4:	4621      	mov	r1, r4
 80039f6:	612e      	str	r6, [r5, #16]
 80039f8:	f7ff fddc 	bl	80035b4 <_Bfree>
 80039fc:	4628      	mov	r0, r5
 80039fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003a02:	f842 0f04 	str.w	r0, [r2, #4]!
 8003a06:	3301      	adds	r3, #1
 8003a08:	e7c5      	b.n	8003996 <__lshift+0x4a>
 8003a0a:	3904      	subs	r1, #4
 8003a0c:	f853 2b04 	ldr.w	r2, [r3], #4
 8003a10:	459c      	cmp	ip, r3
 8003a12:	f841 2f04 	str.w	r2, [r1, #4]!
 8003a16:	d8f9      	bhi.n	8003a0c <__lshift+0xc0>
 8003a18:	e7ea      	b.n	80039f0 <__lshift+0xa4>
 8003a1a:	bf00      	nop
 8003a1c:	080048c2 	.word	0x080048c2
 8003a20:	080048d3 	.word	0x080048d3

08003a24 <__mcmp>:
 8003a24:	4603      	mov	r3, r0
 8003a26:	690a      	ldr	r2, [r1, #16]
 8003a28:	6900      	ldr	r0, [r0, #16]
 8003a2a:	b530      	push	{r4, r5, lr}
 8003a2c:	1a80      	subs	r0, r0, r2
 8003a2e:	d10e      	bne.n	8003a4e <__mcmp+0x2a>
 8003a30:	3314      	adds	r3, #20
 8003a32:	3114      	adds	r1, #20
 8003a34:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003a38:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8003a3c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003a40:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003a44:	4295      	cmp	r5, r2
 8003a46:	d003      	beq.n	8003a50 <__mcmp+0x2c>
 8003a48:	d205      	bcs.n	8003a56 <__mcmp+0x32>
 8003a4a:	f04f 30ff 	mov.w	r0, #4294967295
 8003a4e:	bd30      	pop	{r4, r5, pc}
 8003a50:	42a3      	cmp	r3, r4
 8003a52:	d3f3      	bcc.n	8003a3c <__mcmp+0x18>
 8003a54:	e7fb      	b.n	8003a4e <__mcmp+0x2a>
 8003a56:	2001      	movs	r0, #1
 8003a58:	e7f9      	b.n	8003a4e <__mcmp+0x2a>
	...

08003a5c <__mdiff>:
 8003a5c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a60:	4689      	mov	r9, r1
 8003a62:	4606      	mov	r6, r0
 8003a64:	4611      	mov	r1, r2
 8003a66:	4648      	mov	r0, r9
 8003a68:	4614      	mov	r4, r2
 8003a6a:	f7ff ffdb 	bl	8003a24 <__mcmp>
 8003a6e:	1e05      	subs	r5, r0, #0
 8003a70:	d112      	bne.n	8003a98 <__mdiff+0x3c>
 8003a72:	4629      	mov	r1, r5
 8003a74:	4630      	mov	r0, r6
 8003a76:	f7ff fd5d 	bl	8003534 <_Balloc>
 8003a7a:	4602      	mov	r2, r0
 8003a7c:	b928      	cbnz	r0, 8003a8a <__mdiff+0x2e>
 8003a7e:	f240 2137 	movw	r1, #567	@ 0x237
 8003a82:	4b3e      	ldr	r3, [pc, #248]	@ (8003b7c <__mdiff+0x120>)
 8003a84:	483e      	ldr	r0, [pc, #248]	@ (8003b80 <__mdiff+0x124>)
 8003a86:	f000 fb0d 	bl	80040a4 <__assert_func>
 8003a8a:	2301      	movs	r3, #1
 8003a8c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003a90:	4610      	mov	r0, r2
 8003a92:	b003      	add	sp, #12
 8003a94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a98:	bfbc      	itt	lt
 8003a9a:	464b      	movlt	r3, r9
 8003a9c:	46a1      	movlt	r9, r4
 8003a9e:	4630      	mov	r0, r6
 8003aa0:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003aa4:	bfba      	itte	lt
 8003aa6:	461c      	movlt	r4, r3
 8003aa8:	2501      	movlt	r5, #1
 8003aaa:	2500      	movge	r5, #0
 8003aac:	f7ff fd42 	bl	8003534 <_Balloc>
 8003ab0:	4602      	mov	r2, r0
 8003ab2:	b918      	cbnz	r0, 8003abc <__mdiff+0x60>
 8003ab4:	f240 2145 	movw	r1, #581	@ 0x245
 8003ab8:	4b30      	ldr	r3, [pc, #192]	@ (8003b7c <__mdiff+0x120>)
 8003aba:	e7e3      	b.n	8003a84 <__mdiff+0x28>
 8003abc:	f100 0b14 	add.w	fp, r0, #20
 8003ac0:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003ac4:	f109 0310 	add.w	r3, r9, #16
 8003ac8:	60c5      	str	r5, [r0, #12]
 8003aca:	f04f 0c00 	mov.w	ip, #0
 8003ace:	f109 0514 	add.w	r5, r9, #20
 8003ad2:	46d9      	mov	r9, fp
 8003ad4:	6926      	ldr	r6, [r4, #16]
 8003ad6:	f104 0e14 	add.w	lr, r4, #20
 8003ada:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003ade:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003ae2:	9301      	str	r3, [sp, #4]
 8003ae4:	9b01      	ldr	r3, [sp, #4]
 8003ae6:	f85e 0b04 	ldr.w	r0, [lr], #4
 8003aea:	f853 af04 	ldr.w	sl, [r3, #4]!
 8003aee:	b281      	uxth	r1, r0
 8003af0:	9301      	str	r3, [sp, #4]
 8003af2:	fa1f f38a 	uxth.w	r3, sl
 8003af6:	1a5b      	subs	r3, r3, r1
 8003af8:	0c00      	lsrs	r0, r0, #16
 8003afa:	4463      	add	r3, ip
 8003afc:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8003b00:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8003b04:	b29b      	uxth	r3, r3
 8003b06:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003b0a:	4576      	cmp	r6, lr
 8003b0c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003b10:	f849 3b04 	str.w	r3, [r9], #4
 8003b14:	d8e6      	bhi.n	8003ae4 <__mdiff+0x88>
 8003b16:	1b33      	subs	r3, r6, r4
 8003b18:	3b15      	subs	r3, #21
 8003b1a:	f023 0303 	bic.w	r3, r3, #3
 8003b1e:	3415      	adds	r4, #21
 8003b20:	3304      	adds	r3, #4
 8003b22:	42a6      	cmp	r6, r4
 8003b24:	bf38      	it	cc
 8003b26:	2304      	movcc	r3, #4
 8003b28:	441d      	add	r5, r3
 8003b2a:	445b      	add	r3, fp
 8003b2c:	461e      	mov	r6, r3
 8003b2e:	462c      	mov	r4, r5
 8003b30:	4544      	cmp	r4, r8
 8003b32:	d30e      	bcc.n	8003b52 <__mdiff+0xf6>
 8003b34:	f108 0103 	add.w	r1, r8, #3
 8003b38:	1b49      	subs	r1, r1, r5
 8003b3a:	f021 0103 	bic.w	r1, r1, #3
 8003b3e:	3d03      	subs	r5, #3
 8003b40:	45a8      	cmp	r8, r5
 8003b42:	bf38      	it	cc
 8003b44:	2100      	movcc	r1, #0
 8003b46:	440b      	add	r3, r1
 8003b48:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003b4c:	b199      	cbz	r1, 8003b76 <__mdiff+0x11a>
 8003b4e:	6117      	str	r7, [r2, #16]
 8003b50:	e79e      	b.n	8003a90 <__mdiff+0x34>
 8003b52:	46e6      	mov	lr, ip
 8003b54:	f854 1b04 	ldr.w	r1, [r4], #4
 8003b58:	fa1f fc81 	uxth.w	ip, r1
 8003b5c:	44f4      	add	ip, lr
 8003b5e:	0c08      	lsrs	r0, r1, #16
 8003b60:	4471      	add	r1, lr
 8003b62:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8003b66:	b289      	uxth	r1, r1
 8003b68:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8003b6c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003b70:	f846 1b04 	str.w	r1, [r6], #4
 8003b74:	e7dc      	b.n	8003b30 <__mdiff+0xd4>
 8003b76:	3f01      	subs	r7, #1
 8003b78:	e7e6      	b.n	8003b48 <__mdiff+0xec>
 8003b7a:	bf00      	nop
 8003b7c:	080048c2 	.word	0x080048c2
 8003b80:	080048d3 	.word	0x080048d3

08003b84 <__d2b>:
 8003b84:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 8003b88:	2101      	movs	r1, #1
 8003b8a:	4690      	mov	r8, r2
 8003b8c:	4699      	mov	r9, r3
 8003b8e:	9e08      	ldr	r6, [sp, #32]
 8003b90:	f7ff fcd0 	bl	8003534 <_Balloc>
 8003b94:	4604      	mov	r4, r0
 8003b96:	b930      	cbnz	r0, 8003ba6 <__d2b+0x22>
 8003b98:	4602      	mov	r2, r0
 8003b9a:	f240 310f 	movw	r1, #783	@ 0x30f
 8003b9e:	4b23      	ldr	r3, [pc, #140]	@ (8003c2c <__d2b+0xa8>)
 8003ba0:	4823      	ldr	r0, [pc, #140]	@ (8003c30 <__d2b+0xac>)
 8003ba2:	f000 fa7f 	bl	80040a4 <__assert_func>
 8003ba6:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003baa:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003bae:	b10d      	cbz	r5, 8003bb4 <__d2b+0x30>
 8003bb0:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003bb4:	9301      	str	r3, [sp, #4]
 8003bb6:	f1b8 0300 	subs.w	r3, r8, #0
 8003bba:	d024      	beq.n	8003c06 <__d2b+0x82>
 8003bbc:	4668      	mov	r0, sp
 8003bbe:	9300      	str	r3, [sp, #0]
 8003bc0:	f7ff fd7f 	bl	80036c2 <__lo0bits>
 8003bc4:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003bc8:	b1d8      	cbz	r0, 8003c02 <__d2b+0x7e>
 8003bca:	f1c0 0320 	rsb	r3, r0, #32
 8003bce:	fa02 f303 	lsl.w	r3, r2, r3
 8003bd2:	430b      	orrs	r3, r1
 8003bd4:	40c2      	lsrs	r2, r0
 8003bd6:	6163      	str	r3, [r4, #20]
 8003bd8:	9201      	str	r2, [sp, #4]
 8003bda:	9b01      	ldr	r3, [sp, #4]
 8003bdc:	2b00      	cmp	r3, #0
 8003bde:	bf0c      	ite	eq
 8003be0:	2201      	moveq	r2, #1
 8003be2:	2202      	movne	r2, #2
 8003be4:	61a3      	str	r3, [r4, #24]
 8003be6:	6122      	str	r2, [r4, #16]
 8003be8:	b1ad      	cbz	r5, 8003c16 <__d2b+0x92>
 8003bea:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003bee:	4405      	add	r5, r0
 8003bf0:	6035      	str	r5, [r6, #0]
 8003bf2:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003bf6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003bf8:	6018      	str	r0, [r3, #0]
 8003bfa:	4620      	mov	r0, r4
 8003bfc:	b002      	add	sp, #8
 8003bfe:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8003c02:	6161      	str	r1, [r4, #20]
 8003c04:	e7e9      	b.n	8003bda <__d2b+0x56>
 8003c06:	a801      	add	r0, sp, #4
 8003c08:	f7ff fd5b 	bl	80036c2 <__lo0bits>
 8003c0c:	9b01      	ldr	r3, [sp, #4]
 8003c0e:	2201      	movs	r2, #1
 8003c10:	6163      	str	r3, [r4, #20]
 8003c12:	3020      	adds	r0, #32
 8003c14:	e7e7      	b.n	8003be6 <__d2b+0x62>
 8003c16:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8003c1a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003c1e:	6030      	str	r0, [r6, #0]
 8003c20:	6918      	ldr	r0, [r3, #16]
 8003c22:	f7ff fd2f 	bl	8003684 <__hi0bits>
 8003c26:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003c2a:	e7e4      	b.n	8003bf6 <__d2b+0x72>
 8003c2c:	080048c2 	.word	0x080048c2
 8003c30:	080048d3 	.word	0x080048d3

08003c34 <__ssputs_r>:
 8003c34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003c38:	461f      	mov	r7, r3
 8003c3a:	688e      	ldr	r6, [r1, #8]
 8003c3c:	4682      	mov	sl, r0
 8003c3e:	42be      	cmp	r6, r7
 8003c40:	460c      	mov	r4, r1
 8003c42:	4690      	mov	r8, r2
 8003c44:	680b      	ldr	r3, [r1, #0]
 8003c46:	d82d      	bhi.n	8003ca4 <__ssputs_r+0x70>
 8003c48:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003c4c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8003c50:	d026      	beq.n	8003ca0 <__ssputs_r+0x6c>
 8003c52:	6965      	ldr	r5, [r4, #20]
 8003c54:	6909      	ldr	r1, [r1, #16]
 8003c56:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003c5a:	eba3 0901 	sub.w	r9, r3, r1
 8003c5e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003c62:	1c7b      	adds	r3, r7, #1
 8003c64:	444b      	add	r3, r9
 8003c66:	106d      	asrs	r5, r5, #1
 8003c68:	429d      	cmp	r5, r3
 8003c6a:	bf38      	it	cc
 8003c6c:	461d      	movcc	r5, r3
 8003c6e:	0553      	lsls	r3, r2, #21
 8003c70:	d527      	bpl.n	8003cc2 <__ssputs_r+0x8e>
 8003c72:	4629      	mov	r1, r5
 8003c74:	f7ff fbd2 	bl	800341c <_malloc_r>
 8003c78:	4606      	mov	r6, r0
 8003c7a:	b360      	cbz	r0, 8003cd6 <__ssputs_r+0xa2>
 8003c7c:	464a      	mov	r2, r9
 8003c7e:	6921      	ldr	r1, [r4, #16]
 8003c80:	f000 fa02 	bl	8004088 <memcpy>
 8003c84:	89a3      	ldrh	r3, [r4, #12]
 8003c86:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8003c8a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003c8e:	81a3      	strh	r3, [r4, #12]
 8003c90:	6126      	str	r6, [r4, #16]
 8003c92:	444e      	add	r6, r9
 8003c94:	6026      	str	r6, [r4, #0]
 8003c96:	463e      	mov	r6, r7
 8003c98:	6165      	str	r5, [r4, #20]
 8003c9a:	eba5 0509 	sub.w	r5, r5, r9
 8003c9e:	60a5      	str	r5, [r4, #8]
 8003ca0:	42be      	cmp	r6, r7
 8003ca2:	d900      	bls.n	8003ca6 <__ssputs_r+0x72>
 8003ca4:	463e      	mov	r6, r7
 8003ca6:	4632      	mov	r2, r6
 8003ca8:	4641      	mov	r1, r8
 8003caa:	6820      	ldr	r0, [r4, #0]
 8003cac:	f000 f9c2 	bl	8004034 <memmove>
 8003cb0:	2000      	movs	r0, #0
 8003cb2:	68a3      	ldr	r3, [r4, #8]
 8003cb4:	1b9b      	subs	r3, r3, r6
 8003cb6:	60a3      	str	r3, [r4, #8]
 8003cb8:	6823      	ldr	r3, [r4, #0]
 8003cba:	4433      	add	r3, r6
 8003cbc:	6023      	str	r3, [r4, #0]
 8003cbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003cc2:	462a      	mov	r2, r5
 8003cc4:	f000 fa32 	bl	800412c <_realloc_r>
 8003cc8:	4606      	mov	r6, r0
 8003cca:	2800      	cmp	r0, #0
 8003ccc:	d1e0      	bne.n	8003c90 <__ssputs_r+0x5c>
 8003cce:	4650      	mov	r0, sl
 8003cd0:	6921      	ldr	r1, [r4, #16]
 8003cd2:	f7ff fb31 	bl	8003338 <_free_r>
 8003cd6:	230c      	movs	r3, #12
 8003cd8:	f8ca 3000 	str.w	r3, [sl]
 8003cdc:	89a3      	ldrh	r3, [r4, #12]
 8003cde:	f04f 30ff 	mov.w	r0, #4294967295
 8003ce2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003ce6:	81a3      	strh	r3, [r4, #12]
 8003ce8:	e7e9      	b.n	8003cbe <__ssputs_r+0x8a>
	...

08003cec <_svfiprintf_r>:
 8003cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003cf0:	4698      	mov	r8, r3
 8003cf2:	898b      	ldrh	r3, [r1, #12]
 8003cf4:	4607      	mov	r7, r0
 8003cf6:	061b      	lsls	r3, r3, #24
 8003cf8:	460d      	mov	r5, r1
 8003cfa:	4614      	mov	r4, r2
 8003cfc:	b09d      	sub	sp, #116	@ 0x74
 8003cfe:	d510      	bpl.n	8003d22 <_svfiprintf_r+0x36>
 8003d00:	690b      	ldr	r3, [r1, #16]
 8003d02:	b973      	cbnz	r3, 8003d22 <_svfiprintf_r+0x36>
 8003d04:	2140      	movs	r1, #64	@ 0x40
 8003d06:	f7ff fb89 	bl	800341c <_malloc_r>
 8003d0a:	6028      	str	r0, [r5, #0]
 8003d0c:	6128      	str	r0, [r5, #16]
 8003d0e:	b930      	cbnz	r0, 8003d1e <_svfiprintf_r+0x32>
 8003d10:	230c      	movs	r3, #12
 8003d12:	603b      	str	r3, [r7, #0]
 8003d14:	f04f 30ff 	mov.w	r0, #4294967295
 8003d18:	b01d      	add	sp, #116	@ 0x74
 8003d1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003d1e:	2340      	movs	r3, #64	@ 0x40
 8003d20:	616b      	str	r3, [r5, #20]
 8003d22:	2300      	movs	r3, #0
 8003d24:	9309      	str	r3, [sp, #36]	@ 0x24
 8003d26:	2320      	movs	r3, #32
 8003d28:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003d2c:	2330      	movs	r3, #48	@ 0x30
 8003d2e:	f04f 0901 	mov.w	r9, #1
 8003d32:	f8cd 800c 	str.w	r8, [sp, #12]
 8003d36:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 8003ed0 <_svfiprintf_r+0x1e4>
 8003d3a:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003d3e:	4623      	mov	r3, r4
 8003d40:	469a      	mov	sl, r3
 8003d42:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003d46:	b10a      	cbz	r2, 8003d4c <_svfiprintf_r+0x60>
 8003d48:	2a25      	cmp	r2, #37	@ 0x25
 8003d4a:	d1f9      	bne.n	8003d40 <_svfiprintf_r+0x54>
 8003d4c:	ebba 0b04 	subs.w	fp, sl, r4
 8003d50:	d00b      	beq.n	8003d6a <_svfiprintf_r+0x7e>
 8003d52:	465b      	mov	r3, fp
 8003d54:	4622      	mov	r2, r4
 8003d56:	4629      	mov	r1, r5
 8003d58:	4638      	mov	r0, r7
 8003d5a:	f7ff ff6b 	bl	8003c34 <__ssputs_r>
 8003d5e:	3001      	adds	r0, #1
 8003d60:	f000 80a7 	beq.w	8003eb2 <_svfiprintf_r+0x1c6>
 8003d64:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003d66:	445a      	add	r2, fp
 8003d68:	9209      	str	r2, [sp, #36]	@ 0x24
 8003d6a:	f89a 3000 	ldrb.w	r3, [sl]
 8003d6e:	2b00      	cmp	r3, #0
 8003d70:	f000 809f 	beq.w	8003eb2 <_svfiprintf_r+0x1c6>
 8003d74:	2300      	movs	r3, #0
 8003d76:	f04f 32ff 	mov.w	r2, #4294967295
 8003d7a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003d7e:	f10a 0a01 	add.w	sl, sl, #1
 8003d82:	9304      	str	r3, [sp, #16]
 8003d84:	9307      	str	r3, [sp, #28]
 8003d86:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003d8a:	931a      	str	r3, [sp, #104]	@ 0x68
 8003d8c:	4654      	mov	r4, sl
 8003d8e:	2205      	movs	r2, #5
 8003d90:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003d94:	484e      	ldr	r0, [pc, #312]	@ (8003ed0 <_svfiprintf_r+0x1e4>)
 8003d96:	f7fe fc70 	bl	800267a <memchr>
 8003d9a:	9a04      	ldr	r2, [sp, #16]
 8003d9c:	b9d8      	cbnz	r0, 8003dd6 <_svfiprintf_r+0xea>
 8003d9e:	06d0      	lsls	r0, r2, #27
 8003da0:	bf44      	itt	mi
 8003da2:	2320      	movmi	r3, #32
 8003da4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003da8:	0711      	lsls	r1, r2, #28
 8003daa:	bf44      	itt	mi
 8003dac:	232b      	movmi	r3, #43	@ 0x2b
 8003dae:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003db2:	f89a 3000 	ldrb.w	r3, [sl]
 8003db6:	2b2a      	cmp	r3, #42	@ 0x2a
 8003db8:	d015      	beq.n	8003de6 <_svfiprintf_r+0xfa>
 8003dba:	4654      	mov	r4, sl
 8003dbc:	2000      	movs	r0, #0
 8003dbe:	f04f 0c0a 	mov.w	ip, #10
 8003dc2:	9a07      	ldr	r2, [sp, #28]
 8003dc4:	4621      	mov	r1, r4
 8003dc6:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003dca:	3b30      	subs	r3, #48	@ 0x30
 8003dcc:	2b09      	cmp	r3, #9
 8003dce:	d94b      	bls.n	8003e68 <_svfiprintf_r+0x17c>
 8003dd0:	b1b0      	cbz	r0, 8003e00 <_svfiprintf_r+0x114>
 8003dd2:	9207      	str	r2, [sp, #28]
 8003dd4:	e014      	b.n	8003e00 <_svfiprintf_r+0x114>
 8003dd6:	eba0 0308 	sub.w	r3, r0, r8
 8003dda:	fa09 f303 	lsl.w	r3, r9, r3
 8003dde:	4313      	orrs	r3, r2
 8003de0:	46a2      	mov	sl, r4
 8003de2:	9304      	str	r3, [sp, #16]
 8003de4:	e7d2      	b.n	8003d8c <_svfiprintf_r+0xa0>
 8003de6:	9b03      	ldr	r3, [sp, #12]
 8003de8:	1d19      	adds	r1, r3, #4
 8003dea:	681b      	ldr	r3, [r3, #0]
 8003dec:	9103      	str	r1, [sp, #12]
 8003dee:	2b00      	cmp	r3, #0
 8003df0:	bfbb      	ittet	lt
 8003df2:	425b      	neglt	r3, r3
 8003df4:	f042 0202 	orrlt.w	r2, r2, #2
 8003df8:	9307      	strge	r3, [sp, #28]
 8003dfa:	9307      	strlt	r3, [sp, #28]
 8003dfc:	bfb8      	it	lt
 8003dfe:	9204      	strlt	r2, [sp, #16]
 8003e00:	7823      	ldrb	r3, [r4, #0]
 8003e02:	2b2e      	cmp	r3, #46	@ 0x2e
 8003e04:	d10a      	bne.n	8003e1c <_svfiprintf_r+0x130>
 8003e06:	7863      	ldrb	r3, [r4, #1]
 8003e08:	2b2a      	cmp	r3, #42	@ 0x2a
 8003e0a:	d132      	bne.n	8003e72 <_svfiprintf_r+0x186>
 8003e0c:	9b03      	ldr	r3, [sp, #12]
 8003e0e:	3402      	adds	r4, #2
 8003e10:	1d1a      	adds	r2, r3, #4
 8003e12:	681b      	ldr	r3, [r3, #0]
 8003e14:	9203      	str	r2, [sp, #12]
 8003e16:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003e1a:	9305      	str	r3, [sp, #20]
 8003e1c:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 8003ed4 <_svfiprintf_r+0x1e8>
 8003e20:	2203      	movs	r2, #3
 8003e22:	4650      	mov	r0, sl
 8003e24:	7821      	ldrb	r1, [r4, #0]
 8003e26:	f7fe fc28 	bl	800267a <memchr>
 8003e2a:	b138      	cbz	r0, 8003e3c <_svfiprintf_r+0x150>
 8003e2c:	2240      	movs	r2, #64	@ 0x40
 8003e2e:	9b04      	ldr	r3, [sp, #16]
 8003e30:	eba0 000a 	sub.w	r0, r0, sl
 8003e34:	4082      	lsls	r2, r0
 8003e36:	4313      	orrs	r3, r2
 8003e38:	3401      	adds	r4, #1
 8003e3a:	9304      	str	r3, [sp, #16]
 8003e3c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003e40:	2206      	movs	r2, #6
 8003e42:	4825      	ldr	r0, [pc, #148]	@ (8003ed8 <_svfiprintf_r+0x1ec>)
 8003e44:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003e48:	f7fe fc17 	bl	800267a <memchr>
 8003e4c:	2800      	cmp	r0, #0
 8003e4e:	d036      	beq.n	8003ebe <_svfiprintf_r+0x1d2>
 8003e50:	4b22      	ldr	r3, [pc, #136]	@ (8003edc <_svfiprintf_r+0x1f0>)
 8003e52:	bb1b      	cbnz	r3, 8003e9c <_svfiprintf_r+0x1b0>
 8003e54:	9b03      	ldr	r3, [sp, #12]
 8003e56:	3307      	adds	r3, #7
 8003e58:	f023 0307 	bic.w	r3, r3, #7
 8003e5c:	3308      	adds	r3, #8
 8003e5e:	9303      	str	r3, [sp, #12]
 8003e60:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003e62:	4433      	add	r3, r6
 8003e64:	9309      	str	r3, [sp, #36]	@ 0x24
 8003e66:	e76a      	b.n	8003d3e <_svfiprintf_r+0x52>
 8003e68:	460c      	mov	r4, r1
 8003e6a:	2001      	movs	r0, #1
 8003e6c:	fb0c 3202 	mla	r2, ip, r2, r3
 8003e70:	e7a8      	b.n	8003dc4 <_svfiprintf_r+0xd8>
 8003e72:	2300      	movs	r3, #0
 8003e74:	f04f 0c0a 	mov.w	ip, #10
 8003e78:	4619      	mov	r1, r3
 8003e7a:	3401      	adds	r4, #1
 8003e7c:	9305      	str	r3, [sp, #20]
 8003e7e:	4620      	mov	r0, r4
 8003e80:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003e84:	3a30      	subs	r2, #48	@ 0x30
 8003e86:	2a09      	cmp	r2, #9
 8003e88:	d903      	bls.n	8003e92 <_svfiprintf_r+0x1a6>
 8003e8a:	2b00      	cmp	r3, #0
 8003e8c:	d0c6      	beq.n	8003e1c <_svfiprintf_r+0x130>
 8003e8e:	9105      	str	r1, [sp, #20]
 8003e90:	e7c4      	b.n	8003e1c <_svfiprintf_r+0x130>
 8003e92:	4604      	mov	r4, r0
 8003e94:	2301      	movs	r3, #1
 8003e96:	fb0c 2101 	mla	r1, ip, r1, r2
 8003e9a:	e7f0      	b.n	8003e7e <_svfiprintf_r+0x192>
 8003e9c:	ab03      	add	r3, sp, #12
 8003e9e:	9300      	str	r3, [sp, #0]
 8003ea0:	462a      	mov	r2, r5
 8003ea2:	4638      	mov	r0, r7
 8003ea4:	4b0e      	ldr	r3, [pc, #56]	@ (8003ee0 <_svfiprintf_r+0x1f4>)
 8003ea6:	a904      	add	r1, sp, #16
 8003ea8:	f7fd fe84 	bl	8001bb4 <_printf_float>
 8003eac:	1c42      	adds	r2, r0, #1
 8003eae:	4606      	mov	r6, r0
 8003eb0:	d1d6      	bne.n	8003e60 <_svfiprintf_r+0x174>
 8003eb2:	89ab      	ldrh	r3, [r5, #12]
 8003eb4:	065b      	lsls	r3, r3, #25
 8003eb6:	f53f af2d 	bmi.w	8003d14 <_svfiprintf_r+0x28>
 8003eba:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003ebc:	e72c      	b.n	8003d18 <_svfiprintf_r+0x2c>
 8003ebe:	ab03      	add	r3, sp, #12
 8003ec0:	9300      	str	r3, [sp, #0]
 8003ec2:	462a      	mov	r2, r5
 8003ec4:	4638      	mov	r0, r7
 8003ec6:	4b06      	ldr	r3, [pc, #24]	@ (8003ee0 <_svfiprintf_r+0x1f4>)
 8003ec8:	a904      	add	r1, sp, #16
 8003eca:	f7fe f911 	bl	80020f0 <_printf_i>
 8003ece:	e7ed      	b.n	8003eac <_svfiprintf_r+0x1c0>
 8003ed0:	08004a28 	.word	0x08004a28
 8003ed4:	08004a2e 	.word	0x08004a2e
 8003ed8:	08004a32 	.word	0x08004a32
 8003edc:	08001bb5 	.word	0x08001bb5
 8003ee0:	08003c35 	.word	0x08003c35

08003ee4 <__sflush_r>:
 8003ee4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003ee8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003eea:	0716      	lsls	r6, r2, #28
 8003eec:	4605      	mov	r5, r0
 8003eee:	460c      	mov	r4, r1
 8003ef0:	d454      	bmi.n	8003f9c <__sflush_r+0xb8>
 8003ef2:	684b      	ldr	r3, [r1, #4]
 8003ef4:	2b00      	cmp	r3, #0
 8003ef6:	dc02      	bgt.n	8003efe <__sflush_r+0x1a>
 8003ef8:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003efa:	2b00      	cmp	r3, #0
 8003efc:	dd48      	ble.n	8003f90 <__sflush_r+0xac>
 8003efe:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003f00:	2e00      	cmp	r6, #0
 8003f02:	d045      	beq.n	8003f90 <__sflush_r+0xac>
 8003f04:	2300      	movs	r3, #0
 8003f06:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8003f0a:	682f      	ldr	r7, [r5, #0]
 8003f0c:	6a21      	ldr	r1, [r4, #32]
 8003f0e:	602b      	str	r3, [r5, #0]
 8003f10:	d030      	beq.n	8003f74 <__sflush_r+0x90>
 8003f12:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8003f14:	89a3      	ldrh	r3, [r4, #12]
 8003f16:	0759      	lsls	r1, r3, #29
 8003f18:	d505      	bpl.n	8003f26 <__sflush_r+0x42>
 8003f1a:	6863      	ldr	r3, [r4, #4]
 8003f1c:	1ad2      	subs	r2, r2, r3
 8003f1e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8003f20:	b10b      	cbz	r3, 8003f26 <__sflush_r+0x42>
 8003f22:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003f24:	1ad2      	subs	r2, r2, r3
 8003f26:	2300      	movs	r3, #0
 8003f28:	4628      	mov	r0, r5
 8003f2a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003f2c:	6a21      	ldr	r1, [r4, #32]
 8003f2e:	47b0      	blx	r6
 8003f30:	1c43      	adds	r3, r0, #1
 8003f32:	89a3      	ldrh	r3, [r4, #12]
 8003f34:	d106      	bne.n	8003f44 <__sflush_r+0x60>
 8003f36:	6829      	ldr	r1, [r5, #0]
 8003f38:	291d      	cmp	r1, #29
 8003f3a:	d82b      	bhi.n	8003f94 <__sflush_r+0xb0>
 8003f3c:	4a28      	ldr	r2, [pc, #160]	@ (8003fe0 <__sflush_r+0xfc>)
 8003f3e:	410a      	asrs	r2, r1
 8003f40:	07d6      	lsls	r6, r2, #31
 8003f42:	d427      	bmi.n	8003f94 <__sflush_r+0xb0>
 8003f44:	2200      	movs	r2, #0
 8003f46:	6062      	str	r2, [r4, #4]
 8003f48:	6922      	ldr	r2, [r4, #16]
 8003f4a:	04d9      	lsls	r1, r3, #19
 8003f4c:	6022      	str	r2, [r4, #0]
 8003f4e:	d504      	bpl.n	8003f5a <__sflush_r+0x76>
 8003f50:	1c42      	adds	r2, r0, #1
 8003f52:	d101      	bne.n	8003f58 <__sflush_r+0x74>
 8003f54:	682b      	ldr	r3, [r5, #0]
 8003f56:	b903      	cbnz	r3, 8003f5a <__sflush_r+0x76>
 8003f58:	6560      	str	r0, [r4, #84]	@ 0x54
 8003f5a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003f5c:	602f      	str	r7, [r5, #0]
 8003f5e:	b1b9      	cbz	r1, 8003f90 <__sflush_r+0xac>
 8003f60:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003f64:	4299      	cmp	r1, r3
 8003f66:	d002      	beq.n	8003f6e <__sflush_r+0x8a>
 8003f68:	4628      	mov	r0, r5
 8003f6a:	f7ff f9e5 	bl	8003338 <_free_r>
 8003f6e:	2300      	movs	r3, #0
 8003f70:	6363      	str	r3, [r4, #52]	@ 0x34
 8003f72:	e00d      	b.n	8003f90 <__sflush_r+0xac>
 8003f74:	2301      	movs	r3, #1
 8003f76:	4628      	mov	r0, r5
 8003f78:	47b0      	blx	r6
 8003f7a:	4602      	mov	r2, r0
 8003f7c:	1c50      	adds	r0, r2, #1
 8003f7e:	d1c9      	bne.n	8003f14 <__sflush_r+0x30>
 8003f80:	682b      	ldr	r3, [r5, #0]
 8003f82:	2b00      	cmp	r3, #0
 8003f84:	d0c6      	beq.n	8003f14 <__sflush_r+0x30>
 8003f86:	2b1d      	cmp	r3, #29
 8003f88:	d001      	beq.n	8003f8e <__sflush_r+0xaa>
 8003f8a:	2b16      	cmp	r3, #22
 8003f8c:	d11d      	bne.n	8003fca <__sflush_r+0xe6>
 8003f8e:	602f      	str	r7, [r5, #0]
 8003f90:	2000      	movs	r0, #0
 8003f92:	e021      	b.n	8003fd8 <__sflush_r+0xf4>
 8003f94:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003f98:	b21b      	sxth	r3, r3
 8003f9a:	e01a      	b.n	8003fd2 <__sflush_r+0xee>
 8003f9c:	690f      	ldr	r7, [r1, #16]
 8003f9e:	2f00      	cmp	r7, #0
 8003fa0:	d0f6      	beq.n	8003f90 <__sflush_r+0xac>
 8003fa2:	0793      	lsls	r3, r2, #30
 8003fa4:	bf18      	it	ne
 8003fa6:	2300      	movne	r3, #0
 8003fa8:	680e      	ldr	r6, [r1, #0]
 8003faa:	bf08      	it	eq
 8003fac:	694b      	ldreq	r3, [r1, #20]
 8003fae:	1bf6      	subs	r6, r6, r7
 8003fb0:	600f      	str	r7, [r1, #0]
 8003fb2:	608b      	str	r3, [r1, #8]
 8003fb4:	2e00      	cmp	r6, #0
 8003fb6:	ddeb      	ble.n	8003f90 <__sflush_r+0xac>
 8003fb8:	4633      	mov	r3, r6
 8003fba:	463a      	mov	r2, r7
 8003fbc:	4628      	mov	r0, r5
 8003fbe:	6a21      	ldr	r1, [r4, #32]
 8003fc0:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8003fc4:	47e0      	blx	ip
 8003fc6:	2800      	cmp	r0, #0
 8003fc8:	dc07      	bgt.n	8003fda <__sflush_r+0xf6>
 8003fca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003fce:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003fd2:	f04f 30ff 	mov.w	r0, #4294967295
 8003fd6:	81a3      	strh	r3, [r4, #12]
 8003fd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003fda:	4407      	add	r7, r0
 8003fdc:	1a36      	subs	r6, r6, r0
 8003fde:	e7e9      	b.n	8003fb4 <__sflush_r+0xd0>
 8003fe0:	dfbffffe 	.word	0xdfbffffe

08003fe4 <_fflush_r>:
 8003fe4:	b538      	push	{r3, r4, r5, lr}
 8003fe6:	690b      	ldr	r3, [r1, #16]
 8003fe8:	4605      	mov	r5, r0
 8003fea:	460c      	mov	r4, r1
 8003fec:	b913      	cbnz	r3, 8003ff4 <_fflush_r+0x10>
 8003fee:	2500      	movs	r5, #0
 8003ff0:	4628      	mov	r0, r5
 8003ff2:	bd38      	pop	{r3, r4, r5, pc}
 8003ff4:	b118      	cbz	r0, 8003ffe <_fflush_r+0x1a>
 8003ff6:	6a03      	ldr	r3, [r0, #32]
 8003ff8:	b90b      	cbnz	r3, 8003ffe <_fflush_r+0x1a>
 8003ffa:	f7fe fa25 	bl	8002448 <__sinit>
 8003ffe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004002:	2b00      	cmp	r3, #0
 8004004:	d0f3      	beq.n	8003fee <_fflush_r+0xa>
 8004006:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8004008:	07d0      	lsls	r0, r2, #31
 800400a:	d404      	bmi.n	8004016 <_fflush_r+0x32>
 800400c:	0599      	lsls	r1, r3, #22
 800400e:	d402      	bmi.n	8004016 <_fflush_r+0x32>
 8004010:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004012:	f7fe fb30 	bl	8002676 <__retarget_lock_acquire_recursive>
 8004016:	4628      	mov	r0, r5
 8004018:	4621      	mov	r1, r4
 800401a:	f7ff ff63 	bl	8003ee4 <__sflush_r>
 800401e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004020:	4605      	mov	r5, r0
 8004022:	07da      	lsls	r2, r3, #31
 8004024:	d4e4      	bmi.n	8003ff0 <_fflush_r+0xc>
 8004026:	89a3      	ldrh	r3, [r4, #12]
 8004028:	059b      	lsls	r3, r3, #22
 800402a:	d4e1      	bmi.n	8003ff0 <_fflush_r+0xc>
 800402c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800402e:	f7fe fb23 	bl	8002678 <__retarget_lock_release_recursive>
 8004032:	e7dd      	b.n	8003ff0 <_fflush_r+0xc>

08004034 <memmove>:
 8004034:	4288      	cmp	r0, r1
 8004036:	b510      	push	{r4, lr}
 8004038:	eb01 0402 	add.w	r4, r1, r2
 800403c:	d902      	bls.n	8004044 <memmove+0x10>
 800403e:	4284      	cmp	r4, r0
 8004040:	4623      	mov	r3, r4
 8004042:	d807      	bhi.n	8004054 <memmove+0x20>
 8004044:	1e43      	subs	r3, r0, #1
 8004046:	42a1      	cmp	r1, r4
 8004048:	d008      	beq.n	800405c <memmove+0x28>
 800404a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800404e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004052:	e7f8      	b.n	8004046 <memmove+0x12>
 8004054:	4601      	mov	r1, r0
 8004056:	4402      	add	r2, r0
 8004058:	428a      	cmp	r2, r1
 800405a:	d100      	bne.n	800405e <memmove+0x2a>
 800405c:	bd10      	pop	{r4, pc}
 800405e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004062:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004066:	e7f7      	b.n	8004058 <memmove+0x24>

08004068 <_sbrk_r>:
 8004068:	b538      	push	{r3, r4, r5, lr}
 800406a:	2300      	movs	r3, #0
 800406c:	4d05      	ldr	r5, [pc, #20]	@ (8004084 <_sbrk_r+0x1c>)
 800406e:	4604      	mov	r4, r0
 8004070:	4608      	mov	r0, r1
 8004072:	602b      	str	r3, [r5, #0]
 8004074:	f7fd fc8c 	bl	8001990 <_sbrk>
 8004078:	1c43      	adds	r3, r0, #1
 800407a:	d102      	bne.n	8004082 <_sbrk_r+0x1a>
 800407c:	682b      	ldr	r3, [r5, #0]
 800407e:	b103      	cbz	r3, 8004082 <_sbrk_r+0x1a>
 8004080:	6023      	str	r3, [r4, #0]
 8004082:	bd38      	pop	{r3, r4, r5, pc}
 8004084:	20000330 	.word	0x20000330

08004088 <memcpy>:
 8004088:	440a      	add	r2, r1
 800408a:	4291      	cmp	r1, r2
 800408c:	f100 33ff 	add.w	r3, r0, #4294967295
 8004090:	d100      	bne.n	8004094 <memcpy+0xc>
 8004092:	4770      	bx	lr
 8004094:	b510      	push	{r4, lr}
 8004096:	f811 4b01 	ldrb.w	r4, [r1], #1
 800409a:	4291      	cmp	r1, r2
 800409c:	f803 4f01 	strb.w	r4, [r3, #1]!
 80040a0:	d1f9      	bne.n	8004096 <memcpy+0xe>
 80040a2:	bd10      	pop	{r4, pc}

080040a4 <__assert_func>:
 80040a4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80040a6:	4614      	mov	r4, r2
 80040a8:	461a      	mov	r2, r3
 80040aa:	4b09      	ldr	r3, [pc, #36]	@ (80040d0 <__assert_func+0x2c>)
 80040ac:	4605      	mov	r5, r0
 80040ae:	681b      	ldr	r3, [r3, #0]
 80040b0:	68d8      	ldr	r0, [r3, #12]
 80040b2:	b954      	cbnz	r4, 80040ca <__assert_func+0x26>
 80040b4:	4b07      	ldr	r3, [pc, #28]	@ (80040d4 <__assert_func+0x30>)
 80040b6:	461c      	mov	r4, r3
 80040b8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80040bc:	9100      	str	r1, [sp, #0]
 80040be:	462b      	mov	r3, r5
 80040c0:	4905      	ldr	r1, [pc, #20]	@ (80040d8 <__assert_func+0x34>)
 80040c2:	f000 f86f 	bl	80041a4 <fiprintf>
 80040c6:	f000 f87f 	bl	80041c8 <abort>
 80040ca:	4b04      	ldr	r3, [pc, #16]	@ (80040dc <__assert_func+0x38>)
 80040cc:	e7f4      	b.n	80040b8 <__assert_func+0x14>
 80040ce:	bf00      	nop
 80040d0:	20000010 	.word	0x20000010
 80040d4:	08004a7e 	.word	0x08004a7e
 80040d8:	08004a50 	.word	0x08004a50
 80040dc:	08004a43 	.word	0x08004a43

080040e0 <_calloc_r>:
 80040e0:	b570      	push	{r4, r5, r6, lr}
 80040e2:	fba1 5402 	umull	r5, r4, r1, r2
 80040e6:	b93c      	cbnz	r4, 80040f8 <_calloc_r+0x18>
 80040e8:	4629      	mov	r1, r5
 80040ea:	f7ff f997 	bl	800341c <_malloc_r>
 80040ee:	4606      	mov	r6, r0
 80040f0:	b928      	cbnz	r0, 80040fe <_calloc_r+0x1e>
 80040f2:	2600      	movs	r6, #0
 80040f4:	4630      	mov	r0, r6
 80040f6:	bd70      	pop	{r4, r5, r6, pc}
 80040f8:	220c      	movs	r2, #12
 80040fa:	6002      	str	r2, [r0, #0]
 80040fc:	e7f9      	b.n	80040f2 <_calloc_r+0x12>
 80040fe:	462a      	mov	r2, r5
 8004100:	4621      	mov	r1, r4
 8004102:	f7fe fa3a 	bl	800257a <memset>
 8004106:	e7f5      	b.n	80040f4 <_calloc_r+0x14>

08004108 <__ascii_mbtowc>:
 8004108:	b082      	sub	sp, #8
 800410a:	b901      	cbnz	r1, 800410e <__ascii_mbtowc+0x6>
 800410c:	a901      	add	r1, sp, #4
 800410e:	b142      	cbz	r2, 8004122 <__ascii_mbtowc+0x1a>
 8004110:	b14b      	cbz	r3, 8004126 <__ascii_mbtowc+0x1e>
 8004112:	7813      	ldrb	r3, [r2, #0]
 8004114:	600b      	str	r3, [r1, #0]
 8004116:	7812      	ldrb	r2, [r2, #0]
 8004118:	1e10      	subs	r0, r2, #0
 800411a:	bf18      	it	ne
 800411c:	2001      	movne	r0, #1
 800411e:	b002      	add	sp, #8
 8004120:	4770      	bx	lr
 8004122:	4610      	mov	r0, r2
 8004124:	e7fb      	b.n	800411e <__ascii_mbtowc+0x16>
 8004126:	f06f 0001 	mvn.w	r0, #1
 800412a:	e7f8      	b.n	800411e <__ascii_mbtowc+0x16>

0800412c <_realloc_r>:
 800412c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004130:	4680      	mov	r8, r0
 8004132:	4615      	mov	r5, r2
 8004134:	460c      	mov	r4, r1
 8004136:	b921      	cbnz	r1, 8004142 <_realloc_r+0x16>
 8004138:	4611      	mov	r1, r2
 800413a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800413e:	f7ff b96d 	b.w	800341c <_malloc_r>
 8004142:	b92a      	cbnz	r2, 8004150 <_realloc_r+0x24>
 8004144:	f7ff f8f8 	bl	8003338 <_free_r>
 8004148:	2400      	movs	r4, #0
 800414a:	4620      	mov	r0, r4
 800414c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004150:	f000 f841 	bl	80041d6 <_malloc_usable_size_r>
 8004154:	4285      	cmp	r5, r0
 8004156:	4606      	mov	r6, r0
 8004158:	d802      	bhi.n	8004160 <_realloc_r+0x34>
 800415a:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800415e:	d8f4      	bhi.n	800414a <_realloc_r+0x1e>
 8004160:	4629      	mov	r1, r5
 8004162:	4640      	mov	r0, r8
 8004164:	f7ff f95a 	bl	800341c <_malloc_r>
 8004168:	4607      	mov	r7, r0
 800416a:	2800      	cmp	r0, #0
 800416c:	d0ec      	beq.n	8004148 <_realloc_r+0x1c>
 800416e:	42b5      	cmp	r5, r6
 8004170:	462a      	mov	r2, r5
 8004172:	4621      	mov	r1, r4
 8004174:	bf28      	it	cs
 8004176:	4632      	movcs	r2, r6
 8004178:	f7ff ff86 	bl	8004088 <memcpy>
 800417c:	4621      	mov	r1, r4
 800417e:	4640      	mov	r0, r8
 8004180:	f7ff f8da 	bl	8003338 <_free_r>
 8004184:	463c      	mov	r4, r7
 8004186:	e7e0      	b.n	800414a <_realloc_r+0x1e>

08004188 <__ascii_wctomb>:
 8004188:	4603      	mov	r3, r0
 800418a:	4608      	mov	r0, r1
 800418c:	b141      	cbz	r1, 80041a0 <__ascii_wctomb+0x18>
 800418e:	2aff      	cmp	r2, #255	@ 0xff
 8004190:	d904      	bls.n	800419c <__ascii_wctomb+0x14>
 8004192:	228a      	movs	r2, #138	@ 0x8a
 8004194:	f04f 30ff 	mov.w	r0, #4294967295
 8004198:	601a      	str	r2, [r3, #0]
 800419a:	4770      	bx	lr
 800419c:	2001      	movs	r0, #1
 800419e:	700a      	strb	r2, [r1, #0]
 80041a0:	4770      	bx	lr
	...

080041a4 <fiprintf>:
 80041a4:	b40e      	push	{r1, r2, r3}
 80041a6:	b503      	push	{r0, r1, lr}
 80041a8:	4601      	mov	r1, r0
 80041aa:	ab03      	add	r3, sp, #12
 80041ac:	4805      	ldr	r0, [pc, #20]	@ (80041c4 <fiprintf+0x20>)
 80041ae:	f853 2b04 	ldr.w	r2, [r3], #4
 80041b2:	6800      	ldr	r0, [r0, #0]
 80041b4:	9301      	str	r3, [sp, #4]
 80041b6:	f000 f83d 	bl	8004234 <_vfiprintf_r>
 80041ba:	b002      	add	sp, #8
 80041bc:	f85d eb04 	ldr.w	lr, [sp], #4
 80041c0:	b003      	add	sp, #12
 80041c2:	4770      	bx	lr
 80041c4:	20000010 	.word	0x20000010

080041c8 <abort>:
 80041c8:	2006      	movs	r0, #6
 80041ca:	b508      	push	{r3, lr}
 80041cc:	f000 fa06 	bl	80045dc <raise>
 80041d0:	2001      	movs	r0, #1
 80041d2:	f7fd fb68 	bl	80018a6 <_exit>

080041d6 <_malloc_usable_size_r>:
 80041d6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80041da:	1f18      	subs	r0, r3, #4
 80041dc:	2b00      	cmp	r3, #0
 80041de:	bfbc      	itt	lt
 80041e0:	580b      	ldrlt	r3, [r1, r0]
 80041e2:	18c0      	addlt	r0, r0, r3
 80041e4:	4770      	bx	lr

080041e6 <__sfputc_r>:
 80041e6:	6893      	ldr	r3, [r2, #8]
 80041e8:	b410      	push	{r4}
 80041ea:	3b01      	subs	r3, #1
 80041ec:	2b00      	cmp	r3, #0
 80041ee:	6093      	str	r3, [r2, #8]
 80041f0:	da07      	bge.n	8004202 <__sfputc_r+0x1c>
 80041f2:	6994      	ldr	r4, [r2, #24]
 80041f4:	42a3      	cmp	r3, r4
 80041f6:	db01      	blt.n	80041fc <__sfputc_r+0x16>
 80041f8:	290a      	cmp	r1, #10
 80041fa:	d102      	bne.n	8004202 <__sfputc_r+0x1c>
 80041fc:	bc10      	pop	{r4}
 80041fe:	f000 b931 	b.w	8004464 <__swbuf_r>
 8004202:	6813      	ldr	r3, [r2, #0]
 8004204:	1c58      	adds	r0, r3, #1
 8004206:	6010      	str	r0, [r2, #0]
 8004208:	7019      	strb	r1, [r3, #0]
 800420a:	4608      	mov	r0, r1
 800420c:	bc10      	pop	{r4}
 800420e:	4770      	bx	lr

08004210 <__sfputs_r>:
 8004210:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004212:	4606      	mov	r6, r0
 8004214:	460f      	mov	r7, r1
 8004216:	4614      	mov	r4, r2
 8004218:	18d5      	adds	r5, r2, r3
 800421a:	42ac      	cmp	r4, r5
 800421c:	d101      	bne.n	8004222 <__sfputs_r+0x12>
 800421e:	2000      	movs	r0, #0
 8004220:	e007      	b.n	8004232 <__sfputs_r+0x22>
 8004222:	463a      	mov	r2, r7
 8004224:	4630      	mov	r0, r6
 8004226:	f814 1b01 	ldrb.w	r1, [r4], #1
 800422a:	f7ff ffdc 	bl	80041e6 <__sfputc_r>
 800422e:	1c43      	adds	r3, r0, #1
 8004230:	d1f3      	bne.n	800421a <__sfputs_r+0xa>
 8004232:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004234 <_vfiprintf_r>:
 8004234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004238:	460d      	mov	r5, r1
 800423a:	4614      	mov	r4, r2
 800423c:	4698      	mov	r8, r3
 800423e:	4606      	mov	r6, r0
 8004240:	b09d      	sub	sp, #116	@ 0x74
 8004242:	b118      	cbz	r0, 800424c <_vfiprintf_r+0x18>
 8004244:	6a03      	ldr	r3, [r0, #32]
 8004246:	b90b      	cbnz	r3, 800424c <_vfiprintf_r+0x18>
 8004248:	f7fe f8fe 	bl	8002448 <__sinit>
 800424c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800424e:	07d9      	lsls	r1, r3, #31
 8004250:	d405      	bmi.n	800425e <_vfiprintf_r+0x2a>
 8004252:	89ab      	ldrh	r3, [r5, #12]
 8004254:	059a      	lsls	r2, r3, #22
 8004256:	d402      	bmi.n	800425e <_vfiprintf_r+0x2a>
 8004258:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800425a:	f7fe fa0c 	bl	8002676 <__retarget_lock_acquire_recursive>
 800425e:	89ab      	ldrh	r3, [r5, #12]
 8004260:	071b      	lsls	r3, r3, #28
 8004262:	d501      	bpl.n	8004268 <_vfiprintf_r+0x34>
 8004264:	692b      	ldr	r3, [r5, #16]
 8004266:	b99b      	cbnz	r3, 8004290 <_vfiprintf_r+0x5c>
 8004268:	4629      	mov	r1, r5
 800426a:	4630      	mov	r0, r6
 800426c:	f000 f938 	bl	80044e0 <__swsetup_r>
 8004270:	b170      	cbz	r0, 8004290 <_vfiprintf_r+0x5c>
 8004272:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004274:	07dc      	lsls	r4, r3, #31
 8004276:	d504      	bpl.n	8004282 <_vfiprintf_r+0x4e>
 8004278:	f04f 30ff 	mov.w	r0, #4294967295
 800427c:	b01d      	add	sp, #116	@ 0x74
 800427e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004282:	89ab      	ldrh	r3, [r5, #12]
 8004284:	0598      	lsls	r0, r3, #22
 8004286:	d4f7      	bmi.n	8004278 <_vfiprintf_r+0x44>
 8004288:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800428a:	f7fe f9f5 	bl	8002678 <__retarget_lock_release_recursive>
 800428e:	e7f3      	b.n	8004278 <_vfiprintf_r+0x44>
 8004290:	2300      	movs	r3, #0
 8004292:	9309      	str	r3, [sp, #36]	@ 0x24
 8004294:	2320      	movs	r3, #32
 8004296:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800429a:	2330      	movs	r3, #48	@ 0x30
 800429c:	f04f 0901 	mov.w	r9, #1
 80042a0:	f8cd 800c 	str.w	r8, [sp, #12]
 80042a4:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8004450 <_vfiprintf_r+0x21c>
 80042a8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80042ac:	4623      	mov	r3, r4
 80042ae:	469a      	mov	sl, r3
 80042b0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80042b4:	b10a      	cbz	r2, 80042ba <_vfiprintf_r+0x86>
 80042b6:	2a25      	cmp	r2, #37	@ 0x25
 80042b8:	d1f9      	bne.n	80042ae <_vfiprintf_r+0x7a>
 80042ba:	ebba 0b04 	subs.w	fp, sl, r4
 80042be:	d00b      	beq.n	80042d8 <_vfiprintf_r+0xa4>
 80042c0:	465b      	mov	r3, fp
 80042c2:	4622      	mov	r2, r4
 80042c4:	4629      	mov	r1, r5
 80042c6:	4630      	mov	r0, r6
 80042c8:	f7ff ffa2 	bl	8004210 <__sfputs_r>
 80042cc:	3001      	adds	r0, #1
 80042ce:	f000 80a7 	beq.w	8004420 <_vfiprintf_r+0x1ec>
 80042d2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80042d4:	445a      	add	r2, fp
 80042d6:	9209      	str	r2, [sp, #36]	@ 0x24
 80042d8:	f89a 3000 	ldrb.w	r3, [sl]
 80042dc:	2b00      	cmp	r3, #0
 80042de:	f000 809f 	beq.w	8004420 <_vfiprintf_r+0x1ec>
 80042e2:	2300      	movs	r3, #0
 80042e4:	f04f 32ff 	mov.w	r2, #4294967295
 80042e8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80042ec:	f10a 0a01 	add.w	sl, sl, #1
 80042f0:	9304      	str	r3, [sp, #16]
 80042f2:	9307      	str	r3, [sp, #28]
 80042f4:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80042f8:	931a      	str	r3, [sp, #104]	@ 0x68
 80042fa:	4654      	mov	r4, sl
 80042fc:	2205      	movs	r2, #5
 80042fe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004302:	4853      	ldr	r0, [pc, #332]	@ (8004450 <_vfiprintf_r+0x21c>)
 8004304:	f7fe f9b9 	bl	800267a <memchr>
 8004308:	9a04      	ldr	r2, [sp, #16]
 800430a:	b9d8      	cbnz	r0, 8004344 <_vfiprintf_r+0x110>
 800430c:	06d1      	lsls	r1, r2, #27
 800430e:	bf44      	itt	mi
 8004310:	2320      	movmi	r3, #32
 8004312:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004316:	0713      	lsls	r3, r2, #28
 8004318:	bf44      	itt	mi
 800431a:	232b      	movmi	r3, #43	@ 0x2b
 800431c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004320:	f89a 3000 	ldrb.w	r3, [sl]
 8004324:	2b2a      	cmp	r3, #42	@ 0x2a
 8004326:	d015      	beq.n	8004354 <_vfiprintf_r+0x120>
 8004328:	4654      	mov	r4, sl
 800432a:	2000      	movs	r0, #0
 800432c:	f04f 0c0a 	mov.w	ip, #10
 8004330:	9a07      	ldr	r2, [sp, #28]
 8004332:	4621      	mov	r1, r4
 8004334:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004338:	3b30      	subs	r3, #48	@ 0x30
 800433a:	2b09      	cmp	r3, #9
 800433c:	d94b      	bls.n	80043d6 <_vfiprintf_r+0x1a2>
 800433e:	b1b0      	cbz	r0, 800436e <_vfiprintf_r+0x13a>
 8004340:	9207      	str	r2, [sp, #28]
 8004342:	e014      	b.n	800436e <_vfiprintf_r+0x13a>
 8004344:	eba0 0308 	sub.w	r3, r0, r8
 8004348:	fa09 f303 	lsl.w	r3, r9, r3
 800434c:	4313      	orrs	r3, r2
 800434e:	46a2      	mov	sl, r4
 8004350:	9304      	str	r3, [sp, #16]
 8004352:	e7d2      	b.n	80042fa <_vfiprintf_r+0xc6>
 8004354:	9b03      	ldr	r3, [sp, #12]
 8004356:	1d19      	adds	r1, r3, #4
 8004358:	681b      	ldr	r3, [r3, #0]
 800435a:	9103      	str	r1, [sp, #12]
 800435c:	2b00      	cmp	r3, #0
 800435e:	bfbb      	ittet	lt
 8004360:	425b      	neglt	r3, r3
 8004362:	f042 0202 	orrlt.w	r2, r2, #2
 8004366:	9307      	strge	r3, [sp, #28]
 8004368:	9307      	strlt	r3, [sp, #28]
 800436a:	bfb8      	it	lt
 800436c:	9204      	strlt	r2, [sp, #16]
 800436e:	7823      	ldrb	r3, [r4, #0]
 8004370:	2b2e      	cmp	r3, #46	@ 0x2e
 8004372:	d10a      	bne.n	800438a <_vfiprintf_r+0x156>
 8004374:	7863      	ldrb	r3, [r4, #1]
 8004376:	2b2a      	cmp	r3, #42	@ 0x2a
 8004378:	d132      	bne.n	80043e0 <_vfiprintf_r+0x1ac>
 800437a:	9b03      	ldr	r3, [sp, #12]
 800437c:	3402      	adds	r4, #2
 800437e:	1d1a      	adds	r2, r3, #4
 8004380:	681b      	ldr	r3, [r3, #0]
 8004382:	9203      	str	r2, [sp, #12]
 8004384:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8004388:	9305      	str	r3, [sp, #20]
 800438a:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8004454 <_vfiprintf_r+0x220>
 800438e:	2203      	movs	r2, #3
 8004390:	4650      	mov	r0, sl
 8004392:	7821      	ldrb	r1, [r4, #0]
 8004394:	f7fe f971 	bl	800267a <memchr>
 8004398:	b138      	cbz	r0, 80043aa <_vfiprintf_r+0x176>
 800439a:	2240      	movs	r2, #64	@ 0x40
 800439c:	9b04      	ldr	r3, [sp, #16]
 800439e:	eba0 000a 	sub.w	r0, r0, sl
 80043a2:	4082      	lsls	r2, r0
 80043a4:	4313      	orrs	r3, r2
 80043a6:	3401      	adds	r4, #1
 80043a8:	9304      	str	r3, [sp, #16]
 80043aa:	f814 1b01 	ldrb.w	r1, [r4], #1
 80043ae:	2206      	movs	r2, #6
 80043b0:	4829      	ldr	r0, [pc, #164]	@ (8004458 <_vfiprintf_r+0x224>)
 80043b2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80043b6:	f7fe f960 	bl	800267a <memchr>
 80043ba:	2800      	cmp	r0, #0
 80043bc:	d03f      	beq.n	800443e <_vfiprintf_r+0x20a>
 80043be:	4b27      	ldr	r3, [pc, #156]	@ (800445c <_vfiprintf_r+0x228>)
 80043c0:	bb1b      	cbnz	r3, 800440a <_vfiprintf_r+0x1d6>
 80043c2:	9b03      	ldr	r3, [sp, #12]
 80043c4:	3307      	adds	r3, #7
 80043c6:	f023 0307 	bic.w	r3, r3, #7
 80043ca:	3308      	adds	r3, #8
 80043cc:	9303      	str	r3, [sp, #12]
 80043ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80043d0:	443b      	add	r3, r7
 80043d2:	9309      	str	r3, [sp, #36]	@ 0x24
 80043d4:	e76a      	b.n	80042ac <_vfiprintf_r+0x78>
 80043d6:	460c      	mov	r4, r1
 80043d8:	2001      	movs	r0, #1
 80043da:	fb0c 3202 	mla	r2, ip, r2, r3
 80043de:	e7a8      	b.n	8004332 <_vfiprintf_r+0xfe>
 80043e0:	2300      	movs	r3, #0
 80043e2:	f04f 0c0a 	mov.w	ip, #10
 80043e6:	4619      	mov	r1, r3
 80043e8:	3401      	adds	r4, #1
 80043ea:	9305      	str	r3, [sp, #20]
 80043ec:	4620      	mov	r0, r4
 80043ee:	f810 2b01 	ldrb.w	r2, [r0], #1
 80043f2:	3a30      	subs	r2, #48	@ 0x30
 80043f4:	2a09      	cmp	r2, #9
 80043f6:	d903      	bls.n	8004400 <_vfiprintf_r+0x1cc>
 80043f8:	2b00      	cmp	r3, #0
 80043fa:	d0c6      	beq.n	800438a <_vfiprintf_r+0x156>
 80043fc:	9105      	str	r1, [sp, #20]
 80043fe:	e7c4      	b.n	800438a <_vfiprintf_r+0x156>
 8004400:	4604      	mov	r4, r0
 8004402:	2301      	movs	r3, #1
 8004404:	fb0c 2101 	mla	r1, ip, r1, r2
 8004408:	e7f0      	b.n	80043ec <_vfiprintf_r+0x1b8>
 800440a:	ab03      	add	r3, sp, #12
 800440c:	9300      	str	r3, [sp, #0]
 800440e:	462a      	mov	r2, r5
 8004410:	4630      	mov	r0, r6
 8004412:	4b13      	ldr	r3, [pc, #76]	@ (8004460 <_vfiprintf_r+0x22c>)
 8004414:	a904      	add	r1, sp, #16
 8004416:	f7fd fbcd 	bl	8001bb4 <_printf_float>
 800441a:	4607      	mov	r7, r0
 800441c:	1c78      	adds	r0, r7, #1
 800441e:	d1d6      	bne.n	80043ce <_vfiprintf_r+0x19a>
 8004420:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004422:	07d9      	lsls	r1, r3, #31
 8004424:	d405      	bmi.n	8004432 <_vfiprintf_r+0x1fe>
 8004426:	89ab      	ldrh	r3, [r5, #12]
 8004428:	059a      	lsls	r2, r3, #22
 800442a:	d402      	bmi.n	8004432 <_vfiprintf_r+0x1fe>
 800442c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800442e:	f7fe f923 	bl	8002678 <__retarget_lock_release_recursive>
 8004432:	89ab      	ldrh	r3, [r5, #12]
 8004434:	065b      	lsls	r3, r3, #25
 8004436:	f53f af1f 	bmi.w	8004278 <_vfiprintf_r+0x44>
 800443a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800443c:	e71e      	b.n	800427c <_vfiprintf_r+0x48>
 800443e:	ab03      	add	r3, sp, #12
 8004440:	9300      	str	r3, [sp, #0]
 8004442:	462a      	mov	r2, r5
 8004444:	4630      	mov	r0, r6
 8004446:	4b06      	ldr	r3, [pc, #24]	@ (8004460 <_vfiprintf_r+0x22c>)
 8004448:	a904      	add	r1, sp, #16
 800444a:	f7fd fe51 	bl	80020f0 <_printf_i>
 800444e:	e7e4      	b.n	800441a <_vfiprintf_r+0x1e6>
 8004450:	08004a28 	.word	0x08004a28
 8004454:	08004a2e 	.word	0x08004a2e
 8004458:	08004a32 	.word	0x08004a32
 800445c:	08001bb5 	.word	0x08001bb5
 8004460:	08004211 	.word	0x08004211

08004464 <__swbuf_r>:
 8004464:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004466:	460e      	mov	r6, r1
 8004468:	4614      	mov	r4, r2
 800446a:	4605      	mov	r5, r0
 800446c:	b118      	cbz	r0, 8004476 <__swbuf_r+0x12>
 800446e:	6a03      	ldr	r3, [r0, #32]
 8004470:	b90b      	cbnz	r3, 8004476 <__swbuf_r+0x12>
 8004472:	f7fd ffe9 	bl	8002448 <__sinit>
 8004476:	69a3      	ldr	r3, [r4, #24]
 8004478:	60a3      	str	r3, [r4, #8]
 800447a:	89a3      	ldrh	r3, [r4, #12]
 800447c:	071a      	lsls	r2, r3, #28
 800447e:	d501      	bpl.n	8004484 <__swbuf_r+0x20>
 8004480:	6923      	ldr	r3, [r4, #16]
 8004482:	b943      	cbnz	r3, 8004496 <__swbuf_r+0x32>
 8004484:	4621      	mov	r1, r4
 8004486:	4628      	mov	r0, r5
 8004488:	f000 f82a 	bl	80044e0 <__swsetup_r>
 800448c:	b118      	cbz	r0, 8004496 <__swbuf_r+0x32>
 800448e:	f04f 37ff 	mov.w	r7, #4294967295
 8004492:	4638      	mov	r0, r7
 8004494:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004496:	6823      	ldr	r3, [r4, #0]
 8004498:	6922      	ldr	r2, [r4, #16]
 800449a:	b2f6      	uxtb	r6, r6
 800449c:	1a98      	subs	r0, r3, r2
 800449e:	6963      	ldr	r3, [r4, #20]
 80044a0:	4637      	mov	r7, r6
 80044a2:	4283      	cmp	r3, r0
 80044a4:	dc05      	bgt.n	80044b2 <__swbuf_r+0x4e>
 80044a6:	4621      	mov	r1, r4
 80044a8:	4628      	mov	r0, r5
 80044aa:	f7ff fd9b 	bl	8003fe4 <_fflush_r>
 80044ae:	2800      	cmp	r0, #0
 80044b0:	d1ed      	bne.n	800448e <__swbuf_r+0x2a>
 80044b2:	68a3      	ldr	r3, [r4, #8]
 80044b4:	3b01      	subs	r3, #1
 80044b6:	60a3      	str	r3, [r4, #8]
 80044b8:	6823      	ldr	r3, [r4, #0]
 80044ba:	1c5a      	adds	r2, r3, #1
 80044bc:	6022      	str	r2, [r4, #0]
 80044be:	701e      	strb	r6, [r3, #0]
 80044c0:	6962      	ldr	r2, [r4, #20]
 80044c2:	1c43      	adds	r3, r0, #1
 80044c4:	429a      	cmp	r2, r3
 80044c6:	d004      	beq.n	80044d2 <__swbuf_r+0x6e>
 80044c8:	89a3      	ldrh	r3, [r4, #12]
 80044ca:	07db      	lsls	r3, r3, #31
 80044cc:	d5e1      	bpl.n	8004492 <__swbuf_r+0x2e>
 80044ce:	2e0a      	cmp	r6, #10
 80044d0:	d1df      	bne.n	8004492 <__swbuf_r+0x2e>
 80044d2:	4621      	mov	r1, r4
 80044d4:	4628      	mov	r0, r5
 80044d6:	f7ff fd85 	bl	8003fe4 <_fflush_r>
 80044da:	2800      	cmp	r0, #0
 80044dc:	d0d9      	beq.n	8004492 <__swbuf_r+0x2e>
 80044de:	e7d6      	b.n	800448e <__swbuf_r+0x2a>

080044e0 <__swsetup_r>:
 80044e0:	b538      	push	{r3, r4, r5, lr}
 80044e2:	4b29      	ldr	r3, [pc, #164]	@ (8004588 <__swsetup_r+0xa8>)
 80044e4:	4605      	mov	r5, r0
 80044e6:	6818      	ldr	r0, [r3, #0]
 80044e8:	460c      	mov	r4, r1
 80044ea:	b118      	cbz	r0, 80044f4 <__swsetup_r+0x14>
 80044ec:	6a03      	ldr	r3, [r0, #32]
 80044ee:	b90b      	cbnz	r3, 80044f4 <__swsetup_r+0x14>
 80044f0:	f7fd ffaa 	bl	8002448 <__sinit>
 80044f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80044f8:	0719      	lsls	r1, r3, #28
 80044fa:	d422      	bmi.n	8004542 <__swsetup_r+0x62>
 80044fc:	06da      	lsls	r2, r3, #27
 80044fe:	d407      	bmi.n	8004510 <__swsetup_r+0x30>
 8004500:	2209      	movs	r2, #9
 8004502:	602a      	str	r2, [r5, #0]
 8004504:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004508:	f04f 30ff 	mov.w	r0, #4294967295
 800450c:	81a3      	strh	r3, [r4, #12]
 800450e:	e033      	b.n	8004578 <__swsetup_r+0x98>
 8004510:	0758      	lsls	r0, r3, #29
 8004512:	d512      	bpl.n	800453a <__swsetup_r+0x5a>
 8004514:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8004516:	b141      	cbz	r1, 800452a <__swsetup_r+0x4a>
 8004518:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800451c:	4299      	cmp	r1, r3
 800451e:	d002      	beq.n	8004526 <__swsetup_r+0x46>
 8004520:	4628      	mov	r0, r5
 8004522:	f7fe ff09 	bl	8003338 <_free_r>
 8004526:	2300      	movs	r3, #0
 8004528:	6363      	str	r3, [r4, #52]	@ 0x34
 800452a:	89a3      	ldrh	r3, [r4, #12]
 800452c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8004530:	81a3      	strh	r3, [r4, #12]
 8004532:	2300      	movs	r3, #0
 8004534:	6063      	str	r3, [r4, #4]
 8004536:	6923      	ldr	r3, [r4, #16]
 8004538:	6023      	str	r3, [r4, #0]
 800453a:	89a3      	ldrh	r3, [r4, #12]
 800453c:	f043 0308 	orr.w	r3, r3, #8
 8004540:	81a3      	strh	r3, [r4, #12]
 8004542:	6923      	ldr	r3, [r4, #16]
 8004544:	b94b      	cbnz	r3, 800455a <__swsetup_r+0x7a>
 8004546:	89a3      	ldrh	r3, [r4, #12]
 8004548:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800454c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004550:	d003      	beq.n	800455a <__swsetup_r+0x7a>
 8004552:	4621      	mov	r1, r4
 8004554:	4628      	mov	r0, r5
 8004556:	f000 f882 	bl	800465e <__smakebuf_r>
 800455a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800455e:	f013 0201 	ands.w	r2, r3, #1
 8004562:	d00a      	beq.n	800457a <__swsetup_r+0x9a>
 8004564:	2200      	movs	r2, #0
 8004566:	60a2      	str	r2, [r4, #8]
 8004568:	6962      	ldr	r2, [r4, #20]
 800456a:	4252      	negs	r2, r2
 800456c:	61a2      	str	r2, [r4, #24]
 800456e:	6922      	ldr	r2, [r4, #16]
 8004570:	b942      	cbnz	r2, 8004584 <__swsetup_r+0xa4>
 8004572:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8004576:	d1c5      	bne.n	8004504 <__swsetup_r+0x24>
 8004578:	bd38      	pop	{r3, r4, r5, pc}
 800457a:	0799      	lsls	r1, r3, #30
 800457c:	bf58      	it	pl
 800457e:	6962      	ldrpl	r2, [r4, #20]
 8004580:	60a2      	str	r2, [r4, #8]
 8004582:	e7f4      	b.n	800456e <__swsetup_r+0x8e>
 8004584:	2000      	movs	r0, #0
 8004586:	e7f7      	b.n	8004578 <__swsetup_r+0x98>
 8004588:	20000010 	.word	0x20000010

0800458c <_raise_r>:
 800458c:	291f      	cmp	r1, #31
 800458e:	b538      	push	{r3, r4, r5, lr}
 8004590:	4605      	mov	r5, r0
 8004592:	460c      	mov	r4, r1
 8004594:	d904      	bls.n	80045a0 <_raise_r+0x14>
 8004596:	2316      	movs	r3, #22
 8004598:	6003      	str	r3, [r0, #0]
 800459a:	f04f 30ff 	mov.w	r0, #4294967295
 800459e:	bd38      	pop	{r3, r4, r5, pc}
 80045a0:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80045a2:	b112      	cbz	r2, 80045aa <_raise_r+0x1e>
 80045a4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80045a8:	b94b      	cbnz	r3, 80045be <_raise_r+0x32>
 80045aa:	4628      	mov	r0, r5
 80045ac:	f000 f830 	bl	8004610 <_getpid_r>
 80045b0:	4622      	mov	r2, r4
 80045b2:	4601      	mov	r1, r0
 80045b4:	4628      	mov	r0, r5
 80045b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80045ba:	f000 b817 	b.w	80045ec <_kill_r>
 80045be:	2b01      	cmp	r3, #1
 80045c0:	d00a      	beq.n	80045d8 <_raise_r+0x4c>
 80045c2:	1c59      	adds	r1, r3, #1
 80045c4:	d103      	bne.n	80045ce <_raise_r+0x42>
 80045c6:	2316      	movs	r3, #22
 80045c8:	6003      	str	r3, [r0, #0]
 80045ca:	2001      	movs	r0, #1
 80045cc:	e7e7      	b.n	800459e <_raise_r+0x12>
 80045ce:	2100      	movs	r1, #0
 80045d0:	4620      	mov	r0, r4
 80045d2:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80045d6:	4798      	blx	r3
 80045d8:	2000      	movs	r0, #0
 80045da:	e7e0      	b.n	800459e <_raise_r+0x12>

080045dc <raise>:
 80045dc:	4b02      	ldr	r3, [pc, #8]	@ (80045e8 <raise+0xc>)
 80045de:	4601      	mov	r1, r0
 80045e0:	6818      	ldr	r0, [r3, #0]
 80045e2:	f7ff bfd3 	b.w	800458c <_raise_r>
 80045e6:	bf00      	nop
 80045e8:	20000010 	.word	0x20000010

080045ec <_kill_r>:
 80045ec:	b538      	push	{r3, r4, r5, lr}
 80045ee:	2300      	movs	r3, #0
 80045f0:	4d06      	ldr	r5, [pc, #24]	@ (800460c <_kill_r+0x20>)
 80045f2:	4604      	mov	r4, r0
 80045f4:	4608      	mov	r0, r1
 80045f6:	4611      	mov	r1, r2
 80045f8:	602b      	str	r3, [r5, #0]
 80045fa:	f7fd f944 	bl	8001886 <_kill>
 80045fe:	1c43      	adds	r3, r0, #1
 8004600:	d102      	bne.n	8004608 <_kill_r+0x1c>
 8004602:	682b      	ldr	r3, [r5, #0]
 8004604:	b103      	cbz	r3, 8004608 <_kill_r+0x1c>
 8004606:	6023      	str	r3, [r4, #0]
 8004608:	bd38      	pop	{r3, r4, r5, pc}
 800460a:	bf00      	nop
 800460c:	20000330 	.word	0x20000330

08004610 <_getpid_r>:
 8004610:	f7fd b932 	b.w	8001878 <_getpid>

08004614 <__swhatbuf_r>:
 8004614:	b570      	push	{r4, r5, r6, lr}
 8004616:	460c      	mov	r4, r1
 8004618:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800461c:	4615      	mov	r5, r2
 800461e:	2900      	cmp	r1, #0
 8004620:	461e      	mov	r6, r3
 8004622:	b096      	sub	sp, #88	@ 0x58
 8004624:	da0c      	bge.n	8004640 <__swhatbuf_r+0x2c>
 8004626:	89a3      	ldrh	r3, [r4, #12]
 8004628:	2100      	movs	r1, #0
 800462a:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800462e:	bf14      	ite	ne
 8004630:	2340      	movne	r3, #64	@ 0x40
 8004632:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8004636:	2000      	movs	r0, #0
 8004638:	6031      	str	r1, [r6, #0]
 800463a:	602b      	str	r3, [r5, #0]
 800463c:	b016      	add	sp, #88	@ 0x58
 800463e:	bd70      	pop	{r4, r5, r6, pc}
 8004640:	466a      	mov	r2, sp
 8004642:	f000 f849 	bl	80046d8 <_fstat_r>
 8004646:	2800      	cmp	r0, #0
 8004648:	dbed      	blt.n	8004626 <__swhatbuf_r+0x12>
 800464a:	9901      	ldr	r1, [sp, #4]
 800464c:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8004650:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8004654:	4259      	negs	r1, r3
 8004656:	4159      	adcs	r1, r3
 8004658:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800465c:	e7eb      	b.n	8004636 <__swhatbuf_r+0x22>

0800465e <__smakebuf_r>:
 800465e:	898b      	ldrh	r3, [r1, #12]
 8004660:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004662:	079d      	lsls	r5, r3, #30
 8004664:	4606      	mov	r6, r0
 8004666:	460c      	mov	r4, r1
 8004668:	d507      	bpl.n	800467a <__smakebuf_r+0x1c>
 800466a:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800466e:	6023      	str	r3, [r4, #0]
 8004670:	6123      	str	r3, [r4, #16]
 8004672:	2301      	movs	r3, #1
 8004674:	6163      	str	r3, [r4, #20]
 8004676:	b003      	add	sp, #12
 8004678:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800467a:	466a      	mov	r2, sp
 800467c:	ab01      	add	r3, sp, #4
 800467e:	f7ff ffc9 	bl	8004614 <__swhatbuf_r>
 8004682:	9f00      	ldr	r7, [sp, #0]
 8004684:	4605      	mov	r5, r0
 8004686:	4639      	mov	r1, r7
 8004688:	4630      	mov	r0, r6
 800468a:	f7fe fec7 	bl	800341c <_malloc_r>
 800468e:	b948      	cbnz	r0, 80046a4 <__smakebuf_r+0x46>
 8004690:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004694:	059a      	lsls	r2, r3, #22
 8004696:	d4ee      	bmi.n	8004676 <__smakebuf_r+0x18>
 8004698:	f023 0303 	bic.w	r3, r3, #3
 800469c:	f043 0302 	orr.w	r3, r3, #2
 80046a0:	81a3      	strh	r3, [r4, #12]
 80046a2:	e7e2      	b.n	800466a <__smakebuf_r+0xc>
 80046a4:	89a3      	ldrh	r3, [r4, #12]
 80046a6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80046aa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80046ae:	81a3      	strh	r3, [r4, #12]
 80046b0:	9b01      	ldr	r3, [sp, #4]
 80046b2:	6020      	str	r0, [r4, #0]
 80046b4:	b15b      	cbz	r3, 80046ce <__smakebuf_r+0x70>
 80046b6:	4630      	mov	r0, r6
 80046b8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80046bc:	f000 f81e 	bl	80046fc <_isatty_r>
 80046c0:	b128      	cbz	r0, 80046ce <__smakebuf_r+0x70>
 80046c2:	89a3      	ldrh	r3, [r4, #12]
 80046c4:	f023 0303 	bic.w	r3, r3, #3
 80046c8:	f043 0301 	orr.w	r3, r3, #1
 80046cc:	81a3      	strh	r3, [r4, #12]
 80046ce:	89a3      	ldrh	r3, [r4, #12]
 80046d0:	431d      	orrs	r5, r3
 80046d2:	81a5      	strh	r5, [r4, #12]
 80046d4:	e7cf      	b.n	8004676 <__smakebuf_r+0x18>
	...

080046d8 <_fstat_r>:
 80046d8:	b538      	push	{r3, r4, r5, lr}
 80046da:	2300      	movs	r3, #0
 80046dc:	4d06      	ldr	r5, [pc, #24]	@ (80046f8 <_fstat_r+0x20>)
 80046de:	4604      	mov	r4, r0
 80046e0:	4608      	mov	r0, r1
 80046e2:	4611      	mov	r1, r2
 80046e4:	602b      	str	r3, [r5, #0]
 80046e6:	f7fd f92d 	bl	8001944 <_fstat>
 80046ea:	1c43      	adds	r3, r0, #1
 80046ec:	d102      	bne.n	80046f4 <_fstat_r+0x1c>
 80046ee:	682b      	ldr	r3, [r5, #0]
 80046f0:	b103      	cbz	r3, 80046f4 <_fstat_r+0x1c>
 80046f2:	6023      	str	r3, [r4, #0]
 80046f4:	bd38      	pop	{r3, r4, r5, pc}
 80046f6:	bf00      	nop
 80046f8:	20000330 	.word	0x20000330

080046fc <_isatty_r>:
 80046fc:	b538      	push	{r3, r4, r5, lr}
 80046fe:	2300      	movs	r3, #0
 8004700:	4d05      	ldr	r5, [pc, #20]	@ (8004718 <_isatty_r+0x1c>)
 8004702:	4604      	mov	r4, r0
 8004704:	4608      	mov	r0, r1
 8004706:	602b      	str	r3, [r5, #0]
 8004708:	f7fd f92b 	bl	8001962 <_isatty>
 800470c:	1c43      	adds	r3, r0, #1
 800470e:	d102      	bne.n	8004716 <_isatty_r+0x1a>
 8004710:	682b      	ldr	r3, [r5, #0]
 8004712:	b103      	cbz	r3, 8004716 <_isatty_r+0x1a>
 8004714:	6023      	str	r3, [r4, #0]
 8004716:	bd38      	pop	{r3, r4, r5, pc}
 8004718:	20000330 	.word	0x20000330

0800471c <_init>:
 800471c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800471e:	bf00      	nop
 8004720:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004722:	bc08      	pop	{r3}
 8004724:	469e      	mov	lr, r3
 8004726:	4770      	bx	lr

08004728 <_fini>:
 8004728:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800472a:	bf00      	nop
 800472c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800472e:	bc08      	pop	{r3}
 8004730:	469e      	mov	lr, r3
 8004732:	4770      	bx	lr
